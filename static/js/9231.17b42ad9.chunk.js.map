{"version":3,"file":"static/js/9231.17b42ad9.chunk.js","mappings":"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","sources":["components/Referal.jsx","components/Space.jsx","components/Store.jsx","components/MarketPlace.jsx","components/SpacePanel.jsx","components/BuySpace.jsx","components/RigthPanel.jsx","pages/Dashboard.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { useChainId, useAccount, useReadContract } from \"wagmi\"\r\nimport { zeroAddress } from \"viem\"\r\nimport toast from \"react-hot-toast\"\r\nimport { ethers } from \"ethers\"\r\nimport { Copy, Users, Coins, Share2, Gift } from \"lucide-react\"\r\n\r\nimport { BASE_NET, MINER_ADDRESS_BASE, MINER_ADDRESS_MAIN } from \"../config\"\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\"\r\n\r\nexport default function Referral() {\r\n  const chainId = useChainId()\r\n  const { isConnected, address } = useAccount()\r\n\r\n  const [referralLink, setReferralLink] = useState(\"\")\r\n  const [copied, setCopied] = useState(false)\r\n\r\n  const { data: referredUsers, refetch: refetchReferredUsers } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getReferrals\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  })\r\n\r\n  const { data: referralBonusPaid, refetch: refetchReferralBonusPaid } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"referralBonusPaid\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  })\r\n\r\n  console.log(\"eagle referredUsers = \", referralBonusPaid)\r\n\r\n  useEffect(() => {\r\n    if (!isConnected || !address) return\r\n\r\n    setReferralLink(`${window.location.origin}?ref=${address}`)\r\n  }, [address])\r\n\r\n  const handleCopy = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(referralLink)\r\n      toast.success(\"Referral link copied!\")\r\n      setCopied(true)\r\n      setTimeout(() => setCopied(false), 2000)\r\n    } catch (err) {\r\n      console.error(\"Failed to copy:\", err)\r\n      toast.error(\"Failed to copy link\")\r\n    }\r\n  }\r\n\r\n  const formatEarnings = (value: any) => {\r\n    if (!value) return \"0.00\"\r\n    try {\r\n      return Number.parseFloat(ethers.formatEther(value)).toFixed(2)\r\n    } catch {\r\n      return \"0.00\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 text-white bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900\">\r\n      <div className=\"max-w-md mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-4\">\r\n          <div className=\"inline-flex items-center justify-center w-12 h-12 bg-gradient-to-r from-yellow-500 to-orange-400 rounded-full mb-2\">\r\n            <Gift className=\"w-6 h-6 text-slate-900\" />\r\n          </div>\r\n          <h2 className=\"text-xl font-bold mb-1 bg-gradient-to-r from-yellow-400 to-orange-400 bg-clip-text text-transparent\">\r\n            REFER A FRIEND\r\n          </h2>\r\n          <p className=\"text-slate-300 text-xs leading-relaxed\">\r\n            Share your link and earn <span className=\"text-yellow-400 font-bold\">5.0%</span> bonus!\r\n          </p>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-2 gap-3 mb-4\">\r\n          <div className=\"bg-[#122533] rounded-lg p-4 border border-slate-700/50 hover:border-yellow-400/30 transition-all duration-300\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <Users className=\"w-4 h-4 text-yellow-400\" />\r\n              <div className=\"w-1.5 h-1.5 bg-green-400 rounded-full animate-pulse\"></div>\r\n            </div>\r\n            <p className=\"text-slate-400 text-xs uppercase tracking-wide mb-1\">Referrals</p>\r\n            <p className=\"text-xl font-bold text-yellow-400\">{referredUsers ? referredUsers.length : 0}</p>\r\n          </div>\r\n\r\n          <div className=\"bg-[#122533] rounded-lg p-4 border border-slate-700/50 hover:border-yellow-400/30 transition-all duration-300\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <Coins className=\"w-4 h-4 text-yellow-400\" />\r\n              <div className=\"w-1.5 h-1.5 bg-yellow-400 rounded-full animate-pulse\"></div>\r\n            </div>\r\n            <p className=\"text-slate-400 text-xs uppercase tracking-wide mb-1\">Earned</p>\r\n            <p className=\"text-xl font-bold text-yellow-400\">\r\n              {formatEarnings(referralBonusPaid)} <span className=\"text-xs text-slate-400\">$HASH</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Connection Status */}\r\n        {!isConnected && (\r\n          <div className=\"bg-red-500/10 border border-red-500/20 rounded-lg p-3 mb-4\">\r\n            <p className=\"text-red-400 text-xs font-semibold text-center\">Connect wallet to view referral data</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Referral Link */}\r\n        <div className=\"bg-[#122533] rounded-lg p-4 border border-slate-700/50 mb-4\">\r\n          <div className=\"flex items-center gap-2 mb-3\">\r\n            <Share2 className=\"w-4 h-4 text-yellow-400\" />\r\n            <h3 className=\"text-xs font-semibold text-slate-200 uppercase tracking-wide\">Referral Link</h3>\r\n          </div>\r\n\r\n          <div className=\"bg-slate-800/50 rounded p-3 border border-slate-600/30\">\r\n            <div className=\"flex items-center justify-between gap-2\">\r\n              <span className=\"text-xs text-slate-300 break-all font-mono bg-slate-900/50 px-2 py-1 rounded flex-1\">\r\n                {referralLink || \"Connect wallet to generate link\"}\r\n              </span>\r\n              <button\r\n                onClick={handleCopy}\r\n                disabled={!referralLink}\r\n                className={`flex items-center gap-1 px-3 py-1 rounded font-semibold text-xs transition-all duration-200 ${\r\n                  copied\r\n                    ? \"bg-green-500 text-white\"\r\n                    : referralLink\r\n                      ? \"bg-gradient-to-r from-yellow-500 to-orange-400 text-slate-900 hover:from-yellow-400 hover:to-orange-300\"\r\n                      : \"bg-slate-600 text-slate-400 cursor-not-allowed\"\r\n                }`}\r\n              >\r\n                <Copy className=\"w-3 h-3\" />\r\n                {copied ? \"COPIED!\" : \"COPY\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bonus Info */}\r\n        <div className=\"bg-gradient-to-r from-yellow-500/10 to-orange-400/10 border border-yellow-400/20 rounded-lg p-3 mb-4\">\r\n          <div className=\"text-center\">\r\n            <div className=\"inline-flex items-center gap-1 text-yellow-400 mb-1\">\r\n              <Gift className=\"w-3 h-3\" />\r\n              <span className=\"text-xs font-semibold\">5% BONUS STRUCTURE</span>\r\n            </div>\r\n            <p className=\"text-slate-300 text-xs\">Earn from all $HASH mined by referrals</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Network Info - Compact */}\r\n        {/* {isConnected && (\r\n          <div className=\"bg-slate-800/30 rounded-lg p-3 mb-4 border border-slate-700/30\">\r\n            <div className=\"flex items-center justify-between text-xs\">\r\n              <span className=\"text-slate-400\">\r\n                {chainId === BASE_NET ? \"Testnet\" : \"Mainnet\"} � {`${address?.slice(0, 6)}...${address?.slice(-4)}`}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )} */}\r\n\r\n        {/* Close Button */}\r\n        {/* <button className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:from-yellow-400 hover:to-orange-300 text-slate-900 font-bold py-3 px-6 rounded-lg text-sm transition-all duration-300 hover:scale-105\">\r\n          CLOSE\r\n        </button> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport ImgHumar1 from '../assets/images/miners/leaf.png'\r\nimport ImgHumar2 from '../assets/images/miners/steel.png'\r\nimport ImgHumar3 from '../assets/images/miners/diamond.png'\r\nimport '../index.css'\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract, useDisconnect } from \"wagmi\";\r\nimport { useConnectModal } from \"@rainbow-me/rainbowkit\";\r\nimport {\r\n  MINER_ADDRESS_MAIN,\r\n  MINER_ADDRESS_BASE,\r\n  HASH_ADDRESS_BASE,\r\n  HASH_ADDRESS_MAIN,\r\n  BASE_NET,\r\n  UNIT256_MAX\r\n} from \"../config\"\r\nimport HashAbi from \"../config/abis/HASH_ABI.json\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { zeroAddress } from \"viem\";\r\nimport toast from \"react-hot-toast\";\r\nimport { ethers } from \"ethers\";\r\n\r\nexport default function Space() {\r\n  const [activeItem, setActiveItem] = useState()\r\n  const [selectedItem, setSelectedItem] = useState(-1)\r\n  const [selectedAvailableItem, setSelectedAvailableItem] = useState(-1)\r\n\r\n  const [isUpgradingSpace, setIsUpgradingSpace] = useState(false);\r\n  const [isUpgradingMiner, setIsUpgradingMiner] = useState([]);\r\n  const [isStopingMiner, setIsStopingMiner] = useState([]);\r\n  const [isStartingMiner, setIsStartingMiner] = useState(false);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showStartMiningModal, setShowStartMiningModal] = useState(false);\r\n\r\n  const { data: txResult, writeContractAsync } = useWriteContract();\r\n\r\n  const { openConnectModal } = useConnectModal();\r\n  const { disconnect } = useDisconnect();\r\n\r\n  const chainId = useChainId();\r\n  const { isConnected, address } = useAccount();\r\n  const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n  ////////HASH//////////////////////////////////////\r\n  const { data: tokenBalance, refetch: refetchTokenBalance } = useReadContract({\r\n    address: chainId === BASE_NET ? HASH_ADDRESS_BASE : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"balanceOf\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: approvedTokenAmount, refetch: refetchApprovedTokenAmount } = useReadContract({\r\n    address: chainId === BASE_NET ? HASH_ADDRESS_BASE : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"allowance\",\r\n    args: [isConnected ? address : zeroAddress, chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN],\r\n    chainId: chainId,\r\n  });\r\n\r\n  /////// Miner //////////////////////////////////\r\n  const { data: playerMinersPaginated, refetch: refetchPlayerMinersPaginated } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getPlayerMinersPaginated\",\r\n    args: [isConnected ? address : zeroAddress, 0, isConnected ? 100 : 0],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: ownerToFacility, refetch: refetchOwnerToFacility } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"ownerToFacility\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: getAmountFor2, refetch: refetchGetAmountFor2 } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['25000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: getAmountFor3, refetch: refetchGetAmountFor3 } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['100000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: leafCost, refetch: refetchLeafCost } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['2500000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: steelCost, refetch: refetchSteelCost } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['25000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: diamondCost, refetch: refetchDiamondCost } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['250000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: timeUntilNextFacilityUpgrade, refetch: refetchTimeUntilNextFacilityUpgrade } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"timeUntilNextFacilityUpgrade\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n  const { data: isTokenTradeable, refetch: refetchIsTokenTradeable } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"isTokenTradeable\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: levelUpPrice, refetch: refetchLevelUpPrice } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: [activeItem ? activeItem?.cost : '0'],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const playerMiners = !(playerMinersPaginated && playerMinersPaginated?.length > 0) ? [] : playerMinersPaginated.filter(item => Number(item.x) !== 100);\r\n  const availableMiners = !(playerMinersPaginated && playerMinersPaginated?.length > 0) ? [] : playerMinersPaginated.filter(item => Number(item.x) === 100 && !item.isListedSell);\r\n\r\n  useState(() => {\r\n    if (!activeItem) return;\r\n\r\n    refetchLevelUpPrice();\r\n  }, [activeItem]);\r\n\r\n  const formatNextClaimTime = (countDown) => {\r\n    // If can claim now\r\n    if (countDown <= 0) {\r\n      return \"Available now!\";\r\n    }\r\n\r\n    // Calculate hours, minutes\r\n    const diffHrs = Math.floor(countDown / (60 * 60));\r\n    const diffMins = Math.floor((countDown % (60 * 60)) / (60));\r\n\r\n    return `${diffHrs}h ${diffMins}m`;\r\n  };\r\n\r\n  const handleUpgradeSpace = async () => {\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      return;\r\n    }\r\n    if (!isTokenTradeable) {\r\n      toast.error(\"$HASH is not available yet!\");\r\n      return;\r\n    }\r\n    if (Number(timeUntilNextFacilityUpgrade) > 0) {\r\n      toast.error(`Please wait cooldown time: ${formatNextClaimTime(Number(timeUntilNextFacilityUpgrade))}`);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      return;\r\n    }\r\n    const tokenAmount = Number(ownerToFacility[1]) === 3 ? ethers.formatEther(getAmountFor2) : ethers.formatEther(getAmountFor3);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(tokenBalance)) < parseFloat(tokenAmount)) {\r\n      toast.error(\"Insufficient token amount.\");\r\n      return;\r\n    }\r\n    setIsUpgradingSpace(true);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(approvedTokenAmount)) < parseFloat(tokenAmount)) {\r\n      await writeContractAsync({\r\n        address: chainId === BASE_NET ? HASH_ADDRESS_BASE : HASH_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"approve\",\r\n        args: [chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN, UNIT256_MAX],\r\n        value: '0'\r\n      })\r\n        .then(() => {\r\n          setIsUpgradingSpace(false);\r\n        })\r\n        .catch((err) => {\r\n          setIsUpgradingSpace(false);\r\n        });\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"buyNewFacility\",\r\n      args: [],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsUpgradingSpace(false);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsUpgradingSpace(false);\r\n      });\r\n  }\r\n\r\n  const handleUpgradeLevel = async (minerId) => {\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      return;\r\n    }\r\n    if (!isTokenTradeable) {\r\n      toast.error(\"$HASH is not available yet!\");\r\n      return;\r\n    }\r\n    const miner = playerMiners.find(i => i.id.toString() === minerId.toString());\r\n    if (miner.level.toString() === \"5\") {\r\n      toast.error(\"Miner is already at max level.\");\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      return;\r\n    }\r\n    const minerIndex = Number(miner.minerIndex).toString();\r\n    const tokenAmount = minerIndex === \"3\" ? ethers.formatEther(diamondCost) : minerIndex === \"2\" ? ethers.formatEther(steelCost) : ethers.formatEther(leafCost);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(tokenBalance)) < parseFloat(tokenAmount)) {\r\n      toast.error(\"Insufficient token amount.\");\r\n      return;\r\n    }\r\n    let temp = isUpgradingMiner;\r\n    temp[minerId] = true;\r\n    setIsUpgradingMiner(temp);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(approvedTokenAmount)) < parseFloat(tokenAmount)) {\r\n      await writeContractAsync({\r\n        address: chainId === BASE_NET ? HASH_ADDRESS_BASE : HASH_ADDRESS_MAIN,\r\n        abi: HashAbi,\r\n        functionName: \"approve\",\r\n        args: [chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN, UNIT256_MAX],\r\n        value: '0'\r\n      })\r\n        .then(() => {\r\n          temp[minerId] = false;\r\n          setIsUpgradingMiner(temp);\r\n        })\r\n        .catch((err) => {\r\n          temp[minerId] = false;\r\n          setIsUpgradingMiner(temp);\r\n        });\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"updateMiner\",\r\n      args: [minerId],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          temp[minerId] = false;\r\n          setIsUpgradingMiner(temp);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        temp[minerId] = false;\r\n        setIsUpgradingMiner(temp);\r\n      });\r\n  }\r\n\r\n  const handleStopMining = async (minerId) => {\r\n    let temp = isStopingMiner;\r\n    temp[minerId] = true;\r\n    setIsStopingMiner(temp);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      temp[minerId] = false;\r\n      setIsStopingMiner(temp);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      temp[minerId] = false;\r\n      setIsStopingMiner(temp);\r\n      return;\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"stopMining\",\r\n      args: [minerId],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          temp[minerId] = false;\r\n          setIsStopingMiner(temp);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        temp[minerId] = false;\r\n        setIsStopingMiner(temp);\r\n      });\r\n  }\r\n\r\n  const handleStartMining = async () => {\r\n    setIsStartingMiner(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsStartingMiner(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsStartingMiner(false);\r\n      return;\r\n    }\r\n    if (!availableMiners[selectedAvailableItem]?.id.toString()) {\r\n      toast.error(\"Please select or buy a miner to start mining.\");\r\n      setIsStartingMiner(false);\r\n      return;\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"startMining\",\r\n      args: [availableMiners[selectedAvailableItem]?.id.toString(), selectedItem],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsStartingMiner(false);\r\n          setShowStartMiningModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsStartingMiner(false);\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-span-2 rounded-b-lg space-y-6 p-4 bg-[#1B2531]\">\r\n      <div className=\"flex justify-between\">\r\n        <div className=\"space-y-2 w-1/2 text-xl\">\r\n          <div className=\"text-yellow-400 font-medium\">ID: #{activeItem?.id.toString() ?? \"-\"}</div>\r\n          <div className=\"text-yellow-400 font-medium\">Level: {activeItem?.level.toString() ?? \"-\"}</div>\r\n          <div className=\"text-yellow-400 font-medium\">Level Up Price: {activeItem ? parseFloat(ethers.formatUnits(levelUpPrice, 18)).toFixed(2) : \"-\"} $HASH</div>\r\n          <div className=\"text-yellow-400 font-medium\" onClick={() => console.log(activeItem)}>Power: {activeItem ? (activeItem?.hashrate * activeItem?.level).toString() : \"-\"} GH</div>\r\n        </div>\r\n        {activeItem?.id.toString() ? <div className=\"bg-black w-1/2 rounded-lg border border-slate-600 p-2 aspect-square max-w-28 max-h-28\">\r\n          <div className=\"relative w-full h-full\">\r\n            <div className=\"absolute top-1 left-1 text-xs text-yellow-400 font-bold\">#{activeItem?.id.toString() ?? \"—\"}</div>\r\n            <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {activeItem?.level.toString() ?? \"—\"}</div>\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                <img src={activeItem?.minerIndex.toString() === \"1\" ? ImgHumar1 : activeItem?.minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> : <></>}\r\n      </div>\r\n\r\n      {/* <div className=\"border-t border-slate-700/50\"></div> */}\r\n\r\n      {/* \r\n      <div className=\"space-y-3\">\r\n        <h3 className=\"text-white font-medium text-xl\">Move Miner</h3>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <span className=\"text-white text-xl mr-3\">A</span>\r\n          <div className=\"flex items-center justify-center\">\r\n            <img src={LeftArrow} alt=\"\" className=\"w-[25px]\" />\r\n            <img src={RightArrow} alt=\"\" className=\"w-[25px]\" />\r\n          </div>\r\n          <span className=\"text-white text-xl ml-3\">B</span>\r\n          <button className=\"px-3 py-1 text-xl text-white font-medium\">SWAP</button>\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"border-t border-slate-700/50\"></div>\r\n\r\n      {/* <div className=\"space-y-3\">\r\n        <h3 className=\"text-yellow-400 font-medium text-xl\">Sell Miner</h3>\r\n        <div className=\"flex space-x-2\">\r\n          <div className=\"relative flex-1\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Price\"\r\n              className=\"w-full px-3 text-xl py-2 bg-[#15120D] border-2 border-yellow-500 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:border-yellow-400 pr-12\"\r\n            />\r\n            <span className=\"absolute right-3 text-xl top-1/2 transform -translate-y-1/2 text-yellow-400 font-medium\">ETH</span>\r\n          </div>\r\n          <button className=\"px-4 py-2 text-yellow-500 border-2 border-yellow-500 rounded-lg text-sm font-medium\">LIST</button>\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"grid lg:grid-cols-3 grid-cols-2 gap-3 mt-6 lg:h-[400px] overflow-y-auto p-3\">\r\n        {[null, null, null, null, null, null, null].map((item, index) => (\r\n          <div\r\n            key={index}\r\n            onClick={(event) => {\r\n              setSelectedItem(index);\r\n              // console.log('selectedItem', Number(ownerToFacility[1]));\r\n              if (!(ownerToFacility && index < Number(ownerToFacility[1]))) {\r\n                toast.error(\"Please upgrade space to extand!\")\r\n              } else if (!(playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())))) {\r\n                setActiveItem(null);\r\n                setShowStartMiningModal(true);\r\n              } else {\r\n                setActiveItem(playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())));\r\n              }\r\n            }}\r\n            className={`relative aspect-square flex items-center justify-center bg-black rounded-lg  cursor-pointer transition-all ${playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())) ? \"border-slate-600 border-1\" : \"border-slate-700/50 border-1\"\r\n              } ${index === selectedItem ? \"border-yellow-400 shadow-lg shadow-yellow-400/20 border-4\" : \"border-white border-2\"} ${ownerToFacility && index < Number(ownerToFacility[1]) ? '' : 'opacity-25'}`}\r\n          >\r\n            {playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())) ? (\r\n              <>\r\n                <div className=\"absolute top-1 left-1 text-xs text-white font-bold\">#{playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).id.toString()}</div>\r\n                <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).level.toString()}</div>\r\n                <div className=\"p-2 h-full\">\r\n                  <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                    <img src={playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).minerIndex.toString() === \"1\" ? ImgHumar1 : playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  className=\"absolute bottom-1 mx-auto lg:text-xs text-[12px] text-white bg-slate-700/80 px-1.5 py-0.5 rounded lg:h-6 lg:w-32\"\r\n                  onClick={(event) => {\r\n                    event.stopPropagation();\r\n                    setSelectedItem(index)\r\n                    // console.log(\"okay\", item, index, selectedItem, index === selectedItem, playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())))\r\n                    handleStopMining(playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).id.toString())\r\n                  }}\r\n                >{`${isStopingMiner[playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).id.toString()] ? `Stoping...` : `Stop Mining`}`}</button>\r\n                <button\r\n                  className=\"absolute lg:bottom-0 lg:top-[100px]  top-[61px] mx-auto lg:text-xs text-[12px] text-white bg-slate-700/80 px-1.5 py-0.5 rounded lg:h-6 lg:w-32\"\r\n                  onClick={async (event) => {\r\n                    event.stopPropagation();\r\n                    setSelectedItem(index);\r\n                    handleUpgradeLevel(playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).id.toString())\r\n                  }}\r\n                >{`${isUpgradingMiner[playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).id.toString()] ? `Updating...` : `Update Level`}`}</button>\r\n              </>\r\n            ) : (\r\n              <h2 className=\"text-slate-600 pb-[7px] lg:pb-0 h-fit lg:text-6xl mb-0 text-[26px] font-black\">+</h2>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        className=\"text-xm text-white bg-green-700/80 px-1.5 py-0.5 rounded h-12 w-32\"\r\n        onClick={() => setShowModal(true)}\r\n      >Upgrade Space</button>\r\n      {/* Modal */}\r\n      {showModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n            <h2 className=\"text-[25px] font-bold mb-2 text-white\">UPGRADE SPACE</h2>\r\n            <p className=\"text-sm text-gray-300 mb-2\">Upgrade Space to setup more minor!</p>\r\n            <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n            <p className=\"text-left text-[#F9A82C] font-medium mb-2\">Upgrade Your Space</p>\r\n            <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Space Capacity:</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${Number(ownerToFacility[1])} Miners -> ${Number(ownerToFacility[1]) + 2} Miners`}</span>\r\n              </div>\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Available Miners</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`Leaf ${Number(ownerToFacility[1]) >= 3 ? `, Steel` : ``} ${Number(ownerToFacility[1]) >= 5 ? `, Diamond` : ``} Miners`}</span>\r\n              </div>\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Price</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${Number(ownerToFacility[1]) === 3 ? `${getAmountFor2 ? parseFloat(ethers.formatEther(getAmountFor2)).toFixed(2) : '--'} $Hash` : `${getAmountFor3 ? parseFloat(ethers.formatEther(getAmountFor3)).toFixed(2) : '--'} $Hash`}`}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex justify-between mt-6 gap-4\">\r\n              <button\r\n                onClick={() => setShowModal(false)}\r\n                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleUpgradeSpace}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isUpgradingSpace ? 'Upgrading...' : 'Upgrade Space'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showStartMiningModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n            <h2 className=\"text-[25px] font-bold mb-2 text-white\">Start Mining</h2>\r\n            <p className=\"text-sm text-gray-300 mb-2\">Select miner to start mining!</p>\r\n            {/* <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" /> */}\r\n            <p className=\"text-left text-[#F9A82C] font-medium mb-2\">Available miners</p>\r\n            <div className=\"grid grid-cols-3 gap-3 mt-6 h-[300px] overflow-y-auto p-3\">\r\n              {availableMiners.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  onClick={(event) => {\r\n                    setSelectedAvailableItem(index);\r\n                  }}\r\n                  className={`relative aspect-square flex items-center justify-center bg-black rounded-lg  cursor-pointer transition-all ${index === selectedAvailableItem ? \"border-yellow-400 shadow-lg shadow-yellow-400/20 border-4\" : \"border-white border-2\"}`}\r\n                >\r\n                  <div className=\"absolute top-1 left-1 text-xs text-white font-bold\">#{item.id.toString()}</div>\r\n                  <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {item.level.toString()}</div>\r\n                  <div className=\"p-2 h-full\">\r\n                    <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                      <img src={item.minerIndex.toString() === \"1\" ? ImgHumar1 : item.minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex justify-between mt-6 gap-4\">\r\n              <button\r\n                onClick={() => {\r\n                  setShowStartMiningModal(false)\r\n                }}\r\n                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleStartMining}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isStartingMiner ? 'Starting...' : 'Start Mining'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport { useState, useContext } from \"react\"\r\nimport ImgHumar1 from '../assets/images/miners/leaf.png'\r\nimport ImgHumar2 from '../assets/images/miners/steel.png'\r\nimport ImgHumar3 from '../assets/images/miners/diamond.png'\r\nimport '../index.css'\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract, useDisconnect } from \"wagmi\";\r\nimport { useConnectModal } from \"@rainbow-me/rainbowkit\";\r\nimport { zeroAddress } from \"viem\";\r\nimport toast from \"react-hot-toast\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport {\r\n  MINER_ADDRESS_MAIN,\r\n  MINER_ADDRESS_BASE,\r\n  HASH_ADDRESS_BASE,\r\n  HASH_ADDRESS_MAIN,\r\n  BASE_NET,\r\n  UNIT256_MAX\r\n} from \"../config\"\r\nimport HashAbi from \"../config/abis/HASH_ABI.json\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\n\r\nimport ImgLeaf from \"../assets/images/miners/leaf.png\"\r\nimport ImgSteel from \"../assets/images/miners/steel.png\"\r\nimport ImgDiamond from \"../assets/images/miners/diamond.png\"\r\nimport { RefreshContext } from '../context/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default function Space() {\r\n  const { fastRefresh } = useRefresh();\r\n\r\n  const [activeItem, setActiveItem] = useState()\r\n  const [selectedItem, setSelectedItem] = useState(-1)\r\n\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const [isPurchasingMiner, setIsPurchasingMiner] = useState([]);\r\n  const [isUpgradingMiner, setIsUpgradingMiner] = useState([]);\r\n  const [isListingMiner, setIsListingMiner] = useState(false);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showSellModal, setShowSellModal] = useState(false);\r\n\r\n  const { data: txResult, writeContractAsync } = useWriteContract();\r\n\r\n  const { openConnectModal } = useConnectModal();\r\n  const { disconnect } = useDisconnect();\r\n\r\n  const chainId = useChainId();\r\n  const { isConnected, address } = useAccount();\r\n  const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n  ////////HASH//////////////////////////////////////\r\n  const { data: tokenBalance, refetch: refetchTokenBalance } = useReadContract({\r\n    address: chainId === BASE_NET ? HASH_ADDRESS_BASE : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"balanceOf\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: approvedTokenAmount, refetch: refetchApprovedTokenAmount } = useReadContract({\r\n    address: chainId === BASE_NET ? HASH_ADDRESS_BASE : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"allowance\",\r\n    args: [isConnected ? address : zeroAddress, chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN],\r\n    chainId: chainId,\r\n  });\r\n\r\n  /////// Miner //////////////////////////////////\r\n  const { data: playerMinersPaginated, refetch: refetchPlayerMinersPaginated } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getPlayerMinersPaginated\",\r\n    args: [isConnected ? address : zeroAddress, 0, isConnected ? 100 : 0],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: ownerToFacility, refetch: refetchOwnerToFacility } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"ownerToFacility\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: leafCost, refetch: refetchLeafCost } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['2500000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: steelCost, refetch: refetchSteelCost } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['25000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: diamondCost, refetch: refetchDiamondCost } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['250000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: isTokenTradeable, refetch: refetchIsTokenTradeable } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"isTokenTradeable\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  useState(() => {\r\n    refetchTokenBalance();\r\n    refetchApprovedTokenAmount();\r\n    refetchIsTokenTradeable();\r\n  }, [fastRefresh])\r\n\r\n  const availableMiners = !(playerMinersPaginated && playerMinersPaginated?.length > 0) ? [] : playerMinersPaginated.filter(item => Number(item.x) === 100 && !item.isListedSell);\r\n\r\n  const handleBuyMiner = async (minerIndex) => {\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      return;\r\n    }\r\n    if (!isTokenTradeable) {\r\n      toast.error(\"$HASH is not available yet!\");\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      return;\r\n    }\r\n    const tokenAmount = minerIndex === 1 ? ethers.formatEther(leafCost) : minerIndex === 2 ? ethers.formatEther(steelCost) : ethers.formatEther(diamondCost);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(tokenBalance)) < parseFloat(tokenAmount)) {\r\n      toast.error(\"Insufficient token amount.\");\r\n      return;\r\n    }\r\n\r\n    let temp = isPurchasingMiner;\r\n    temp[minerIndex] = true;\r\n    setIsPurchasingMiner(temp);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(approvedTokenAmount)) < parseFloat(tokenAmount)) {\r\n      await writeContractAsync({\r\n        address: chainId === BASE_NET ? HASH_ADDRESS_BASE : HASH_ADDRESS_MAIN,\r\n        abi: HashAbi,\r\n        functionName: \"approve\",\r\n        args: [chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN, UNIT256_MAX],\r\n        value: '0'\r\n      })\r\n        .then(() => {\r\n          temp[minerIndex] = false;\r\n          setIsPurchasingMiner(temp);\r\n        })\r\n        .catch((err) => {\r\n          temp[minerIndex] = false;\r\n          setIsPurchasingMiner(temp);\r\n        });\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"buyMiner\",\r\n      args: [minerIndex],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          temp[minerIndex] = false;\r\n          setIsPurchasingMiner(temp);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        temp[minerIndex] = false;\r\n        setIsPurchasingMiner(temp);\r\n      });\r\n  }\r\n\r\n  const handleSellMiner = async () => {\r\n    setIsListingMiner(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsListingMiner(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsListingMiner(false);\r\n      return;\r\n    }\r\n    if (price <= 0) {\r\n      toast.error(\"Please input valid price.\");\r\n      setIsListingMiner(false);\r\n      return;\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"listForSale\",\r\n      args: [activeItem?.id, ethers.parseEther(price)],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsListingMiner(false);\r\n          setShowSellModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsListingMiner(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const handleUpgradeLevel = async (minerId) => {\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      return;\r\n    }\r\n    if (!isTokenTradeable) {\r\n      toast.error(\"$HASH is not available yet!\");\r\n      return;\r\n    }\r\n    const miner = availableMiners.find(i => i.id.toString() === minerId.toString());\r\n    if (miner.level.toString() === \"5\") {\r\n      toast.error(\"Miner is already at max level.\");\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      return;\r\n    }\r\n    const minerIndex = Number(miner.minerIndex).toString();\r\n    const tokenAmount = minerIndex === \"3\" ? ethers.formatEther(diamondCost) : minerIndex === \"2\" ? ethers.formatEther(steelCost) : ethers.formatEther(leafCost);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(tokenBalance)) < parseFloat(tokenAmount)) {\r\n      toast.error(\"Insufficient token amount.\");\r\n      return;\r\n    }\r\n\r\n    let temp = isUpgradingMiner;\r\n    temp[minerId] = true;\r\n    setIsUpgradingMiner(temp);\r\n\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(approvedTokenAmount)) < parseFloat(tokenAmount)) {\r\n      console.log(\"Approving token for upgrade...\");\r\n      await writeContractAsync({\r\n        address: chainId === BASE_NET ? HASH_ADDRESS_BASE : HASH_ADDRESS_MAIN,\r\n        abi: HashAbi,\r\n        functionName: \"approve\",\r\n        args: [chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN, UNIT256_MAX],\r\n        value: '0'\r\n      })\r\n        .then(() => {\r\n          temp[minerId] = false;\r\n          setIsUpgradingMiner(temp);\r\n        })\r\n        .catch((err) => {\r\n          temp[minerId] = false;\r\n          setIsUpgradingMiner(temp);\r\n        });\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"updateMiner\",\r\n      args: [minerId]\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          temp[minerId] = false;\r\n          setIsUpgradingMiner(temp);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        temp[minerId] = false;\r\n        setIsUpgradingMiner(temp);\r\n      });\r\n  }\r\n\r\n  const getMinerTypeColor = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return \"text-green-400\"\r\n      case 2:\r\n        return \"text-gray-400\"\r\n      case 3:\r\n        return \"text-blue-400\"\r\n      default:\r\n        return \"text-gray-400\"\r\n    }\r\n  }\r\n\r\n  const getMinerTypeName = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return \"Leaf\"\r\n      case 2:\r\n        return \"Steel\"\r\n      case 3:\r\n        return \"Diamond\"\r\n      default:\r\n        return \"Unknown\"\r\n    }\r\n  }\r\n\r\n  const getMinerImage = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return ImgLeaf\r\n      case 2:\r\n        return ImgSteel\r\n      case 3:\r\n        return ImgDiamond\r\n      default:\r\n        return ImgLeaf\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-span-2 rounded-b-lg space-y-6 p-4 bg-[#1B2531]\">\r\n      <div className=\"flex justify-between\">\r\n        <div className=\"space-y-2 w-1/2 text-xl\">\r\n          <div className=\"text-yellow-400 font-medium\">ID: #{activeItem?.id.toString() ?? \"-\"}</div>\r\n          <div className=\"text-yellow-400 font-medium\">Level: {activeItem?.level.toString() ?? \"-\"}</div>\r\n          <div className=\"text-yellow-400 font-medium\" onClick={() => console.log(activeItem)}>Power: {activeItem ? (activeItem?.hashrate * activeItem?.level).toString() : \"-\"} GH</div>\r\n        </div>\r\n        {activeItem?.id.toString() ? <div className=\"bg-black w-1/2 rounded-lg border border-slate-600 p-2 aspect-square max-w-28 max-h-28\">\r\n          <div className=\"relative w-full h-full\">\r\n            <div className=\"absolute top-1 left-1 text-xs text-yellow-400 font-bold\">#{activeItem?.id.toString() ?? \"—\"}</div>\r\n            <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {activeItem?.level.toString() ?? \"—\"}</div>\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                <img src={activeItem?.minerIndex.toString() === \"1\" ? ImgHumar1 : activeItem?.minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> : <></>}\r\n      </div>\r\n\r\n      {/* <div className=\"border-t border-slate-700/50\"></div> */}\r\n\r\n      {/* \r\n      <div className=\"space-y-3\">\r\n        <h3 className=\"text-white font-medium text-xl\">Move Miner</h3>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <span className=\"text-white text-xl mr-3\">A</span>\r\n          <div className=\"flex items-center justify-center\">\r\n            <img src={LeftArrow} alt=\"\" className=\"w-[25px]\" />\r\n            <img src={RightArrow} alt=\"\" className=\"w-[25px]\" />\r\n          </div>\r\n          <span className=\"text-white text-xl ml-3\">B</span>\r\n          <button className=\"px-3 py-1 text-xl text-white font-medium\">SWAP</button>\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"border-t border-slate-700/50\"></div>\r\n\r\n      {/* <div className=\"space-y-3\">\r\n        <h3 className=\"text-yellow-400 font-medium text-xl\">Sell Miner</h3>\r\n        <div className=\"flex space-x-2\">\r\n          <div className=\"relative flex-1\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Price\"\r\n              className=\"w-full px-3 text-xl py-2 bg-[#15120D] border-2 border-yellow-500 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:border-yellow-400 pr-12\"\r\n            />\r\n            <span className=\"absolute right-3 text-xl top-1/2 transform -translate-y-1/2 text-yellow-400 font-medium\">ETH</span>\r\n          </div>\r\n          <button className=\"px-4 py-2 text-yellow-500 border-2 border-yellow-500 rounded-lg text-sm font-medium\">LIST</button>\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"grid lg:grid-cols-3  grid-cols-2 lg:gap-4 gap-1 mt-6 lg:h-[400px] overflow-y-auto lg:p-3 scrollbar-thin scrollbar-thumb-[#F8A82C]/30 scrollbar-track-transparent\">\r\n        {[null, ...availableMiners].map((item, index) => (\r\n          <div\r\n            key={index}\r\n            onClick={(event) => {\r\n              setSelectedItem(index)\r\n              if (!item) {\r\n                setShowModal(true)\r\n              } else {\r\n                setActiveItem(availableMiners[index - 1])\r\n              }\r\n            }}\r\n            className={`group relative aspect-square flex items-center justify-center bg-[#0000009e] backdrop-blur-sm rounded-xl cursor-pointer transition-all duration-300 hover:scale-105 ${index === selectedItem\r\n              ? \"border-[#F8A82C] shadow-lg shadow-[#F8A82C]/30 border-4\"\r\n              : \"border-gray-600/50 border-2 hover:border-[#F8A82C]/50\"\r\n              }`}\r\n          >\r\n            {item ? (\r\n              <>\r\n                {/* Gradient overlay for miner type */}\r\n                <div\r\n                  className={`absolute inset-0 bg-gradient-to-br ${getMinerTypeColor(\r\n                    item.minerIndex,\r\n                  )} rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300`}\r\n                ></div>\r\n\r\n                {/* Miner ID */}\r\n                <div className=\"absolute top-2 left-2 bg-[#F8A82C]/90 text-black lg:text-xs text-[10px] font-bold px-2 py-1 rounded-full z-10\">\r\n                  #{item?.id.toString()}\r\n                </div>\r\n\r\n                {/* Level Badge */}\r\n                <div className=\"absolute top-2 right-2 bg-gradient-to-r from-[#F9A82C] to-[#FFD100] text-black lg:text-xs text-[10px] font-bold px-2 py-1 rounded-full z-10\">\r\n                  Lv {item?.level.toString()}\r\n                </div>\r\n\r\n                {/* Miner Type Badge */}\r\n                <div className=\"absolute top-10 right-2 bg-black/80 text-[#F8A82C] text-xs font-semibold px-2 py-1 rounded-full z-10\">\r\n                  {getMinerTypeName(item.minerIndex)}\r\n                </div>\r\n\r\n                {/* Miner Image */}\r\n                <div className=\"relative p-4 h-full w-full flex items-center justify-center\">\r\n                  <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                    <img\r\n                      src={getMinerImage(item.minerIndex) || \"/placeholder.svg\"}\r\n                      alt={`${getMinerTypeName(item.minerIndex)} miner`}\r\n                      className=\"max-w-full max-h-full object-contain filter group-hover:brightness-110 transition-all duration-300\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* List Miner Button */}\r\n                <button\r\n                  className=\"absolute lg:bottom-10 bottom-[31px] left-1/2 transform -translate-x-1/2 bg-gradient-to-r from-[#F9A82C] to-[#FFD100] hover:from-[#FFD100] hover:to-[#F9A82C] disabled:from-gray-600 disabled:to-gray-700 text-black disabled:text-gray-400 lg:text-xs text-[12px] font-bold lg:px-3 lg:py-2 py-[2px] mb-1 rounded-lg transition-all duration-300 hover:scale-105 active:scale-95 disabled:hover:scale-100 disabled:cursor-not-allowed w-28 z-10\"\r\n                  onClick={(event) => {\r\n                    event.stopPropagation()\r\n                    setSelectedItem(index)\r\n                    setActiveItem(availableMiners[index - 1])\r\n                    setShowSellModal(true)\r\n                  }}\r\n                  disabled={isListingMiner}\r\n                >\r\n                  {isListingMiner ? (\r\n                    <div className=\"flex items-center justify-center space-x-1\">\r\n                      <svg className=\"animate-spin h-3 w-3\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle\r\n                          className=\"opacity-25\"\r\n                          cx=\"12\"\r\n                          cy=\"12\"\r\n                          r=\"10\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"4\"\r\n                        ></circle>\r\n                        <path\r\n                          className=\"opacity-75\"\r\n                          fill=\"currentColor\"\r\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                        ></path>\r\n                      </svg>\r\n                      <span>Listing...</span>\r\n                    </div>\r\n                  ) : (\r\n                    \"Sell Miner\"\r\n                  )}\r\n                </button>\r\n\r\n                {/* Update Level Button */}\r\n                <button\r\n                  className=\"absolute bottom-2 left-1/2 transform -translate-x-1/2 bg-gray-700/90 hover:bg-gray-600/90 disabled:bg-gray-800/90 text-white disabled:text-gray-500 lg:text-xs text-[12px] font-semibold lg:px-3 lg:py-2 py-[2px] rounded-lg transition-all duration-300 hover:scale-105 active:scale-95 disabled:hover:scale-100 disabled:cursor-not-allowed w-28 z-10\"\r\n                  onClick={(event) => {\r\n                    event.stopPropagation()\r\n                    setActiveItem(availableMiners[index - 1])\r\n                    setSelectedItem(index)\r\n                    handleUpgradeLevel(item?.id.toString())\r\n                  }}\r\n                  disabled={isUpgradingMiner[item?.id]}\r\n                >\r\n                  {isUpgradingMiner[item?.id] ? (\r\n                    <div className=\"flex items-center justify-center space-x-1\">\r\n                      <svg className=\"animate-spin h-3 w-3\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle\r\n                          className=\"opacity-25\"\r\n                          cx=\"12\"\r\n                          cy=\"12\"\r\n                          r=\"10\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"4\"\r\n                        ></circle>\r\n                        <path\r\n                          className=\"opacity-75\"\r\n                          fill=\"currentColor\"\r\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                        ></path>\r\n                      </svg>\r\n                      <span>Updating...</span>\r\n                    </div>\r\n                  ) : (\r\n                    \"Update Level\"\r\n                  )}\r\n                </button>\r\n              </>\r\n            ) : (\r\n              // Buy Miner Card\r\n              <div className=\"flex flex-col items-center justify-center space-y-3 p-4\">\r\n                <div className=\"text-4xl mb-2\">⛏️</div>\r\n                <h2 className=\"text-[#F8A82C] font-bold text-lg lg:text-xl text-center leading-tight\">Buy Miner</h2>\r\n                <div className=\"w-8 h-1 bg-gradient-to-r from-[#F9A82C] to-[#FFD100] rounded-full\"></div>\r\n                <p className=\"text-gray-400 text-xs text-center\">Click to purchase</p>\r\n              </div>\r\n            )}\r\n\r\n            {/* Selection Glow Effect */}\r\n            {index === selectedItem && (\r\n              <div className=\"absolute inset-0 bg-gradient-to-r from-[#F8A82C]/10 to-[#FFD100]/10 rounded-xl pointer-events-none\"></div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* Modal */}\r\n      {showModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n            <h2 className=\"text-[25px] font-bold mb-2 text-white\">BUY MINER</h2>\r\n            <p className=\"text-sm text-gray-300 mb-2\">Buy more miners!</p>\r\n            <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n            <p className=\"text-left text-[#F9A82C] font-medium mb-2\">Miners</p>\r\n            <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Available Spaces</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${ownerToFacility ? Number(ownerToFacility[1]) - Number(ownerToFacility[2]) : `-`}`}</span>\r\n              </div>\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Leaf Miner</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${leafCost ? parseFloat(ethers.formatEther(leafCost)).toFixed(2) : `-`} $Hash`}</span>\r\n              </div>\r\n              {Number(ownerToFacility[1]) > 3 ? <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Steel Miner</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${steelCost ? parseFloat(ethers.formatEther(steelCost)).toFixed(2) : `-`} $Hash`}</span>\r\n              </div> : <></>}\r\n              {Number(ownerToFacility[1]) > 5 ? <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Diamond Miner</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${diamondCost ? parseFloat(ethers.formatEther(diamondCost)).toFixed(2) : `-`} $Hash`}</span>\r\n              </div> : <></>}\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-3 mt-6\">\r\n              <button\r\n                onClick={() => setShowModal(false)}\r\n                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={() => handleBuyMiner(1)}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isPurchasingMiner[1] ? 'Purchasing...' : 'Buy Leaf Miner'}\r\n              </button>\r\n              {Number(ownerToFacility[1]) > 3 ? <button\r\n                onClick={() => handleBuyMiner(2)}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isPurchasingMiner[2] ? 'Purchasing...' : 'Buy Steel Miner'}\r\n              </button> : <></>}\r\n              {Number(ownerToFacility[1]) > 5 ? <button\r\n                onClick={() => handleBuyMiner(3)}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isPurchasingMiner[3] ? 'Purchasing...' : 'Buy Diamond Miner'}\r\n              </button> : <></>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal */}\r\n      {showSellModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n            <h2 className=\"text-[25px] font-bold mb-2 text-white\">Sell Miner</h2>\r\n            <p className=\"text-sm text-gray-300 mb-2\">List your miner on marketplace!</p>\r\n            <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n            <p className=\"text-left text-[#F9A82C] font-medium mb-2\">Miners</p>\r\n            <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n              <div className=\"relative flex-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Price\"\r\n                  className=\"w-full px-3 text-xl py-2 bg-[#15120D] border-2 border-yellow-500 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:border-yellow-400 pr-12\"\r\n                  onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    if (!isNaN(value) && value >= 0) {\r\n                      setPrice(value);\r\n                    } else {\r\n                      toast.error(\"Please enter a valid price.\");\r\n                    }\r\n                  }}\r\n                />\r\n                <span className=\"absolute right-3 text-xl top-1/2 transform -translate-y-1/2 text-yellow-400 font-medium\">ETH</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-3 mt-6\">\r\n              <button\r\n                onClick={() => setShowSellModal(false)}\r\n                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={() => handleSellMiner()}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isListingMiner ? 'Listing...' : 'List Miner'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { useChainId, useAccount, useReadContract, useWriteContract, useBalance } from \"wagmi\"\r\nimport { zeroAddress } from \"viem\"\r\nimport { ethers } from \"ethers\"\r\n\r\nimport { BASE_NET, MINER_ADDRESS_BASE, MINER_ADDRESS_MAIN } from \"../config\"\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\"\r\n\r\nimport ImgLeaf from \"../assets/images/miners/leaf.png\"\r\nimport ImgSteel from \"../assets/images/miners/steel.png\"\r\nimport ImgDiamond from \"../assets/images/miners/diamond.png\"\r\nimport toast from \"react-hot-toast\"\r\n\r\nconst ary = Array.from({ length: 10000 }, (_, i) => ({\r\n  isCancelling: false,\r\n  isBuying: false,\r\n}))\r\n\r\nexport default function Marketplace() {\r\n  const chainId = useChainId()\r\n  const { isConnected, address } = useAccount()\r\n  const { writeContractAsync } = useWriteContract()\r\n\r\n  const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n  const { data: playerMinersOwned, refetch: refetchPlayerMinersOwned } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getMinersOnMarketplace\",\r\n    args: [],\r\n    chainId: chainId,\r\n  })\r\n\r\n  const [selfMiners, setSelfMiners] = useState([])\r\n  const [otherMiners, setOtherMiners] = useState([])\r\n  const [btnStatus, setBtnStatus] = useState(ary)\r\n\r\n  useEffect(() => {\r\n    if (\r\n      address === undefined ||\r\n      address === zeroAddress ||\r\n      !isConnected ||\r\n      playerMinersOwned === undefined ||\r\n      chainId === undefined\r\n    )\r\n      return\r\n\r\n    const selfMinersTemp = []\r\n    const otherMinersTemp = []\r\n    playerMinersOwned.forEach((item) => {\r\n      if (item.owner.toLowerCase() === address.toLowerCase()) {\r\n        selfMinersTemp.push(item)\r\n      } else {\r\n        otherMinersTemp.push(item)\r\n      }\r\n    })\r\n\r\n    setSelfMiners(selfMinersTemp)\r\n    setOtherMiners(otherMinersTemp)\r\n  }, [address, playerMinersOwned, isConnected, chainId])\r\n\r\n  const handleCancelListing = (id, index) => async () => {\r\n    if (address === undefined || address === zeroAddress || !isConnected || chainId === undefined) {\r\n      return\r\n    }\r\n\r\n    const temp = [...btnStatus]\r\n    temp[index].isCancelling = true\r\n    setBtnStatus(temp)\r\n\r\n    try {\r\n      await writeContractAsync({\r\n        address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"cancelListForSale\",\r\n        args: [id],\r\n      })\r\n      await refetchPlayerMinersOwned()\r\n    } catch (err) {\r\n      console.error(\"Cancel listing error:\", err)\r\n    } finally {\r\n      temp[index].isCancelling = false\r\n      setBtnStatus(temp)\r\n    }\r\n  }\r\n\r\n  const handleBuying = (id, price, index) => async () => {\r\n    if (address === undefined || address === zeroAddress || !isConnected || chainId === undefined) {\r\n      return\r\n    }\r\n\r\n    if (balance.value < price) {\r\n      toast.error(\"Insufficient Balance!\");\r\n      return;\r\n    }\r\n\r\n    const temp = [...btnStatus]\r\n    temp[index].isBuying = true\r\n    setBtnStatus(temp)\r\n\r\n    try {\r\n      await writeContractAsync({\r\n        address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"buyMinerFromMarket\",\r\n        args: [id],\r\n        value: price,\r\n      })\r\n      await refetchPlayerMinersOwned()\r\n    } catch (err) {\r\n      console.error(\"Buy miner error:\", err)\r\n    } finally {\r\n      temp[index].isBuying = false\r\n      setBtnStatus(temp)\r\n    }\r\n  }\r\n\r\n  const getMinerImage = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return ImgLeaf\r\n      case 2:\r\n        return ImgSteel\r\n      case 3:\r\n        return ImgDiamond\r\n      default:\r\n        return ImgLeaf\r\n    }\r\n  }\r\n\r\n  const getMinerType = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return \"Leaf\"\r\n      case 2:\r\n        return \"Steel\"\r\n      case 3:\r\n        return \"Diamond\"\r\n      default:\r\n        return \"Unknown\"\r\n    }\r\n  }\r\n\r\n  const getMinerTypeColor = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return \"text-green-400\"\r\n      case 2:\r\n        return \"text-gray-400\"\r\n      case 3:\r\n        return \"text-blue-400\"\r\n      default:\r\n        return \"text-gray-400\"\r\n    }\r\n  }\r\n\r\n  const getMinerTypeBg = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return \"from-green-500/20 to-emerald-400/20\"\r\n      case 2:\r\n        return \"from-gray-500/20 to-slate-400/20\"\r\n      case 3:\r\n        return \"from-blue-500/20 to-cyan-400/20\"\r\n      default:\r\n        return \"from-gray-500/20 to-slate-400/20\"\r\n    }\r\n  }\r\n\r\n  const EmptyState = ({ message, icon }) => (\r\n    <div className=\"flex flex-col items-center justify-center py-16 px-4\">\r\n      <div className=\"text-6xl mb-4 opacity-50\">{icon}</div>\r\n      <p className=\"text-gray-400 text-lg font-medium text-center\">{message}</p>\r\n    </div>\r\n  )\r\n\r\n  const MinerCard = ({ miner, index, isOwned = false }) => {\r\n    const minerType = getMinerType(miner.minerIndex)\r\n    const minerImage = getMinerImage(miner.minerIndex)\r\n    const typeColor = getMinerTypeColor(miner.minerIndex)\r\n    const typeBg = getMinerTypeBg(miner.minerIndex)\r\n\r\n    return (\r\n      <div className=\"group relative bg-[#0000009e] backdrop-blur-sm rounded-xl p-6 border border-[#F8A82C]/30 hover:border-[#F8A82C] transition-all duration-300 hover:shadow-lg hover:shadow-[#F8A82C]/10\">\r\n        <div\r\n          className={`absolute inset-0 bg-gradient-to-r ${typeBg} rounded-xl blur-sm opacity-0 group-hover:opacity-100 transition-opacity duration-300`}\r\n        ></div>\r\n\r\n        <div className=\"relative flex items-center justify-between\">\r\n          <div className=\"lg:flex items-center space-x-6\">\r\n            <div className=\"relative\">\r\n              <div className={`absolute inset-0 bg-gradient-to-r ${typeBg} rounded-full blur-md`}></div>\r\n              <img\r\n                src={minerImage || \"/placeholder.svg\"}\r\n                alt={`${minerType} Miner`}\r\n                className=\"relative h-16 w-16 rounded-full border-2 border-gray-600 group-hover:border-yellow-500/50 transition-colors duration-300 object-cover\"\r\n              />\r\n              <div className=\"absolute -top-1 -right-1 bg-gradient-to-r from-[#F9A82C] to-[#FFD100] text-black text-xs font-bold px-2 py-1 rounded-full\">\r\n                Lv.{Number(miner.level)}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <span className={`font-bold text-xl ${typeColor}`}>{minerType}</span>\r\n                <span className=\"text-gray-400 text-sm bg-gray-700/50 px-2 py-1 rounded-full\">Miner</span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-6 text-sm\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <svg className=\"w-4 h-4 text-yellow-400\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6Z\" />\r\n                  </svg>\r\n                  <span className=\"text-gray-300\">Level {Number(miner.level)}</span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <svg className=\"w-4 h-4 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M7,15H9C9,16.08 10.37,17 12,17C13.63,17 15,16.08 15,15C15,13.9 13.96,13.5 11.76,12.97C9.64,12.44 7,11.78 7,9C7,7.21 8.47,5.69 10.5,5.18V3H13.5V5.18C15.53,5.69 17,7.21 17,9H15C15,7.92 13.63,7 12,7C10.37,7 9,7.92 9,9C9,10.1 10.04,10.5 12.24,11.03C14.36,11.56 17,12.22 17,15C17,16.79 15.53,18.31 13.5,18.82V21H10.5V18.82C8.47,18.31 7,16.79 7,15Z\" />\r\n                  </svg>\r\n                  <span className=\"text-[#FFD100] font-semibold\">{parseFloat(ethers.formatEther(miner.sellPrice)).toFixed(4)} ETH</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center\">\r\n              {isOwned ? (\r\n                <button\r\n                  className=\"bg-gradient-to-r from-red-600 to-red-700 hover:from-red-500 hover:to-red-600 disabled:from-gray-600 disabled:to-gray-700 text-white font-semibold px-6 py-3 rounded-lg transition-all duration-300 transform hover:scale-105 active:scale-95 disabled:hover:scale-100 disabled:cursor-not-allowed min-w-[140px]\"\r\n                  onClick={handleCancelListing(miner.id, index)}\r\n                  disabled={btnStatus[index]?.isCancelling}\r\n                >\r\n                  {btnStatus[index]?.isCancelling ? (\r\n                    <div className=\"flex items-center justify-center space-x-2\">\r\n                      <svg className=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle\r\n                          className=\"opacity-25\"\r\n                          cx=\"12\"\r\n                          cy=\"12\"\r\n                          r=\"10\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"4\"\r\n                        ></circle>\r\n                        <path\r\n                          className=\"opacity-75\"\r\n                          fill=\"currentColor\"\r\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                        ></path>\r\n                      </svg>\r\n                      <span>Cancelling...</span>\r\n                    </div>\r\n                  ) : (\r\n                    \"Cancel Listing\"\r\n                  )}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"bg-gradient-to-r from-green-600 to-green-700 hover:from-green-500 hover:to-green-600 disabled:from-gray-600 disabled:to-gray-700 text-white font-semibold px-6 lg:py-3 py-2 w-[100%] lg:mt-[0px] mt-[25px] rounded-lg transition-all duration-300 transform hover:scale-105 active:scale-95 disabled:hover:scale-100 disabled:cursor-not-allowed min-w-[120px]\"\r\n                  onClick={handleBuying(miner.id, miner.sellPrice, index)}\r\n                  disabled={btnStatus[index]?.isBuying}\r\n                >\r\n                  {btnStatus[index]?.isBuying ? (\r\n                    <div className=\"flex items-center justify-center space-x-2\">\r\n                      <svg className=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle\r\n                          className=\"opacity-25\"\r\n                          cx=\"12\"\r\n                          cy=\"12\"\r\n                          r=\"10\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"4\"\r\n                        ></circle>\r\n                        <path\r\n                          className=\"opacity-75\"\r\n                          fill=\"currentColor\"\r\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                        ></path>\r\n                      </svg>\r\n                      <span>Buying...</span>\r\n                    </div>\r\n                  ) : (\r\n                    \"Buy Now\"\r\n                  )}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black p-6\">\r\n      <div className=\"max-w-7xl mx-auto space-y-8\">\r\n        {/* Header */}\r\n        <div className=\"text-center space-y-4\">\r\n          <h1 className=\"text-transparent bg-gradient-to-r from-[#F9A82C] to-[#FFD100] bg-clip-text font-bold text-4xl lg:text-5xl\">\r\n            Miner Marketplace\r\n          </h1>\r\n          <p className=\"text-gray-400 text-lg max-w-2xl mx-auto\">\r\n            Trade your miners with other players. List your miners for sale or browse available miners to purchase.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Your Listed Miners Section */}\r\n        <div className=\"space-y-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"text-4xl\">🏪</div>\r\n              <div>\r\n                <h2 className=\"text-[#F9A82C] font-bold text-2xl lg:text-3xl\">Your Listed Miners</h2>\r\n                <p className=\"text-gray-400 text-sm\">Miners you have listed for sale</p>\r\n              </div>\r\n            </div>\r\n            {selfMiners.length > 0 && (\r\n              <div className=\"bg-[#F8A82C]/20 text-[#F8A82C] px-4 py-2 rounded-full text-sm font-semibold border border-[#F8A82C]/30\">\r\n                {selfMiners.length} Listed\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"bg-[#0000009e] overflow-y-auto h-64 backdrop-blur-xl rounded-2xl border border-[#F8A82C]/20 overflow-hidden\">\r\n            {selfMiners.length > 0 ? (\r\n              <div className=\"divide-y divide-gray-700/50\">\r\n                {selfMiners.map((miner, index) => (\r\n                  <div key={miner.id} className=\"p-6\">\r\n                    <MinerCard miner={miner} index={index} isOwned={true} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <EmptyState\r\n                message=\"You haven't listed any miners for sale yet. Start mining and list your miners here!\"\r\n                icon=\"📦\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Available Miners Section */}\r\n        <div className=\"space-y-6\">\r\n          <div className=\"lg:flex block items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"text-4xl\">🛒</div>\r\n              <div>\r\n                <h2 className=\"text-[#F9A82C] font-bold text-2xl lg:text-3xl\">Available Miners</h2>\r\n                <p className=\"text-gray-400 text-sm\">Miners available for purchase from other players</p>\r\n              </div>\r\n            </div>\r\n            {otherMiners.length > 0 && (\r\n              <div className=\"bg-[#F8A82C]/20 text-[#F8A82C] px-4 py-2 rounded-full text-sm font-semibold border border-[#F8A82C]/30\">\r\n                {otherMiners.length} Available\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"bg-[#0000009e] overflow-y-auto h-96 backdrop-blur-xl rounded-2xl border border-[#F8A82C]/20 overflow-hidden\">\r\n            {otherMiners.length > 0 ? (\r\n              <div className=\"divide-y divide-gray-700/50\">\r\n                {otherMiners.map((miner, index) => (\r\n                  <div key={miner.id} className=\"p-6\">\r\n                    <MinerCard miner={miner} index={index} isOwned={false} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <EmptyState\r\n                message=\"No miners available for purchase at the moment. Check back later for new listings!\"\r\n                icon=\"🔍\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport '../index.css'\r\nimport Referral from \"./Referal\"\r\nimport Space from \"./Space\"\r\nimport Store from \"./Store\"\r\nimport Marketplace from \"./MarketPlace\"\r\n\r\nexport default function SpacePanel() {\r\n    const [activeTab, setActiveTab] = useState(\"Space\")\r\n\r\n    const tabs = [\"Space\", \"Store\", \"Marketplace\", \"Referral\"]\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-center\">\r\n            <div className=\"lg:mt-[0px] mt-[30px] w-full max-w-5xl bg-slate-900/95 backdrop-blur-sm rounded-xl border-2 border-yellow-500 shadow-2xl shadow-yellow-500/20\">\r\n                {/* Tabs Header */}\r\n                <div className=\"flex bg-[#1B2531] items-center rounded-l-xl rounded-r-xl justify-center lg:px-8 lg:py-10 py-4 pl-4 pr-2\">\r\n                    <div className=\"flex lg:space-x-12 space-x-3 overflow-x-auto hide-scrollbar\">\r\n                        {tabs.map((tab) => (\r\n                            <button\r\n                                key={tab}\r\n                                onClick={() => setActiveTab(tab)}\r\n                                className={`py-2 text-[16px] lg:text-xl font-medium transition-all duration-200 relative ${activeTab === tab ? \"text-yellow-400\" : \"text-slate-300 hover:text-slate-100\"\r\n                                    }`}\r\n                            >\r\n                                {tab}\r\n                                {activeTab === tab && (\r\n                                    <div className=\"absolute -bottom-3 left-0 right-0 h-0.5 bg-yellow-400 rounded-full\"></div>\r\n                                )}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Tab Content */}\r\n                <div className=\"gap-8\">\r\n                    {activeTab === \"Space\" && (\r\n                        <Space />\r\n                    )}\r\n\r\n                    {activeTab === \"Store\" && (\r\n                        <Store />\r\n                    )}\r\n\r\n                    {activeTab === \"Marketplace\" && (\r\n                        <Marketplace />\r\n                    )}\r\n\r\n                    {activeTab === \"Referral\" && (\r\n                        <Referral />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport './RightPanel.scss'\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\n// import { useMediaQuery } from '@uidotdev/usehooks'\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract } from \"wagmi\";\r\nimport { zeroAddress } from \"viem\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport 'react-tabs/style/react-tabs.scss'\r\nimport {\r\n    BASE_NET,\r\n    MINER_ADDRESS_BASE,\r\n    MINER_ADDRESS_MAIN\r\n} from \"../config\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { RefreshContext } from '../context/RefreshContext'\r\n\r\nimport Imag1 from \"../assets/images/imag1.png\"\r\n\r\n// Add animation keyframes style\r\nconst nftAnimationStyle = document.createElement('style');\r\nnftAnimationStyle.innerHTML = `\r\n  @keyframes pulse {\r\n    0% { transform: scale(1); opacity: 1; }\r\n    100% { transform: scale(1.05); opacity: 0.9; }\r\n  }\r\n  \r\n  @keyframes float {\r\n    0% { transform: translateY(0px); }\r\n    50% { transform: translateY(-10px); }\r\n    100% { transform: translateY(0px); }\r\n  }\r\n  \r\n  @keyframes glow {\r\n    0% { opacity: 0.5; }\r\n    100% { opacity: 0.8; }\r\n  }\r\n`;\r\ndocument.head.appendChild(nftAnimationStyle);\r\n\r\nconst useRefresh = () => {\r\n    const { fast, slow } = useContext(RefreshContext)\r\n    return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default function BuySpace() {\r\n    // const navigate = useNavigate(); // 👈 call useNavigate inside the component\r\n    const [searchParams,] = useSearchParams();\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const [showModalFree, setShowModalFree] = useState(false);\r\n\r\n    // const isMobile = useMediaQuery(\"only screen and (max-width: 768px)\");\r\n    const { fastRefresh } = useRefresh();\r\n\r\n    const { writeContractAsync } = useWriteContract();\r\n\r\n    const chainId = useChainId();\r\n    const { isConnected, address } = useAccount();\r\n    const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n    /////// Miner //////////////////////////////////\r\n    const { data: initialFacilityPrice, refetch: refetchInitialFacilityPrice } = useReadContract({\r\n        address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"getInitialFacilityPrice\",\r\n        args: [],\r\n        chainId: chainId,\r\n    });\r\n\r\n    const { data: nextInitialFacilityPrice, refetch: refetchNextInitialFacilityPrice } = useReadContract({\r\n        address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"getNextInitialFacilityPrice\",\r\n        args: [],\r\n        chainId: chainId,\r\n    });\r\n\r\n    const { data: initialMinerCnt, refetch: refetchInitialMinerCnt } = useReadContract({\r\n        address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"initialMinerCnt\",\r\n        args: [],\r\n        chainId: chainId,\r\n    });\r\n\r\n    /////////////////////////////////////////\r\n    const [isPurchasingInitialFacility, setIsPurchasingInitialFacility] = useState(false);\r\n    const [isPurchasingFreeFacility, setIsPurchasingFreeFacility] = useState(false);\r\n    const [referrer, setReferrer] = useState(zeroAddress);\r\n\r\n    useEffect(() => {\r\n        refetchBalance();\r\n        refetchInitialFacilityPrice();\r\n        refetchNextInitialFacilityPrice();\r\n        refetchInitialMinerCnt();\r\n    }, [fastRefresh]);\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get(\"ref\")) {\r\n            const referrerTemp = searchParams.get(\"ref\");\r\n            if (referrerTemp && referrerTemp.toLowerCase() !== address?.toLowerCase()) {\r\n                setReferrer(referrerTemp);\r\n                if (referrerTemp === \"genie\") {\r\n                    setReferrer(\"0x50a5FFc82622A868613045f9c13021455536856B\")\r\n                    console.log(\"successsss\")\r\n                }\r\n            }\r\n            else\r\n                setReferrer(zeroAddress);\r\n        }\r\n    }, [searchParams, address])\r\n\r\n    const handlePurchaseInitialFacility = async () => {\r\n        setIsPurchasingInitialFacility(true);\r\n        if (!isConnected || !address) {\r\n            toast.error(\"Please connect your wallet first.\");\r\n            setIsPurchasingInitialFacility(false);\r\n            return;\r\n        }\r\n        if (!balance || parseFloat(ethers.formatEther(balance.value)) < parseFloat(ethers.formatEther(initialFacilityPrice))) {\r\n            toast.error(\"Insufficient ETH to purchase the initial facility.\");\r\n            setIsPurchasingInitialFacility(false);\r\n            return;\r\n        }\r\n        await writeContractAsync({\r\n            address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n            abi: MinerAbi,\r\n            functionName: \"purchaseInitialFacility\",\r\n            args: [referrer],\r\n            value: initialFacilityPrice\r\n        })\r\n            .then(() => {\r\n                setTimeout(async () => {\r\n                    setIsPurchasingInitialFacility(false);\r\n                    setShowModal(false);\r\n                }, 3000); // Keep animation running for a bit after Claim completes\r\n            })\r\n            .catch((err) => {\r\n                setIsPurchasingInitialFacility(false);\r\n            });\r\n    }\r\n\r\n    const handlePurchaseFreeFacility = async () => {\r\n        if (!balance || parseFloat(ethers.formatEther(balance.value)) < parseFloat(ethers.formatEther(initialFacilityPrice / ethers.toBigInt(20)))) {\r\n            toast.error(\"Insufficient ETH to use the free facility.\");\r\n            return;\r\n        }\r\n\r\n        setIsPurchasingFreeFacility(true);\r\n        if (!isConnected || !address) {\r\n            toast.error(\"Please connect your wallet first.\");\r\n            setIsPurchasingFreeFacility(false);\r\n            return;\r\n        }\r\n        await writeContractAsync({\r\n            address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n            abi: MinerAbi,\r\n            functionName: \"purchaseFreeFacility\",\r\n            args: [referrer],\r\n            value: initialFacilityPrice / ethers.toBigInt(20)\r\n        })\r\n            .then(() => {\r\n                setTimeout(async () => {\r\n                    setIsPurchasingFreeFacility(false);\r\n                    setShowModalFree(false);\r\n                }, 3000); // Keep animation running for a bit after Claim completes\r\n            })\r\n            .catch((err) => {\r\n                setIsPurchasingFreeFacility(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-[#0000009e] rounded-lg p-6 flex flex-col items-center justify-center space-y-6 text-center\">\r\n            <h2 className=\"text-white font-semibold text-3xl\">\r\n                PLEASE ACQUIRE A <br /> MINING SPACE\r\n            </h2>\r\n            <div className=\" w-[282px] h-[252px]\">\r\n                <img src={Imag1} alt=\"Penguins mining\" />\r\n            </div>\r\n            <button\r\n                onClick={() => setShowModal(true)}\r\n                className=\"bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 font-bold w-[75%] py-2 text-[#78350F] text-[20px] px-6 rounded-md\"\r\n            >\r\n                BUY SPACE\r\n            </button>\r\n            {/* <button\r\n                onClick={() => setShowModalFree(true)}\r\n                className=\"bg-gradient-to-r from-blue-500 to-green-400 hover:opacity-90 font-bold w-[75%] py-2 text-[#78350F] text-[20px] px-6 rounded-md\"\r\n            >\r\n                FREE SPACE\r\n            </button> */}\r\n\r\n            {/* Modal */}\r\n            {showModal && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n                        <h2 className=\"text-[25px] font-bold mb-2 text-white\">GET YOUR FIRST MINING SPACE</h2>\r\n                        <p className=\"text-sm text-gray-300 mb-2\">Start mining $HASH by purchasing your first space!</p>\r\n                        <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n                        <p className=\"text-left text-[#F9A82C] font-medium mb-2\">SET UP YOUR IGLOO</p>\r\n                        <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n                            <div className=\"flex justify-between mb-1 font-medium\">\r\n                                <span>- Space Capacity:</span>\r\n                                <span className=\"text-yellow-400 font-medium\">3 Miners</span>\r\n                            </div>\r\n                            {\r\n                                chainId === BASE_NET && Number(initialMinerCnt) < 750 ?\r\n                                    <>\r\n                                        <div className=\"flex justify-between mb-1 font-medium\">\r\n                                            <span className=\"text-blue-400\">- Current Price</span>\r\n                                            <span className=\"text-blue-400 font-medium\">{initialFacilityPrice ? parseFloat(ethers.formatEther(initialFacilityPrice)).toFixed(3) : 0}\r\n                                                <span className=\"text-yellow-400 font-medium\">\r\n                                                    {\" ETH\"}\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"flex justify-between mb-1 font-medium\">\r\n                                            <span className=\"text-red-400\">- Next Price</span>\r\n                                            <span className=\"text-red-400 font-medium\">{nextInitialFacilityPrice ? parseFloat(ethers.formatEther(nextInitialFacilityPrice)).toFixed(3) : 0}\r\n                                                <span className=\"text-yellow-400 font-medium\">\r\n                                                    {\" ETH\"}\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"flex justify-between mb-1 font-medium\">\r\n                                            <span className=\"\">- Ready For LP</span>\r\n                                            <span className=\"text-yellow-400 font-medium\">{initialMinerCnt ? Number(initialMinerCnt) : 0} / 750 Miners</span>\r\n                                        </div>\r\n                                    </>\r\n                                    :\r\n                                    <div className=\"flex justify-between mb-1 font-medium\">\r\n                                        <span>- Price</span>\r\n                                        <span className=\"text-yellow-400 font-medium\">{initialFacilityPrice ? parseFloat(ethers.formatEther(initialFacilityPrice)).toFixed(3) : 0} ETH</span>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"flex justify-between mt-6 gap-4\">\r\n                            <button\r\n                                onClick={() => setShowModal(false)}\r\n                                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                onClick={handlePurchaseInitialFacility}\r\n                                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n                            >\r\n                                {isPurchasingInitialFacility ? 'Buying...' : 'Buy Space'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Modal */}\r\n            {showModalFree && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n                        <h2 className=\"text-[25px] font-bold mb-2 text-white\">GET FREE MINING SPACE</h2>\r\n                        <p className=\"text-sm text-gray-300 mb-2\">Start mining $HASH using your free space!</p>\r\n                        <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n                        <p className=\"text-left text-[#F9A82C] font-medium mb-2\">SET UP YOUR IGLOO</p>\r\n                        <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n                            <div className=\"flex justify-between mb-1 font-medium\">\r\n                                <span>- Space Capacity:</span>\r\n                                <span className=\"text-yellow-400 font-medium\">1 Miner</span>\r\n                            </div>\r\n                            <div className=\"flex justify-between mb-1 font-medium\">\r\n                                <span>- Price</span>\r\n                                <span className=\"text-yellow-400 font-medium\">0.00075 ETH</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex justify-between mt-6 gap-4\">\r\n                            <button\r\n                                onClick={() => setShowModalFree(false)}\r\n                                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                onClick={handlePurchaseFreeFacility}\r\n                                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n                            >\r\n                                {isPurchasingFreeFacility ? 'Using...' : 'Try Space'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useContext, useState } from \"react\";\r\nimport './RightPanel.scss'\r\n\r\nimport { useMediaQuery } from '@uidotdev/usehooks'\r\nimport { useChainId, useAccount, useReadContract } from \"wagmi\";\r\nimport { zeroAddress } from \"viem\";\r\n\r\nimport 'react-tabs/style/react-tabs.scss'\r\nimport {\r\n    BASE_NET,\r\n    MINER_ADDRESS_BASE,\r\n    MINER_ADDRESS_MAIN,\r\n} from \"../config\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { RefreshContext } from '../context/RefreshContext'\r\n\r\nimport SpacePanel from \"./SpacePanel\";\r\nimport SpacePanelFree from \"./SpacePanelFree\";\r\nimport BuySpace from \"./BuySpace\";\r\n\r\n// Add animation keyframes style\r\nconst nftAnimationStyle = document.createElement('style');\r\nnftAnimationStyle.innerHTML = `\r\n  @keyframes pulse {\r\n    0% { transform: scale(1); opacity: 1; }\r\n    100% { transform: scale(1.05); opacity: 0.9; }\r\n  }\r\n  \r\n  @keyframes float {\r\n    0% { transform: translateY(0px); }\r\n    50% { transform: translateY(-10px); }\r\n    100% { transform: translateY(0px); }\r\n  }\r\n  \r\n  @keyframes glow {\r\n    0% { opacity: 0.5; }\r\n    100% { opacity: 0.8; }\r\n  }\r\n`;\r\ndocument.head.appendChild(nftAnimationStyle);\r\n\r\nconst useRefresh = () => {\r\n    const { fast, slow } = useContext(RefreshContext)\r\n    return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default function RightPanel() {\r\n    const isMobile = useMediaQuery(\"only screen and (max-width: 768px)\");\r\n    const { fastRefresh } = useRefresh();\r\n\r\n    const chainId = useChainId();\r\n    const { isConnected, address } = useAccount();\r\n\r\n    /////// Miner //////////////////////////////////\r\n    const { data: initializedStarterFacility, refetch: refetchInitializedStarterFacility } = useReadContract({\r\n        address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"initializedStarterFacility\",\r\n        args: [isConnected ? address : zeroAddress],\r\n        chainId: chainId,\r\n    });\r\n\r\n    const { data: ownerToFacility, refetch: refetchOwnerToFacility } = useReadContract({\r\n        address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"ownerToFacility\",\r\n        args: [isConnected ? address : zeroAddress],\r\n        chainId: chainId,\r\n    });\r\n\r\n    console.log(\"eagle ownerToFacility = \", ownerToFacility)\r\n\r\n    const [isUsedFreeSpace, setIsUsedFreeSpace] = useState(false);\r\n\r\n    useEffect(() => {\r\n        refetchInitializedStarterFacility();\r\n        refetchOwnerToFacility();\r\n    }, [fastRefresh]);\r\n\r\n    useEffect(() => {\r\n        if (ownerToFacility === undefined) return;\r\n\r\n        if (Number(ownerToFacility[0]) === 0 && Number(ownerToFacility[1]) === 1 && Number(ownerToFacility[2]) === 1)\r\n            setIsUsedFreeSpace(true);\r\n        else\r\n            setIsUsedFreeSpace(false);\r\n    }, [ownerToFacility])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !initializedStarterFacility ?\r\n                    (\r\n                        // isUsedFreeSpace ?\r\n                        //     <div className=\"\">\r\n                        //         <SpacePanelFree />\r\n                        //     </div>\r\n                        //     :\r\n                        <BuySpace />\r\n                    )\r\n                    :\r\n                    <div className=\"\">\r\n                        <SpacePanel />\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useContext, useState } from \"react\";\r\nimport Layout from 'layouts'\r\nimport './Dashboard.scss'\r\nimport toast from \"react-hot-toast\";\r\nimport { Copy } from \"lucide-react\"\r\n\r\n// import { useMediaQuery } from '@uidotdev/usehooks'\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract } from \"wagmi\";\r\nimport { useConnectModal } from \"@rainbow-me/rainbowkit\";\r\nimport { zeroAddress } from \"viem\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport 'react-tabs/style/react-tabs.scss'\r\nimport {\r\n  BASE_NET,\r\n  HASH_ADDRESS_BASE,\r\n  HASH_ADDRESS_MAIN,\r\n  MINER_ADDRESS_BASE,\r\n  MINER_ADDRESS_MAIN,\r\n} from \"../config\";\r\nimport HashAbi from \"../config/abis/HASH_ABI.json\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { RefreshContext } from '../context/RefreshContext'\r\n\r\nimport RightPanel from \"components/RigthPanel\";\r\n\r\n// Add animation keyframes style\r\nconst nftAnimationStyle = document.createElement('style');\r\nnftAnimationStyle.innerHTML = `\r\n  @keyframes pulse {\r\n    0% { transform: scale(1); opacity: 1; }\r\n    100% { transform: scale(1.05); opacity: 0.9; }\r\n  }\r\n  \r\n  @keyframes float {\r\n    0% { transform: translateY(0px); }\r\n    50% { transform: translateY(-10px); }\r\n    100% { transform: translateY(0px); }\r\n  }\r\n  \r\n  @keyframes glow {\r\n    0% { opacity: 0.5; }\r\n    100% { opacity: 0.8; }\r\n  }\r\n`;\r\ndocument.head.appendChild(nftAnimationStyle);\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nfunction formatNumber(num) {\r\n  if (num >= 1e9) return (num / 1e9).toFixed(1) + 'B';\r\n  if (num >= 1e6) return (num / 1e6).toFixed(1) + 'M';\r\n  if (num >= 1e3) return (num / 1e3).toFixed(1) + 'K';\r\n  return num.toFixed(4);\r\n}\r\n\r\nconst dailyBlocks = 86400 / 1.1\r\n\r\nexport default function BettingPage() {\r\n  // const navigate = useNavigate(); // 👈 call useNavigate inside the component\r\n\r\n  // const isMobile = useMediaQuery(\"only screen and (max-width: 768px)\");\r\n  const { fastRefresh } = useRefresh();\r\n\r\n  const { openConnectModal } = useConnectModal();\r\n  const { writeContractAsync } = useWriteContract();\r\n\r\n  const chainId = useChainId();\r\n  const { isConnected, address } = useAccount();\r\n  const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n  ////////HASH//////////////////////////////////////\r\n  const { data: tokenBalance, refetch: refetchTokenBalance } = useReadContract({\r\n    address: chainId === BASE_NET ? HASH_ADDRESS_BASE : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"balanceOf\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  /////// Miner //////////////////////////////////\r\n  const { data: hashRate, refetch: refetchPlayerHashrate } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"playerHashrate\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: totalHashrate, refetch: refetchTotalHashrate } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"totalHashrate\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: ownerToFacility, refetch: refetchOwnerToFacility } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"ownerToFacility\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: blocksUntilNextHalving, refetch: refetchBlocksUntilNextHalving } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"blocksUntilNextHalving\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: pendingRewards, refetch: refetchPendingRewards } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"pendingRewards\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: playerHashcoinPerBlock, refetch: refetchPlayerHashcoinPerBlock } = useReadContract({\r\n    address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"playerHashcoinPerBlock\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const [isClaiming, setIsClaiming] = useState(false);\r\n\r\n  const [copied, setCopied] = useState(false)\r\n\r\n  useEffect(() => {\r\n    refetchBalance();\r\n    refetchTokenBalance();\r\n    refetchPlayerHashrate();\r\n    refetchTotalHashrate();\r\n    refetchOwnerToFacility();\r\n    refetchBlocksUntilNextHalving();\r\n    refetchPendingRewards();\r\n    refetchPlayerHashcoinPerBlock();\r\n  }, [fastRefresh, isConnected, address, chainId]);\r\n\r\n  const handleClaim = async () => {\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      return;\r\n    }\r\n    if (!pendingRewards || parseFloat(ethers.formatEther(pendingRewards)) <= 0) {\r\n      toast.error(\"No rewards to claim.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsClaiming(true);\r\n\r\n      await writeContractAsync({\r\n        address: chainId === BASE_NET ? MINER_ADDRESS_BASE : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"claimRewards\",\r\n        args: [],\r\n      })\r\n        .then(() => {\r\n          setIsClaiming(false);\r\n          toast.success(\"Rewards claimed successfully!\");\r\n        })\r\n        .finally(() => {\r\n          setIsClaiming(false);\r\n        })\r\n        .catch((err) => {\r\n          setIsClaiming(false);\r\n        });\r\n    } catch (error) {\r\n      console.error(\"Error claiming rewards:\", error);\r\n      toast.error(\"Failed to claim rewards. Please try again.\");\r\n    }\r\n  }\r\n\r\n  const handleCopy = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(chainId === BASE_NET ? HASH_ADDRESS_BASE : HASH_ADDRESS_MAIN)\r\n      toast.success(\"$HASH Address Copied!\")\r\n      setCopied(true)\r\n      setTimeout(() => setCopied(false), 2000)\r\n    } catch (err) {\r\n      console.error(\"Failed to copy:\", err)\r\n      toast.error(\"Failed to copy link\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {\r\n        isConnected ?\r\n          <>\r\n            <div className=\"lg:grid px-3 lg:px-0 grid-cols-1 mx-auto relative lg:top-[50px] justify-center md:grid-cols-2 gap-6 max-w-7xl w-full\">\r\n              {/* Left Panel */}\r\n              <div className=\"bg-gradient-to-br from-black/90 to-gray-900/90 backdrop-blur-xl w-full rounded-2xl p-6 space-y-8 border border-yellow-500/20 shadow-2xl\">\r\n                <div className=\"w-full space-y-8\">\r\n                  {/* Resources Section */}\r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <div className=\"w-2 h-2 bg-gradient-to-r from-yellow-500 to-orange-400 rounded-full\"></div>\r\n                      <h2 className=\"text-transparent bg-gradient-to-r from-yellow-400 to-orange-400 bg-clip-text font-bold text-xl lg:text-2xl\">\r\n                        Resources\r\n                      </h2>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                      {/* ETH Balance */}\r\n                      <div className=\"relative group\">\r\n                        <div className=\"absolute inset-0 bg-gradient-to-r from-yellow-500/20 to-orange-400/20 rounded-xl blur-sm group-hover:blur-md transition-all duration-300\"></div>\r\n                        <div className=\"relative bg-gray-800/80 backdrop-blur-sm border-2 border-yellow-500/50 rounded-xl p-4 text-center hover:border-yellow-400 transition-all duration-300\">\r\n                          <div className=\"flex items-center justify-center mb-2\">\r\n                            <svg className=\"w-5 h-5 text-yellow-400 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path d=\"M12,1.75L5.75,6.25V11.5C5.75,16.25 8.5,20.5 12,21.75C15.5,20.5 18.25,16.25 18.25,11.5V6.25L12,1.75M12,7C13.04,7 13.88,7.84 13.88,8.88C13.88,9.92 13.04,10.75 12,10.75C10.96,10.75 10.13,9.92 10.13,8.88C10.13,7.84 10.96,7 12,7Z\" />\r\n                            </svg>\r\n                            <span className=\"text-gray-300 text-sm font-medium\">ETH Balance</span>\r\n                          </div>\r\n                          <div className=\"text-white font-bold text-lg\">\r\n                            {balance !== undefined ? Number.parseFloat(ethers.formatEther(balance.value)).toFixed(3) : \"0.000\"}\r\n                          </div>\r\n                          <div className=\"text-yellow-400 text-xs font-semibold\">ETH</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Spaces Left */}\r\n                      <div className=\"relative group\">\r\n                        <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500/20 to-purple-400/20 rounded-xl blur-sm group-hover:blur-md transition-all duration-300\"></div>\r\n                        <div className=\"relative bg-gray-800/80 backdrop-blur-sm border-2 border-blue-500/50 rounded-xl p-4 text-center hover:border-blue-400 transition-all duration-300\">\r\n                          <div className=\"flex items-center justify-center mb-2\">\r\n                            <svg className=\"w-5 h-5 text-blue-400 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6Z\" />\r\n                            </svg>\r\n                            <span className=\"text-gray-300 text-sm font-medium\">Available</span>\r\n                          </div>\r\n                          <div className=\"text-white font-bold text-lg\">\r\n                            {ownerToFacility ? Number(ownerToFacility[1] - ownerToFacility[2]) : 0}\r\n                          </div>\r\n                          <div className=\"text-blue-400 text-xs font-semibold\">SPACES</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* HASH Balance */}\r\n                      <div className=\"relative group sm:col-span-2 lg:col-span-1\">\r\n                        <div className=\"absolute inset-0 bg-gradient-to-r from-green-500/20 to-emerald-400/20 rounded-xl blur-sm group-hover:blur-md transition-all duration-300\"></div>\r\n                        <div className=\"relative bg-gray-800/80 backdrop-blur-sm border-2 border-green-500/50 rounded-xl p-4 text-center hover:border-green-400 transition-all duration-300\">\r\n                          <div className=\"flex items-center justify-center mb-2\">\r\n                            <svg className=\"w-5 h-5 text-green-400 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path d=\"M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z\" />\r\n                            </svg>\r\n                            <span className=\"text-gray-300 text-sm font-medium\">HASH Tokens</span>\r\n                          </div>\r\n                          <div className=\"text-white font-bold text-lg\">\r\n                            {tokenBalance ? Number.parseFloat(ethers.formatEther(tokenBalance)).toFixed(2) : \"0.00\"}\r\n                          </div>\r\n                          <div className=\"text-green-400 text-xs font-semibold\">HASH</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between items-center py-2 border-b border-yellow-500/30\">\r\n                      <span className=\"text-gray-300 font-medium text-[1rem]\">$HASH CA:</span>\r\n                      <span className=\"text-yellow-400 font-bold text-[1rem] font-wrap\">\r\n                        { chainId === BASE_NET ? \"0x5cB18 ... a5B50\" : \"0x67306 ... 4b5D1\"}\r\n                      </span>\r\n                      <button\r\n                        onClick={handleCopy}\r\n                        className={`flex items-center gap-1 px-3 py-1 rounded font-semibold text-xs transition-all duration-200 ${copied\r\n                          ? \"bg-green-500 text-white\"\r\n                          : \"bg-gradient-to-r from-yellow-500 to-orange-400 text-slate-900 hover:from-yellow-400 hover:to-orange-300\"\r\n                          }`}\r\n                      >\r\n                        <Copy className=\"w-3 h-3\" />\r\n                        {copied ? \"COPIED!\" : \"COPY\"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Statistics Section */}\r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"flex items-center space-x-2 mb-4\">\r\n                      <div className=\"w-2 h-2 bg-gradient-to-r from-purple-500 to-pink-400 rounded-full\"></div>\r\n                      <h2 className=\"text-transparent bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text font-bold text-xl lg:text-2xl\">\r\n                        Statistics\r\n                      </h2>\r\n                    </div>\r\n\r\n                    <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700/50 space-y-4\">\r\n                      <div className=\"flex justify-between items-center py-2 border-b border-yellow-500/30\">\r\n                        <span className=\"text-gray-300 font-medium text-lg\">You are mining</span>\r\n                        <span className=\"text-yellow-400 font-bold text-lg\">\r\n                          {playerHashcoinPerBlock\r\n                            ? formatNumber(Number.parseFloat(ethers.formatEther(playerHashcoinPerBlock)) * dailyBlocks)\r\n                            : \"--\"}{\" \"}\r\n                          HASH/DAY\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"text-gray-300 font-medium text-lg\">Your hash rate is</span>\r\n                        <span className=\"text-yellow-400 font-bold text-lg\">{hashRate ? Number(hashRate) : \"--\"} GH/S</span>\r\n                      </div>\r\n                      <div className=\"items-center pb-2 border-b border-yellow-500/30 text-gray-300 font-medium text-lg\">\r\n                        You have <span className=\"text-yellow-400 font-bold text-lg\">{(hashRate && totalHashrate) ? (Number(hashRate) / Number(totalHashrate) * 100).toFixed(6) : 0}%</span> of the total network hash rate <span className=\"text-yellow-400 font-bold text-lg\">({Number(totalHashrate)} GH/S)</span>\r\n                      </div>\r\n\r\n                      <div className=\"flex justify-between items-center py-2 border-b border-yellow-500/30\">\r\n                        <span className=\"text-gray-300 font-medium text-lg\">Blocks until halving</span>\r\n                        <span className=\"text-yellow-400 font-bold text-lg\">\r\n                          {blocksUntilNextHalving ? Number(blocksUntilNextHalving) : \"--\"} BLOCKS\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Claim Section */}\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-0 bg-gradient-to-r from-yellow-500/10 to-orange-400/10 rounded-2xl blur-xl\"></div>\r\n                    <div className=\"relative bg-gradient-to-br from-gray-800/90 to-gray-900/90 backdrop-blur-sm rounded-2xl p-6 border border-yellow-500/30 text-center space-y-4\">\r\n                      <div className=\"flex items-center justify-center mb-4\">\r\n                        <svg className=\"w-8 h-8 text-yellow-400 mr-3\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path d=\"M7,15H9C9,16.08 10.37,17 12,17C13.63,17 15,16.08 15,15C15,13.9 13.96,13.5 11.76,12.97C9.64,12.44 7,11.78 7,9C7,7.21 8.47,5.69 10.5,5.18V3H13.5V5.18C15.53,5.69 17,7.21 17,9H15C15,7.92 13.63,7 12,7C10.37,7 9,7.92 9,9C9,10.1 10.04,10.5 12.24,11.03C14.36,11.56 17,12.22 17,15C17,16.79 15.53,18.31 13.5,18.82V21H10.5V18.82C8.47,18.31 7,16.79 7,15Z\" />\r\n                        </svg>\r\n                        <h3 className=\"text-white font-bold text-xl lg:text-2xl\">Pending Rewards</h3>\r\n                      </div>\r\n\r\n                      <div className=\"bg-black/30 rounded-xl p-2 mb-2\">\r\n                        <p className=\"text-gray-300 text-sm mb-2\">You Have Mined</p>\r\n                        <p className=\"text-transparent bg-gradient-to-r from-yellow-400 to-orange-400 bg-clip-text font-bold text-2xl lg:text-3xl\">\r\n                          {pendingRewards ? Number.parseFloat(ethers.formatEther(pendingRewards)).toFixed(2) : \"0.00\"} $HASH\r\n                        </p>\r\n                      </div>\r\n\r\n                      <button\r\n                        className=\"relative bg-gradient-to-r from-yellow-500 to-orange-400 hover:from-yellow-400 hover:to-orange-300 disabled:from-gray-600 disabled:to-gray-700 font-bold w-full py-3 text-amber-900 disabled:text-gray-400 text-lg px-6 rounded-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg hover:shadow-yellow-500/25 active:scale-95 disabled:hover:scale-100 disabled:cursor-not-allowed\"\r\n                        onClick={handleClaim}\r\n                        disabled={isClaiming}\r\n                      >\r\n                        <span className=\"relative z-10 flex items-center justify-center\">\r\n                          {isClaiming && (\r\n                            <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-amber-900\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                              <circle\r\n                                className=\"opacity-25\"\r\n                                cx=\"12\"\r\n                                cy=\"12\"\r\n                                r=\"10\"\r\n                                stroke=\"currentColor\"\r\n                                strokeWidth=\"4\"\r\n                              ></circle>\r\n                              <path\r\n                                className=\"opacity-75\"\r\n                                fill=\"currentColor\"\r\n                                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                              ></path>\r\n                            </svg>\r\n                          )}\r\n                          {isClaiming ? \"Claiming...\" : \"Claim Now\"}\r\n                        </span>\r\n                        {!isClaiming && (\r\n                          <div className=\"absolute inset-0 bg-white/20 rounded-xl opacity-0 hover:opacity-100 transition-opacity duration-300\"></div>\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <RightPanel />\r\n            </div>\r\n            <div className=\"relative mt-[92px] mb-[40px]\">\r\n              <div className=\"lg:flex justify-center m-auto  gap-3 max-w-2xl\">\r\n                {/* Twitter/X */}\r\n                <a\r\n                  href=\"https://x.com/thehashlordz\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"flex  items-center gap-3 no-underline bg-[#0000009e]  m-auto lg:mb-0 mb-2  lg:w-full w-[200px] hover:bg-[#2a2c2f] rounded-lg px-4 py-3 transition duration-200 group\"\r\n                >\r\n                  <div className=\"flex-shrink-0\">\r\n                    <svg\r\n                      width=\"32\"\r\n                      height=\"32\"\r\n                      className=\"w-6 h-6 sm:w-8 sm:h-8\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#1DA1F2\" fillOpacity=\"0.2\" />\r\n                      <path\r\n                        d=\"M18.244 6.108c-.706.314-1.464.525-2.26.62.813-.487 1.437-1.258 1.732-2.177-.761.451-1.604.777-2.5.954-.718-.765-1.741-1.242-2.873-1.242-2.173 0-3.933 1.76-3.933 3.933 0 .308.035.608.102.896-3.269-.164-6.166-1.73-8.103-4.11-.338.58-.532 1.258-.532 1.979 0 1.365.694 2.568 1.748 3.273-.644-.02-1.25-.197-1.779-.492v.05c0 1.906 1.356 3.495 3.156 3.856-.33.09-.678.138-1.037.138-.254 0-.501-.025-.741-.071.501 1.563 1.955 2.7 3.68 2.732-1.347 1.056-3.044 1.685-4.889 1.685-.318 0-.631-.019-.94-.056 1.745 1.119 3.817 1.772 6.044 1.772 7.253 0 11.217-6.007 11.217-11.217 0-.171-.004-.341-.012-.51.771-.556 1.44-1.25 1.968-2.042z\"\r\n                        fill=\"#1DA1F2\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"text-white min-w-0 flex-1\">\r\n                    <p className=\"text-sm sm:text-base mb-0 font-semibold truncate\">Twitter</p>\r\n                    <p className=\"text-xs sm:text-sm mb-0 text-gray-400 truncate\">@thehashlordz</p>\r\n                  </div>\r\n                </a>\r\n\r\n                {/* Discord */}\r\n                <a\r\n                  href=\"https://discord.gg/fupx9AgZnc\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"flex  items-center gap-3 no-underline bg-[#0000009e]  m-auto lg:mb-0 mb-2  lg:w-full w-[200px] hover:bg-[#2a2c2f] rounded-lg px-4 py-3 transition duration-200 group\"\r\n                >\r\n                  <div className=\"flex-shrink-0\">\r\n                    <svg\r\n                      width=\"32\"\r\n                      height=\"32\"\r\n                      className=\"w-6 h-6 sm:w-8 sm:h-8\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#5865F2\" fillOpacity=\"0.2\" />\r\n                      <path\r\n                        d=\"M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09-.01-.02-.04-.03-.07-.03-1.5.26-2.93.71-4.27 1.33-.01 0-.02.01-.03.02-2.72 4.07-3.47 8.03-3.1 11.95 0 .02.01.04.03.05 1.8 1.32 3.53 2.12 5.24 2.65.03.01.06 0 .07-.02.4-.55.76-1.13 1.07-1.74.02-.04 0-.08-.04-.09-.57-.22-1.11-.48-1.64-.78-.04-.02-.04-.08-.01-.11.11-.08.22-.17.33-.25.02-.02.05-.02.07-.01 3.44 1.57 7.15 1.57 10.55 0 .02-.01.05-.01.07.01.11.09.22.17.33.26.04.03.04.09-.01.11-.52.31-1.07.56-1.64.78-.04.01-.05.06-.04.09.32.61.68 1.19 1.07 1.74.03.01.06.02.09.01 1.72-.53 3.45-1.33 5.25-2.65.02-.01.03-.03.03-.05.44-4.53-.73-8.46-3.1-11.95-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12 0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12 0 1.17-.83 2.12-1.89 2.12z\"\r\n                        fill=\"#5865F2\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"text-white min-w-0 flex-1\">\r\n                    <p className=\"text-sm sm:text-base mb-0 font-semibold truncate\">Discord</p>\r\n                    <p className=\"text-xs sm:text-sm mb-0 text-gray-400 truncate\">discord.gg/fupx9AgZnc</p>\r\n                  </div>\r\n                </a>\r\n\r\n                {/* Telegram */}\r\n                <a\r\n                  href=\"https://t.me/hashlordz\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"flex  items-center gap-3 no-underline bg-[#0000009e]  m-auto lg:mb-0 mb-2  lg:w-full w-[200px] hover:bg-[#2a2c2f] rounded-lg px-4 py-3 transition duration-200 group\"\r\n                >\r\n                  <div className=\"flex-shrink-0\">\r\n                    <svg\r\n                      width=\"32\"\r\n                      height=\"32\"\r\n                      className=\"w-6 h-6 sm:w-8 sm:h-8\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"#0088cc\" fillOpacity=\"0.2\" />\r\n                      <path\r\n                        d=\"M9.78 18.65l.28-4.23 7.68-6.92c.34-.31-.07-.46-.52-.19L7.74 13.3 3.64 12c-.88-.25-.89-.86.2-1.3l15.97-6.16c.73-.33 1.43.18 1.15 1.3l-2.72 12.81c-.19.91-.74 1.13-1.5.71L12.6 16.3l-1.99 1.93c-.23.23-.42.42-.83.42z\"\r\n                        fill=\"#0088cc\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"text-white min-w-0 flex-1\">\r\n                    <p className=\"text-sm sm:text-base mb-0 font-semibold truncate\">Telegram</p>\r\n                    <p className=\"text-xs sm:text-sm mb-0 text-gray-400 truncate\">t.me/hashlordz</p>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </>\r\n          :\r\n          <>\r\n            <div className=\"flex items-center justify-center mt-[100px] p-4\">\r\n              <div className=\"relative bg-black/80 backdrop-blur-xl rounded-2xl p-8 text-center max-w-md w-full border border-white/10 shadow-2xl\">\r\n                {/* Decorative gradient border */}\r\n                <div className=\"absolute inset-0 rounded-2xl bg-gradient-to-r from-yellow-500/20 via-orange-400/20 to-yellow-500/20 blur-sm -z-10\"></div>\r\n\r\n                {/* Wallet icon */}\r\n                <div className=\"mx-auto w-16 h-16 bg-gradient-to-r from-yellow-500 to-orange-400 rounded-full flex items-center justify-center mb-6\">\r\n                  <svg className=\"w-8 h-8 text-amber-900\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\" />\r\n                  </svg>\r\n                </div>\r\n\r\n                <h2 className=\"text-white font-bold text-3xl mb-3 bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent\">\r\n                  Connect Your Wallet\r\n                </h2>\r\n\r\n                <p className=\"text-gray-400 mb-8 text-lg leading-relaxed\">\r\n                  Securely connect your wallet to start your mining journey and unlock exclusive features.\r\n                </p>\r\n\r\n                <button\r\n                  onClick={openConnectModal}\r\n                  className=\"relative bg-gradient-to-r from-yellow-500 to-orange-400 hover:from-yellow-400 hover:to-orange-300 font-bold w-full py-4 text-amber-900 text-lg px-6 rounded-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg hover:shadow-yellow-500/25 active:scale-95\"\r\n                >\r\n                  <span className=\"relative z-10\">Connect Wallet</span>\r\n                  <div className=\"absolute inset-0 bg-white/20 rounded-xl opacity-0 hover:opacity-100 transition-opacity duration-300\"></div>\r\n                </button>\r\n\r\n                {/* Security note */}\r\n                <div className=\"mt-6 flex items-center justify-center text-gray-500 text-sm\">\r\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,7C13.4,7 14.8,8.6 14.8,10V11H16V18H8V11H9.2V10C9.2,8.6 10.6,7 12,7M12,8.2C11.2,8.2 10.4,8.7 10.4,10V11H13.6V10C13.6,8.7 12.8,8.2 12,8.2Z\" />\r\n                  </svg>\r\n                  Your connection is secure and encrypted\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n      }\r\n\r\n    </Layout>\r\n  )\r\n}\r\n"],"names":["Referral","chainId","useChainId","isConnected","address","useAccount","referralLink","setReferralLink","useState","copied","setCopied","data","referredUsers","refetch","refetchReferredUsers","useReadContract","BASE_NET","MINER_ADDRESS_BASE","MINER_ADDRESS_MAIN","abi","MinerAbi","functionName","args","zeroAddress","referralBonusPaid","refetchReferralBonusPaid","console","log","useEffect","window","location","origin","_jsx","className","children","_jsxs","Gift","Users","length","Coins","value","Number","parseFloat","ethers","toFixed","formatEarnings","Share2","onClick","async","navigator","clipboard","writeText","toast","success","setTimeout","err","error","disabled","Copy","Space","_activeItem$id$toStri","_activeItem$level$toS","_activeItem$id$toStri2","_activeItem$level$toS2","activeItem","setActiveItem","selectedItem","setSelectedItem","selectedAvailableItem","setSelectedAvailableItem","isUpgradingSpace","setIsUpgradingSpace","isUpgradingMiner","setIsUpgradingMiner","isStopingMiner","setIsStopingMiner","isStartingMiner","setIsStartingMiner","showModal","setShowModal","showStartMiningModal","setShowStartMiningModal","txResult","writeContractAsync","useWriteContract","openConnectModal","useConnectModal","disconnect","useDisconnect","balance","refetchBalance","useBalance","tokenBalance","refetchTokenBalance","HASH_ADDRESS_BASE","HASH_ADDRESS_MAIN","HashAbi","approvedTokenAmount","refetchApprovedTokenAmount","playerMinersPaginated","refetchPlayerMinersPaginated","ownerToFacility","refetchOwnerToFacility","getAmountFor2","refetchGetAmountFor2","getAmountFor3","refetchGetAmountFor3","leafCost","refetchLeafCost","steelCost","refetchSteelCost","diamondCost","refetchDiamondCost","timeUntilNextFacilityUpgrade","refetchTimeUntilNextFacilityUpgrade","isTokenTradeable","refetchIsTokenTradeable","levelUpPrice","refetchLevelUpPrice","cost","playerMiners","filter","item","x","availableMiners","isListedSell","id","toString","level","hashrate","src","minerIndex","ImgHumar1","ImgHumar2","ImgHumar3","alt","_Fragment","map","index","event","find","i","parseInt","stopPropagation","temp","minerId","then","catch","handleStopMining","miner","tokenAmount","UNIT256_MAX","handleUpgradeLevel","countDown","Math","floor","_availableMiners$sele","_availableMiners$sele2","useRefresh","fast","slow","useContext","RefreshContext","fastRefresh","slowRefresh","price","setPrice","isPurchasingMiner","setIsPurchasingMiner","isListingMiner","setIsListingMiner","showSellModal","setShowSellModal","handleBuyMiner","getMinerTypeColor","getMinerTypeName","getMinerImage","ImgLeaf","ImgSteel","ImgDiamond","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","type","placeholder","onChange","e","target","isNaN","handleSellMiner","ary","Array","from","_","isCancelling","isBuying","Marketplace","playerMinersOwned","refetchPlayerMinersOwned","selfMiners","setSelfMiners","otherMiners","setOtherMiners","btnStatus","setBtnStatus","undefined","selfMinersTemp","otherMinersTemp","forEach","owner","toLowerCase","push","handleCancelListing","handleBuying","EmptyState","_ref","message","icon","MinerCard","_ref2","_btnStatus$index","_btnStatus$index2","_btnStatus$index3","_btnStatus$index4","isOwned","minerType","getMinerType","minerImage","typeColor","typeBg","getMinerTypeBg","sellPrice","SpacePanel","activeTab","setActiveTab","tab","Store","nftAnimationStyle","document","createElement","innerHTML","head","appendChild","BuySpace","searchParams","useSearchParams","showModalFree","setShowModalFree","initialFacilityPrice","refetchInitialFacilityPrice","nextInitialFacilityPrice","refetchNextInitialFacilityPrice","initialMinerCnt","refetchInitialMinerCnt","isPurchasingInitialFacility","setIsPurchasingInitialFacility","isPurchasingFreeFacility","setIsPurchasingFreeFacility","referrer","setReferrer","get","referrerTemp","Imag1","RightPanel","useMediaQuery","initializedStarterFacility","refetchInitializedStarterFacility","isUsedFreeSpace","setIsUsedFreeSpace","dailyBlocks","BettingPage","hashRate","refetchPlayerHashrate","totalHashrate","refetchTotalHashrate","blocksUntilNextHalving","refetchBlocksUntilNextHalving","pendingRewards","refetchPendingRewards","playerHashcoinPerBlock","refetchPlayerHashcoinPerBlock","isClaiming","setIsClaiming","Layout","num","finally","href","rel","width","height","xmlns","fillOpacity"],"sourceRoot":""}