{"version":3,"file":"static/js/5227.958f91de.chunk.js","mappings":"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","sources":["config/index.js","components/Referal.jsx","assets/images/arrow-left.svg","assets/images/arrow-right.svg","components/Space.jsx","components/Store.jsx","components/MarketPlace.jsx","components/SpacePanel.jsx","components/BuySpace.jsx","components/RigthPanel.jsx","pages/Dashboard.jsx"],"sourcesContent":["export const MAIN_NET = 2741;\r\nexport const TEST_NET = 11124;\r\n\r\nexport const HASH_ADDRESS_TEST = \"0x7DF0d1623b3Ac433Ee5121ccb6753D9E61818D3a\";\r\nexport const HASH_ADDRESS_MAIN = \"\";\r\n\r\nexport const MINER_ADDRESS_TEST = \"0xd3fCdE8E683dba31BB0A9D82C8160c74B75e7351\";\r\nexport const MINER_ADDRESS_MAIN = \"\";\r\n\r\nexport const UNIT256_MAX = \"115792089237316195423570985008687907853269984665640564039457584007913129639935\";","import React, { useEffect, useState } from \"react\";\r\nimport { useChainId, useAccount, useReadContract, useWriteContract } from \"wagmi\";\r\nimport { zeroAddress } from \"viem\";\r\nimport toast from \"react-hot-toast\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport {\r\n  TEST_NET,\r\n  MINER_ADDRESS_TEST,\r\n  MINER_ADDRESS_MAIN,\r\n} from \"../config\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\n\r\nexport default function Referral() {\r\n  const chainId = useChainId();\r\n  const { isConnected, address } = useAccount();\r\n\r\n  const [referralLink, setReferralLink] = useState(\"\");\r\n\r\n  const { data: referredUsers, refetch: refetchReferredUsers } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getReferrals\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: referralBonusPaid, refetch: refetchReferralBonusPaid } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"referralBonusPaid\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  console.log(\"eagle referredUsers = \", referralBonusPaid);\r\n\r\n  useEffect(() => {\r\n    if (!isConnected || !address) return;\r\n\r\n    setReferralLink(`${window.location.origin}?ref=${address}`);\r\n  }, [address])\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(referralLink);\r\n    toast.success(\"Referral link copied!\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8 text-white\">\r\n      <div className=\"max-w-md mx-auto  font-mono\">\r\n        <h2 className=\"text-center text-lg font-bold border-b border-white pb-2 mb-4\">\r\n          REFER A FRIEND\r\n        </h2>\r\n\r\n        <p className=\"text-center text-sm mb-4\">\r\n          SHARE YOUR REFERRAL LINK WITH FRIENDS AND <br />\r\n          EARN A <span className=\"text-yellow-400\">2.5%</span> BONUS OF WHATEVER HASHCOIN THEY MINE!\r\n        </p>\r\n\r\n        <div className=\"flex justify-between items-center bg-[#122533] p-4 rounded mb-4\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-sm text-gray-400\">TOTAL REFERRALS</p>\r\n            <p className=\"text-xl font-bold text-yellow-400\">{referredUsers ? referredUsers.length : 0}</p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-sm text-gray-400\">TOTAL BIG EARNED</p>\r\n            <p className=\"text-xl font-bold text-yellow-400\">{referralBonusPaid ? parseFloat(ethers.formatEther(referralBonusPaid)).toFixed(2) : 0} $BIG</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-[#122533] p-3 rounded flex items-center justify-between mb-4\">\r\n          <span className=\"text-xs break-all\">{referralLink}</span>\r\n          <button\r\n            onClick={handleCopy}\r\n            className=\"bg-yellow-400 text-black text-xs px-3 py-1 ml-2 rounded hover:bg-yellow-300 font-bold\"\r\n          >\r\n            COPY\r\n          </button>\r\n        </div>\r\n\r\n        <button className=\"bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 font-bold w-full py-1 text-[#78350F] text-[18px] px-6 rounded-md\">\r\n          CLOSE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","var _g, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 17,\n    viewBox: \"0 0 17 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_2_18)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.520792 1.71528L0.701465 14.714C0.709109 15.264 1.16532 15.7077 1.71527 15.7L14.714 15.5194C15.264 15.5117 15.7077 15.0555 15.7 14.5056L15.5193 1.50681C15.5117 0.956865 15.0555 0.513163 14.5055 0.520807L1.5068 0.701479C0.956851 0.709123 0.513149 1.16533 0.520792 1.71528Z\",\n    fill: \"#427687\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.531737 2.5027L0.702333 14.7765C0.709456 15.289 1.14032 15.708 1.65277 15.7009L13.8891 15.5308C14.414 15.5235 14.8206 15.0928 14.8135 14.5804L14.643 2.31907C14.6358 1.79412 14.2051 1.38757 13.6926 1.39469L1.45629 1.56476C0.943493 1.54689 0.524614 1.99025 0.531737 2.5027Z\",\n    fill: \"#8CAFBF\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.08252 11.5139L3.04112 8.55591C2.81336 8.35906 2.8085 8.00909 3.0307 7.80598L5.98871 4.76458C6.30969 4.47259 6.81294 4.70312 6.81885 5.12808L6.84317 6.87791C6.84508 7.0154 6.95913 7.12632 7.09662 7.12441L12.8461 7.0445C13.121 7.04068 13.3491 7.26253 13.353 7.5375L13.3669 8.5374C13.3707 8.81238 13.1488 9.04048 12.8739 9.0443L7.12441 9.12422C6.98693 9.12613 6.876 9.24018 6.87791 9.37767L6.90223 11.1275C6.90814 11.5525 6.41149 11.7969 6.08252 11.5139Z\",\n    fill: \"#FAFAFA\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.5,\n    d: \"M1.76574 11.2364C1.47826 11.2404 1.39355 11.4416 1.44703 12.5909C1.4979 13.5528 1.617 14.0262 1.97096 14.3088C2.32492 14.5914 3.03839 14.6565 3.88848 14.6572C4.48843 14.6489 5.05087 14.6411 5.04653 14.3286C5.04062 13.9036 4.05322 13.9174 3.49841 13.575C2.40163 12.9152 2.1407 11.2312 1.76574 11.2364Z\",\n    fill: \"#B4E1ED\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_2_18\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 16,\n    fill: \"white\",\n    transform: \"translate(0.222366 16.2208) rotate(-90.7963)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.2847fef44207d50c261546008e90c0e2.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 17,\n    viewBox: \"0 0 17 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_2_18)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.6127 14.6078L15.6081 1.60779C15.6079 1.05779 15.1578 0.607945 14.6078 0.608137L1.60779 0.612675C1.05779 0.612867 0.607946 1.06302 0.608138 1.61302L0.612676 14.613C0.612868 15.163 1.06302 15.6129 1.61302 15.6127L14.613 15.6081C15.163 15.6079 15.6129 15.1578 15.6127 14.6078Z\",\n    fill: \"#427687\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.6124 13.8203L15.6081 1.54529C15.6079 1.03279 15.1828 0.607936 14.6703 0.608115L2.43279 0.612387C1.90779 0.61257 1.49544 1.03771 1.49562 1.55021L1.4999 13.8127C1.50008 14.3377 1.92522 14.7501 2.43772 14.7499L14.6752 14.7456C15.1877 14.7704 15.6126 14.3328 15.6124 13.8203Z\",\n    fill: \"#8CAFBF\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.1842 4.73469L13.1853 7.73364C13.4103 7.93356 13.4105 8.28356 13.1855 8.48364L10.1866 11.4847C9.86169 11.7723 9.3616 11.535 9.36146 11.11L9.36084 9.35997C9.3608 9.22247 9.24826 9.11001 9.11076 9.11006L3.36076 9.11207C3.08576 9.11216 2.86068 8.88724 2.86058 8.61224L2.86023 7.61224C2.86014 7.33724 3.08506 7.11216 3.36006 7.11207L9.11006 7.11006C9.24756 7.11001 9.36002 6.99747 9.35997 6.85997L9.35936 5.10997C9.35921 4.68497 9.85913 4.4473 10.1842 4.73469Z\",\n    fill: \"#FAFAFA\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.5,\n    d: \"M14.4969 5.07066C14.7844 5.07056 14.8718 4.87053 14.8339 3.72055C14.7961 2.75806 14.6834 2.2831 14.3333 1.99572C13.9832 1.70834 13.2707 1.63359 12.4207 1.62139C11.8207 1.6216 11.2582 1.6218 11.2583 1.9343C11.2584 2.3593 12.2459 2.35895 12.796 2.70876C13.8838 3.38338 14.1219 5.0708 14.4969 5.07066Z\",\n    fill: \"#B4E1ED\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_2_18\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 16,\n    fill: \"white\",\n    transform: \"translate(16.1076 0.107605) rotate(89.98)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.80e590597ee9fa9bb427ce7ff4e50a67.svg\";\nexport { ForwardRef as ReactComponent };","\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport LeftArrow from '../assets/images/arrow-left.svg'\r\nimport RightArrow from '../assets/images/arrow-right.svg'\r\nimport ImgHumar1 from '../assets/images/miners/leaf.png'\r\nimport ImgHumar2 from '../assets/images/miners/steel.png'\r\nimport ImgHumar3 from '../assets/images/miners/diamond.png'\r\nimport '../index.css'\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract, useDisconnect } from \"wagmi\";\r\nimport { useConnectModal } from \"@rainbow-me/rainbowkit\";\r\nimport {\r\n  MINER_ADDRESS_MAIN,\r\n  MINER_ADDRESS_TEST,\r\n  HASH_ADDRESS_TEST,\r\n  HASH_ADDRESS_MAIN,\r\n  TEST_NET,\r\n  MAIN_NET,\r\n  UNIT256_MAX\r\n} from \"../config\"\r\nimport HashAbi from \"../config/abis/HASH_ABI.json\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { zeroAddress } from \"viem\";\r\nimport toast from \"react-hot-toast\";\r\nimport { BaseWallet, ethers } from \"ethers\";\r\n\r\nexport default function Space() {\r\n  const [activeItem, setActiveItem] = useState()\r\n  const [selectedItem, setSelectedItem] = useState(-1)\r\n  const [selectedAvailableItem, setSelectedAvailableItem] = useState(-1)\r\n\r\n  const [isUpgradingSpace, setIsUpgradingSpace] = useState(false);\r\n  const [isUpgradingMiner, setIsUpgradingMiner] = useState(false);\r\n  const [isStopingMiner, setIsStopingMiner] = useState(false);\r\n  const [isStartingMiner, setIsStartingMiner] = useState(false);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showStartMiningModal, setShowStartMiningModal] = useState(false);\r\n\r\n  const { data: txResult, writeContractAsync } = useWriteContract();\r\n\r\n  const { openConnectModal } = useConnectModal();\r\n  const { disconnect } = useDisconnect();\r\n\r\n  const chainId = useChainId();\r\n  const { isConnected, address } = useAccount();\r\n  const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n  ////////HASH//////////////////////////////////////\r\n  const { data: tokenBalance, refetch: refetchTokenBalance } = useReadContract({\r\n    address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"balanceOf\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: approvedTokenAmount, refetch: refetchApprovedTokenAmount } = useReadContract({\r\n    address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"allowance\",\r\n    args: [isConnected ? address : zeroAddress, chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN],\r\n    chainId: chainId,\r\n  });\r\n\r\n  /////// Miner //////////////////////////////////\r\n  const { data: playerMinersPaginated, refetch: refetchPlayerMinersPaginated } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getPlayerMinersPaginated\",\r\n    args: [isConnected ? address : zeroAddress, 0, isConnected ? 100 : 0],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: ownerToFacility, refetch: refetchOwnerToFacility } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"ownerToFacility\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: getAmountFor2, refetch: refetchGetAmountFor2 } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['25000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: getAmountFor3, refetch: refetchGetAmountFor3 } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['100000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: leafCost, refetch: refetchLeafCost } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['2500000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: steelCost, refetch: refetchSteelCost } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['2500000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: diamondCost, refetch: refetchDiamondCost } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['250000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: timeUntilNextFacilityUpgrade, refetch: refetchTimeUntilNextFacilityUpgrade } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"timeUntilNextFacilityUpgrade\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const playerMiners = !(playerMinersPaginated && playerMinersPaginated?.length > 0) ? [] : playerMinersPaginated.filter(item => Number(item.x) !== 100);\r\n  const availableMiners = !(playerMinersPaginated && playerMinersPaginated?.length > 0) ? [] : playerMinersPaginated.filter(item => Number(item.x) === 100);\r\n\r\n  const handleUpgradeSpace = async () => {\r\n    setIsUpgradingSpace(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsUpgradingSpace(false);\r\n      return;\r\n    }\r\n    if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n      toast.error(\"Please switch to the correct network.\");\r\n      setIsUpgradingSpace(false);\r\n      return;\r\n    }\r\n    if (Number(timeUntilNextFacilityUpgrade) > 0) {\r\n      toast.error(`Please wait cooldown ${timeUntilNextFacilityUpgrade} seconds`);\r\n      setIsUpgradingSpace(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsUpgradingSpace(false);\r\n      return;\r\n    }\r\n    const tokenAmount = Number(ownerToFacility[1]) === 3 ? ethers.formatEther(getAmountFor2) : ethers.formatEther(getAmountFor3);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(tokenBalance)) < parseFloat(tokenAmount)) {\r\n      toast.error(\"Insufficient token amount.\");\r\n      setIsUpgradingSpace(false);\r\n      return;\r\n    }\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(approvedTokenAmount)) < parseFloat(tokenAmount)) {\r\n      await writeContractAsync({\r\n        address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"approve\",\r\n        args: [chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN, UNIT256_MAX],\r\n        value: '0'\r\n      })\r\n        .then(() => {\r\n          // setTimeout(async () => {\r\n          //   setIsUpgradingSpace(false);\r\n          //   setShowModal(false);\r\n          //   await refetchPlayerMinersPaginated();\r\n          //   await refetchOwnerToFacility();\r\n          // }, 3000); // Keep animation running for a bit after Claim completes\r\n        })\r\n        .catch((err) => {\r\n          setIsUpgradingSpace(false);\r\n        });\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"buyNewFacility\",\r\n      args: [],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsUpgradingSpace(false);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsUpgradingSpace(false);\r\n      });\r\n  }\r\n\r\n  const handleUpgradeLevel = async (minerId) => {\r\n    setIsUpgradingMiner(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n      toast.error(\"Please switch to the correct network.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    const miner = playerMiners.find(i => i.id.toString() === minerId.toString());\r\n    if (miner.level.toString() === \"5\") {\r\n      toast.error(\"Miner is already at max level.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    if (Number(timeUntilNextFacilityUpgrade) > 0) {\r\n      toast.error(`Please wait cooldown ${timeUntilNextFacilityUpgrade} seconds`);\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    const tokenAmount = minerId === \"3\" ? ethers.formatEther(diamondCost) : minerId === \"2\" ? ethers.formatEther(steelCost) : ethers.formatEther(leafCost);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(tokenBalance)) < parseFloat(tokenAmount)) {\r\n      toast.error(\"Insufficient token amount.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(approvedTokenAmount)) < parseFloat(tokenAmount)) {\r\n      await writeContractAsync({\r\n        address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"approve\",\r\n        args: [chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN, UNIT256_MAX],\r\n        value: '0'\r\n      })\r\n        .then(() => {\r\n          // setTimeout(async () => {\r\n          //   setIsUpgradingMiner(false);\r\n          //   setShowModal(false);\r\n          //   await refetchPlayerMinersPaginated();\r\n          //   await refetchOwnerToFacility();\r\n          // }, 3000); // Keep animation running for a bit after Claim completes\r\n        })\r\n        .catch((err) => {\r\n          setIsUpgradingMiner(false);\r\n        });\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"updateMiner\",\r\n      args: [minerId],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsUpgradingMiner(false);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsUpgradingMiner(false);\r\n      });\r\n  }\r\n\r\n  const handleStopMining = async (minerId) => {\r\n    setIsStopingMiner(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsStopingMiner(false);\r\n      return;\r\n    }\r\n    if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n      toast.error(\"Please switch to the correct network.\");\r\n      setIsStopingMiner(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsStopingMiner(false);\r\n      return;\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"stopMining\",\r\n      args: [minerId],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsStopingMiner(false);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsStopingMiner(false);\r\n      });\r\n  }\r\n\r\n  const handleStartMining = async () => {\r\n    setIsStartingMiner(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsStartingMiner(false);\r\n      return;\r\n    }\r\n    if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n      toast.error(\"Please switch to the correct network.\");\r\n      setIsStartingMiner(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsStartingMiner(false);\r\n      return;\r\n    }\r\n    if(!availableMiners[selectedAvailableItem]?.id.toString()) {\r\n      toast.error(\"Please select or buy a miner to start mining.\");\r\n      setIsStartingMiner(false);\r\n      return;\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"startMining\",\r\n      args: [availableMiners[selectedAvailableItem]?.id.toString(), selectedItem],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsStartingMiner(false);\r\n          setShowStartMiningModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsStartingMiner(false);\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-span-2 rounded-b-lg space-y-6 p-4 bg-[#1B2531]\">\r\n      <div className=\"flex justify-between\">\r\n        <div className=\"space-y-2 w-1/2 text-xl\">\r\n          <div className=\"text-yellow-400 font-medium\">ID: #{activeItem?.id.toString() ?? \"-\"}</div>\r\n          <div className=\"text-yellow-400 font-medium\">Level: {activeItem?.level.toString() ?? \"-\"}</div>\r\n          <div className=\"text-yellow-400 font-medium\" onClick={() => console.log(activeItem)}>Power: {activeItem?.hashrate.toString() ?? \"-\"}</div>\r\n        </div>\r\n        {activeItem?.id.toString() ? <div className=\"bg-black w-1/2 rounded-lg border border-slate-600 p-2 aspect-square max-w-28 max-h-28\">\r\n          <div className=\"relative w-full h-full\">\r\n            <div className=\"absolute top-1 left-1 text-xs text-yellow-400 font-bold\">#{activeItem?.id.toString() ?? \"—\"}</div>\r\n            <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {activeItem?.level.toString() ?? \"—\"}</div>\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                <img src={activeItem?.minerIndex.toString() === \"1\" ? ImgHumar1 : activeItem?.minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> : <></>}\r\n      </div>\r\n\r\n      {/* <div className=\"border-t border-slate-700/50\"></div> */}\r\n\r\n      {/* \r\n      <div className=\"space-y-3\">\r\n        <h3 className=\"text-white font-medium text-xl\">Move Miner</h3>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <span className=\"text-white text-xl mr-3\">A</span>\r\n          <div className=\"flex items-center justify-center\">\r\n            <img src={LeftArrow} alt=\"\" className=\"w-[25px]\" />\r\n            <img src={RightArrow} alt=\"\" className=\"w-[25px]\" />\r\n          </div>\r\n          <span className=\"text-white text-xl ml-3\">B</span>\r\n          <button className=\"px-3 py-1 text-xl text-white font-medium\">SWAP</button>\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"border-t border-slate-700/50\"></div>\r\n\r\n      {/* <div className=\"space-y-3\">\r\n        <h3 className=\"text-yellow-400 font-medium text-xl\">Sell Miner</h3>\r\n        <div className=\"flex space-x-2\">\r\n          <div className=\"relative flex-1\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Price\"\r\n              className=\"w-full px-3 text-xl py-2 bg-[#15120D] border-2 border-yellow-500 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:border-yellow-400 pr-12\"\r\n            />\r\n            <span className=\"absolute right-3 text-xl top-1/2 transform -translate-y-1/2 text-yellow-400 font-medium\">ETH</span>\r\n          </div>\r\n          <button className=\"px-4 py-2 text-yellow-500 border-2 border-yellow-500 rounded-lg text-sm font-medium\">LIST</button>\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"grid grid-cols-3 gap-3 mt-6 h-[400px] overflow-y-auto p-3\">\r\n        {[null, null, null, null, null, null, null].map((item, index) => (\r\n          <div\r\n            key={index}\r\n            onClick={(event) => {\r\n              setSelectedItem(index);\r\n              // console.log('selectedItem', Number(ownerToFacility[1]));\r\n              if (!(ownerToFacility && index < Number(ownerToFacility[1]))) {\r\n                toast.error(\"Please upgrade space to extand!\")\r\n              } else if (!(playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())))) {\r\n                setShowStartMiningModal(true);\r\n              } else {\r\n                setActiveItem(playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())))\r\n              }\r\n            }}\r\n            className={`relative aspect-square flex items-center justify-center bg-black rounded-lg  cursor-pointer transition-all ${playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())) ? \"border-slate-600 border-1\" : \"border-slate-700/50 border-1\"\r\n              } ${index === selectedItem ? \"border-yellow-400 shadow-lg shadow-yellow-400/20 border-4\" : \"border-white border-2\"} ${ownerToFacility && index < Number(ownerToFacility[1]) ? '' : 'opacity-25'}`}\r\n          >\r\n            {playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())) ? (\r\n              <>\r\n                <div className=\"absolute top-1 left-1 text-xs text-white font-bold\">#{playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).id.toString()}</div>\r\n                <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).level.toString()}</div>\r\n                <div className=\"p-2 h-full\">\r\n                  <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                    <img src={playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).minerIndex.toString() === \"1\" ? ImgHumar1 : playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  className=\"absolute bottom-1 mx-auto text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded h-6 w-32\"\r\n                  onClick={(event) => {\r\n                    event.stopPropagation();\r\n                    setSelectedItem(index)\r\n                    // console.log(\"okay\", item, index, selectedItem, index === selectedItem, playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())))\r\n                    handleStopMining(playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).id.toString())\r\n                  }}\r\n                >{`${isStopingMiner ? `Stoping...` : `Stop Mining`}`}</button>\r\n                <button\r\n                  className=\"absolute bottom-8 mx-auto text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded h-6 w-32\"\r\n                  onClick={async (event) => {\r\n                    event.stopPropagation();\r\n                    setSelectedItem(index);\r\n                    handleUpgradeLevel(playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).id.toString())\r\n                  }}\r\n                >{`${isUpgradingMiner ? `Updating...` : `Update Level`}`}</button>\r\n              </>\r\n            ) : (\r\n              <h2 className=\"text-slate-600 pb-[7px] lg:pb-0 h-fit lg:text-6xl mb-0 text-[26px] font-black\">+</h2>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        className=\"text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded h-12 w-32\"\r\n        onClick={() => setShowModal(true)}\r\n      >Upgrade Space</button>\r\n      {/* Modal */}\r\n      {showModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n            <h2 className=\"text-[25px] font-bold mb-2 text-white\">UPGRADE SPACE</h2>\r\n            <p className=\"text-sm text-gray-300 mb-2\">Upgrade Space to setup more minor!</p>\r\n            <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n            <p className=\"text-left text-[#F9A82C] font-medium mb-2\">Upgrade Your Space</p>\r\n            <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Space Capacity:</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${Number(ownerToFacility[1])} Miners -> ${Number(ownerToFacility[1]) + 2} Miners`}</span>\r\n              </div>\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Available Miners</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`Leaf ${Number(ownerToFacility[1]) >= 3 ? `, Steel` : ``} ${Number(ownerToFacility[1]) >= 5 ? `, Diamond` : ``} Miners`}</span>\r\n              </div>\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Price</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${Number(ownerToFacility[1]) === 3 ? `${getAmountFor2 ? ethers.formatEther(getAmountFor2) : '--'} $Hash` : `${getAmountFor3 ? ethers.formatEther(getAmountFor3) : '--'} $Hash`}`}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex justify-between mt-6 gap-4\">\r\n              <button\r\n                onClick={() => setShowModal(false)}\r\n                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n              >\r\n                CANCEL\r\n              </button>\r\n              <button\r\n                onClick={handleUpgradeSpace}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isUpgradingSpace ? 'Upgrading...' : 'Upgrade Space'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showStartMiningModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n            <h2 className=\"text-[25px] font-bold mb-2 text-white\">Start Mining</h2>\r\n            <p className=\"text-sm text-gray-300 mb-2\">Select miner to start mining!</p>\r\n            {/* <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" /> */}\r\n            <p className=\"text-left text-[#F9A82C] font-medium mb-2\">Available miners</p>\r\n            <div className=\"grid grid-cols-3 gap-3 mt-6 h-[300px] overflow-y-auto p-3\">\r\n              {availableMiners.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  onClick={(event) => {\r\n                    setSelectedAvailableItem(index);\r\n                  }}\r\n                  className={`relative aspect-square flex items-center justify-center bg-black rounded-lg  cursor-pointer transition-all ${index === selectedAvailableItem ? \"border-yellow-400 shadow-lg shadow-yellow-400/20 border-4\" : \"border-white border-2\"}`}\r\n                >\r\n                  <div className=\"absolute top-1 left-1 text-xs text-white font-bold\">#{item.id.toString()}</div>\r\n                  <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {item.level.toString()}</div>\r\n                  <div className=\"p-2 h-full\">\r\n                    <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                      <img src={item.minerIndex.toString() === \"1\" ? ImgHumar1 : item.minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex justify-between mt-6 gap-4\">\r\n              <button\r\n                onClick={() => {\r\n                  setShowStartMiningModal(false)\r\n                }}\r\n                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n              >\r\n                CANCEL\r\n              </button>\r\n              <button\r\n                onClick={handleStartMining}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isStartingMiner ? 'Starting...' : 'Start Mining'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport LeftArrow from '../assets/images/arrow-left.svg'\r\nimport RightArrow from '../assets/images/arrow-right.svg'\r\nimport ImgHumar1 from '../assets/images/miners/leaf.png'\r\nimport ImgHumar2 from '../assets/images/miners/steel.png'\r\nimport ImgHumar3 from '../assets/images/miners/diamond.png'\r\nimport '../index.css'\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract, useDisconnect } from \"wagmi\";\r\nimport { useConnectModal } from \"@rainbow-me/rainbowkit\";\r\nimport {\r\n    MINER_ADDRESS_MAIN,\r\n    MINER_ADDRESS_TEST,\r\n    HASH_ADDRESS_TEST,\r\n    HASH_ADDRESS_MAIN,\r\n    TEST_NET,\r\n    MAIN_NET,\r\n    UNIT256_MAX\r\n} from \"../config\"\r\nimport HashAbi from \"../config/abis/HASH_ABI.json\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { zeroAddress } from \"viem\";\r\nimport toast from \"react-hot-toast\";\r\nimport { BaseWallet, ethers } from \"ethers\";\r\n\r\nexport default function Space() {\r\n    const [activeItem, setActiveItem] = useState()\r\n    const [selectedItem, setSelectedItem] = useState(-1)\r\n\r\n    const [price, setPrice] = useState(0);\r\n\r\n    const [isPurchasingMiner, setIsPurchasingMiner] = useState(false);\r\n    const [isUpgradingMiner, setIsUpgradingMiner] = useState(false);\r\n    const [isListingMiner, setIsListingMiner] = useState(false);\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showSellModal, setShowSellModal] = useState(false);\r\n\r\n    const { data: txResult, writeContractAsync } = useWriteContract();\r\n\r\n    const { openConnectModal } = useConnectModal();\r\n    const { disconnect } = useDisconnect();\r\n\r\n    const chainId = useChainId();\r\n    const { isConnected, address } = useAccount();\r\n    const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n    ////////HASH//////////////////////////////////////\r\n    const { data: tokenBalance, refetch: refetchTokenBalance } = useReadContract({\r\n        address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n        abi: HashAbi,\r\n        functionName: \"balanceOf\",\r\n        args: [isConnected ? address : zeroAddress],\r\n        chainId: chainId,\r\n    });\r\n\r\n    const { data: approvedTokenAmount, refetch: refetchApprovedTokenAmount } = useReadContract({\r\n        address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n        abi: HashAbi,\r\n        functionName: \"allowance\",\r\n        args: [isConnected ? address : zeroAddress, chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN],\r\n        chainId: chainId,\r\n    });\r\n\r\n    /////// Miner //////////////////////////////////\r\n    const { data: playerMinersPaginated, refetch: refetchPlayerMinersPaginated } = useReadContract({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"getPlayerMinersPaginated\",\r\n        args: [isConnected ? address : zeroAddress, 0, isConnected ? 100 : 0],\r\n        chainId: chainId,\r\n    });\r\n\r\n    const { data: ownerToFacility, refetch: refetchOwnerToFacility } = useReadContract({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"ownerToFacility\",\r\n        args: [isConnected ? address : zeroAddress],\r\n        chainId: chainId,\r\n    });\r\n\r\n    const { data: leafCost, refetch: refetchLeafCost } = useReadContract({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"getTokenAmountFromEthAmount\",\r\n        args: ['2500000000'],\r\n        chainId: chainId,\r\n    });\r\n    const { data: steelCost, refetch: refetchSteelCost } = useReadContract({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"getTokenAmountFromEthAmount\",\r\n        args: ['2500000000'],\r\n        chainId: chainId,\r\n    });\r\n    const { data: diamondCost, refetch: refetchDiamondCost } = useReadContract({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"getTokenAmountFromEthAmount\",\r\n        args: ['250000000000'],\r\n        chainId: chainId,\r\n    });\r\n    const { data: timeUntilNextFacilityUpgrade, refetch: refetchTimeUntilNextFacilityUpgrade } = useReadContract({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"timeUntilNextFacilityUpgrade\",\r\n        args: [isConnected ? address : zeroAddress],\r\n        chainId: chainId,\r\n    });\r\n\r\n    const availableMiners = !(playerMinersPaginated && playerMinersPaginated?.length > 0) ? [] : playerMinersPaginated.filter(item => Number(item.x) === 100);\r\n\r\n    const handleBuyMiner = async (minerIndex) => {\r\n        setIsPurchasingMiner(true);\r\n        if (!isConnected || !address) {\r\n            toast.error(\"Please connect your wallet first.\");\r\n            setIsPurchasingMiner(false);\r\n            return;\r\n        }\r\n        if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n            toast.error(\"Please switch to the correct network.\");\r\n            setIsPurchasingMiner(false);\r\n            return;\r\n        }\r\n        if (Number(timeUntilNextFacilityUpgrade) > 0) {\r\n            toast.error(`Please wait cooldown ${timeUntilNextFacilityUpgrade} seconds`);\r\n            setIsPurchasingMiner(false);\r\n            return;\r\n        }\r\n        if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n            toast.error(\"Insufficient gas fee.\");\r\n            setIsPurchasingMiner(false);\r\n            return;\r\n        }\r\n        const tokenAmount = minerIndex === 1 ? ethers.formatEther(leafCost) : minerIndex === 2 ? ethers.formatEther(steelCost) : ethers.formatEther(diamondCost);\r\n        if (!tokenAmount || parseFloat(ethers.formatEther(tokenBalance)) < parseFloat(tokenAmount)) {\r\n            toast.error(\"Insufficient token amount.\");\r\n            setIsPurchasingMiner(false);\r\n            return;\r\n        }\r\n        if (!tokenAmount || parseFloat(ethers.formatEther(approvedTokenAmount)) < parseFloat(tokenAmount)) {\r\n            await writeContractAsync({\r\n                address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n                abi: MinerAbi,\r\n                functionName: \"approve\",\r\n                args: [chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN, UNIT256_MAX],\r\n                value: '0'\r\n            })\r\n                .then(() => {\r\n                    // setTimeout(async () => {\r\n                    //   setIsPurchasingMiner(false);\r\n                    //   setShowModal(false);\r\n                    //   await refetchPlayerMinersPaginated();\r\n                    //   await refetchOwnerToFacility();\r\n                    // }, 3000); // Keep animation running for a bit after Claim completes\r\n                })\r\n                .catch((err) => {\r\n                    setIsPurchasingMiner(false);\r\n                });\r\n        }\r\n        await writeContractAsync({\r\n            address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n            abi: MinerAbi,\r\n            functionName: \"buyMiner\",\r\n            args: [minerIndex],\r\n            value: '0'\r\n        })\r\n            .then(() => {\r\n                setTimeout(async () => {\r\n                    setIsPurchasingMiner(false);\r\n                    setShowModal(false);\r\n                    await refetchPlayerMinersPaginated();\r\n                    await refetchOwnerToFacility();\r\n                }, 3000); // Keep animation running for a bit after Claim completes\r\n            })\r\n            .catch((err) => {\r\n                setIsPurchasingMiner(false);\r\n            });\r\n    }\r\n\r\n    const handleSellMiner = async () => {\r\n        setIsListingMiner(true);\r\n        if (!isConnected || !address) {\r\n            toast.error(\"Please connect your wallet first.\");\r\n            setIsListingMiner(false);\r\n            return;\r\n        }\r\n        if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n            toast.error(\"Please switch to the correct network.\");\r\n            setIsListingMiner(false);\r\n            return;\r\n        }\r\n        if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n            toast.error(\"Insufficient gas fee.\");\r\n            setIsListingMiner(false);\r\n            return;\r\n        }\r\n        if (price <= 0) {\r\n            toast.error(\"Please input valid price.\");\r\n            setIsListingMiner(false);\r\n            return;\r\n        }\r\n        await writeContractAsync({\r\n            address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n            abi: MinerAbi,\r\n            functionName: \"listForSale\",\r\n            args: [activeItem?.id, ethers.parseEther(price)],\r\n            value: '0'\r\n        })\r\n            .then(() => {\r\n                setTimeout(async () => {\r\n                    setIsListingMiner(false);\r\n                    setShowSellModal(false);\r\n                    await refetchPlayerMinersPaginated();\r\n                    await refetchOwnerToFacility();\r\n                }, 3000); // Keep animation running for a bit after Claim completes\r\n            })\r\n            .catch((err) => {\r\n                setIsListingMiner(false);\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const handleUpgradeLevel = async (minerId) => {\r\n        setIsUpgradingMiner(true);\r\n        if (!isConnected || !address) {\r\n            toast.error(\"Please connect your wallet first.\");\r\n            setIsUpgradingMiner(false);\r\n            return;\r\n        }\r\n        if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n            toast.error(\"Please switch to the correct network.\");\r\n            setIsUpgradingMiner(false);\r\n            return;\r\n        }\r\n        const miner = availableMiners.find(i => i.id.toString() === minerId.toString());\r\n        if (miner.level.toString() === \"5\") {\r\n            toast.error(\"Miner is already at max level.\");\r\n            setIsUpgradingMiner(false);\r\n            return;\r\n        }\r\n        if (Number(timeUntilNextFacilityUpgrade) > 0) {\r\n            toast.error(`Please wait cooldown ${timeUntilNextFacilityUpgrade} seconds`);\r\n            setIsUpgradingMiner(false);\r\n            return;\r\n        }\r\n        if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n            toast.error(\"Insufficient gas fee.\");\r\n            setIsUpgradingMiner(false);\r\n            return;\r\n        }\r\n        const tokenAmount = minerId === \"3\" ? ethers.formatEther(diamondCost) : minerId === \"2\" ? ethers.formatEther(steelCost) : ethers.formatEther(leafCost);\r\n        if (!tokenAmount || parseFloat(ethers.formatEther(tokenBalance)) < parseFloat(tokenAmount)) {\r\n            toast.error(\"Insufficient token amount.\");\r\n            setIsUpgradingMiner(false);\r\n            return;\r\n        }\r\n        if (!tokenAmount || parseFloat(ethers.formatEther(approvedTokenAmount)) < parseFloat(tokenAmount)) {\r\n            await writeContractAsync({\r\n                address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n                abi: MinerAbi,\r\n                functionName: \"approve\",\r\n                args: [chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN, UNIT256_MAX],\r\n                value: '0'\r\n            })\r\n                .then(() => {\r\n                    // setTimeout(async () => {\r\n                    //   setIsUpgradingMiner(false);\r\n                    //   setShowModal(false);\r\n                    //   await refetchPlayerMinersPaginated();\r\n                    //   await refetchOwnerToFacility();\r\n                    // }, 3000); // Keep animation running for a bit after Claim completes\r\n                })\r\n                .catch((err) => {\r\n                    setIsUpgradingMiner(false);\r\n                });\r\n        }\r\n        await writeContractAsync({\r\n            address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n            abi: MinerAbi,\r\n            functionName: \"updateMiner\",\r\n            args: [minerId],\r\n            value: '0'\r\n        })\r\n            .then(() => {\r\n                setTimeout(async () => {\r\n                    setIsUpgradingMiner(false);\r\n                    setShowModal(false);\r\n                    await refetchPlayerMinersPaginated();\r\n                    await refetchOwnerToFacility();\r\n                }, 3000); // Keep animation running for a bit after Claim completes\r\n            })\r\n            .catch((err) => {\r\n                setIsUpgradingMiner(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-span-2 rounded-b-lg space-y-6 p-4 bg-[#1B2531]\">\r\n            <div className=\"flex justify-between\">\r\n                <div className=\"space-y-2 w-1/2 text-xl\">\r\n                    <div className=\"text-yellow-400 font-medium\">ID: #{activeItem?.id.toString() ?? \"-\"}</div>\r\n                    <div className=\"text-yellow-400 font-medium\">Level: {activeItem?.level.toString() ?? \"-\"}</div>\r\n                    <div className=\"text-yellow-400 font-medium\" onClick={() => console.log(activeItem)}>Power: {activeItem?.hashrate.toString() ?? \"-\"}</div>\r\n                </div>\r\n                {activeItem?.id.toString() ? <div className=\"bg-black w-1/2 rounded-lg border border-slate-600 p-2 aspect-square max-w-28 max-h-28\">\r\n                    <div className=\"relative w-full h-full\">\r\n                        <div className=\"absolute top-1 left-1 text-xs text-yellow-400 font-bold\">#{activeItem?.id.toString() ?? \"—\"}</div>\r\n                        <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {activeItem?.level.toString() ?? \"—\"}</div>\r\n                        <div className=\"flex items-center justify-center h-full\">\r\n                            <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                                <img src={activeItem?.minerIndex.toString() === \"1\" ? ImgHumar1 : activeItem?.minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> : <></>}\r\n            </div>\r\n\r\n            {/* <div className=\"border-t border-slate-700/50\"></div> */}\r\n\r\n            {/* \r\n      <div className=\"space-y-3\">\r\n        <h3 className=\"text-white font-medium text-xl\">Move Miner</h3>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <span className=\"text-white text-xl mr-3\">A</span>\r\n          <div className=\"flex items-center justify-center\">\r\n            <img src={LeftArrow} alt=\"\" className=\"w-[25px]\" />\r\n            <img src={RightArrow} alt=\"\" className=\"w-[25px]\" />\r\n          </div>\r\n          <span className=\"text-white text-xl ml-3\">B</span>\r\n          <button className=\"px-3 py-1 text-xl text-white font-medium\">SWAP</button>\r\n        </div>\r\n      </div> */}\r\n\r\n            <div className=\"border-t border-slate-700/50\"></div>\r\n\r\n            {/* <div className=\"space-y-3\">\r\n        <h3 className=\"text-yellow-400 font-medium text-xl\">Sell Miner</h3>\r\n        <div className=\"flex space-x-2\">\r\n          <div className=\"relative flex-1\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Price\"\r\n              className=\"w-full px-3 text-xl py-2 bg-[#15120D] border-2 border-yellow-500 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:border-yellow-400 pr-12\"\r\n            />\r\n            <span className=\"absolute right-3 text-xl top-1/2 transform -translate-y-1/2 text-yellow-400 font-medium\">ETH</span>\r\n          </div>\r\n          <button className=\"px-4 py-2 text-yellow-500 border-2 border-yellow-500 rounded-lg text-sm font-medium\">LIST</button>\r\n        </div>\r\n      </div> */}\r\n\r\n            <div className=\"grid grid-cols-3 gap-3 mt-6 h-[400px] overflow-y-auto p-3\">\r\n                {[null, ...availableMiners].map((item, index) => (\r\n                    <div\r\n                        key={index}\r\n                        onClick={(event) => {\r\n                            setSelectedItem(index);\r\n                            // console.log('selectedItem', Number(ownerToFacility[1]));\r\n                            if (!item) {\r\n                                setShowModal(true);\r\n                            } else {\r\n                                setActiveItem(availableMiners[index - 1])\r\n                            }\r\n                        }}\r\n                        className={`relative aspect-square flex items-center justify-center bg-black rounded-lg  cursor-pointer transition-all ${index === selectedItem ? \"border-yellow-400 shadow-lg shadow-yellow-400/20 border-4\" : \"border-white border-2\"}`}\r\n                    >\r\n                        {item ? (<>\r\n                            <div className=\"absolute top-1 left-1 text-xs text-white font-bold\">#{item?.id.toString()}</div>\r\n                            <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {item?.level.toString()}</div>\r\n                            <div className=\"p-2 h-full\">\r\n                                <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                                    <img src={item?.minerIndex.toString() === \"1\" ? ImgHumar1 : item?.minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                className=\"absolute bottom-8 mx-auto text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded h-6 w-32\"\r\n                                onClick={(event) => {\r\n                                    event.stopPropagation();\r\n                                    setSelectedItem(index)\r\n                                    setActiveItem(availableMiners[index - 1])\r\n                                    setShowSellModal(true);\r\n                                }}\r\n                            >{isListingMiner ? 'Listing...' : 'List Miner'}</button>\r\n                            <button\r\n                                className=\"absolute bottom-1 mx-auto text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded h-6 w-32\"\r\n                                onClick={(event) => {\r\n                                    event.stopPropagation();\r\n                                    setActiveItem(availableMiners[index - 1])\r\n                                    setSelectedItem(index)\r\n                                    handleUpgradeLevel(item?.id.toString())\r\n                                }}\r\n                            >{isUpgradingMiner ? 'Updating...' : 'Update Level'}</button>\r\n                        </>) : (\r\n                            <h2 className=\"text-slate-600 pb-[7px] lg:pb-0 h-fit lg:text-2xl mb-0 text-[20px] font-black\">Buy Miner</h2>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Modal */}\r\n            {showModal && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n                        <h2 className=\"text-[25px] font-bold mb-2 text-white\">BUY MINER</h2>\r\n                        <p className=\"text-sm text-gray-300 mb-2\">Buy more miners!</p>\r\n                        <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n                        <p className=\"text-left text-[#F9A82C] font-medium mb-2\">Miners</p>\r\n                        <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n                            <div className=\"flex justify-between mb-1 font-medium\">\r\n                                <span>- Available</span>\r\n                                <span className=\"text-yellow-400 font-medium\">{`${ownerToFacility ? Number(ownerToFacility[1]) - Number(ownerToFacility[2]) : `-`} Miners`}</span>\r\n                            </div>\r\n                            <div className=\"flex justify-between mb-1 font-medium\">\r\n                                <span>- Leaf Miner</span>\r\n                                <span className=\"text-yellow-400 font-medium\">{`${leafCost ? ethers.formatEther(leafCost) : `-`} $Hash`}</span>\r\n                            </div>\r\n                            {Number(ownerToFacility[1]) > 3 ? <div className=\"flex justify-between mb-1 font-medium\">\r\n                                <span>- Steel Miner</span>\r\n                                <span className=\"text-yellow-400 font-medium\">{`${steelCost ? ethers.formatEther(steelCost) : `-`} $Hash`}</span>\r\n                            </div> : <></>}\r\n                            {Number(ownerToFacility[1]) > 5 ? <div className=\"flex justify-between mb-1 font-medium\">\r\n                                <span>- Diamond Miner</span>\r\n                                <span className=\"text-yellow-400 font-medium\">{`${diamondCost ? ethers.formatEther(diamondCost) : `-`} $Hash`}</span>\r\n                            </div> : <></>}\r\n                        </div>\r\n                        <div className=\"grid grid-cols-2 gap-3 mt-6\">\r\n                            <button\r\n                                onClick={() => setShowModal(false)}\r\n                                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n                            >\r\n                                CANCEL\r\n                            </button>\r\n                            <button\r\n                                onClick={() => handleBuyMiner(1)}\r\n                                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n                            >\r\n                                {isPurchasingMiner ? 'Purchasing...' : 'Buy Leaf Miner'}\r\n                            </button>\r\n                            {Number(ownerToFacility[1]) > 3 ? <button\r\n                                onClick={() => handleBuyMiner(2)}\r\n                                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n                            >\r\n                                {isPurchasingMiner ? 'Purchasing...' : 'Buy Steel Miner'}\r\n                            </button> : <></>}\r\n                            {Number(ownerToFacility[1]) > 5 ? <button\r\n                                onClick={() => handleBuyMiner(3)}\r\n                                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n                            >\r\n                                {isPurchasingMiner ? 'Purchasing...' : 'Buy Diamond Miner'}\r\n                            </button> : <></>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Modal */}\r\n            {showSellModal && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n                        <h2 className=\"text-[25px] font-bold mb-2 text-white\">Sell Miner</h2>\r\n                        <p className=\"text-sm text-gray-300 mb-2\">List your miner to sell!</p>\r\n                        <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n                        <p className=\"text-left text-[#F9A82C] font-medium mb-2\">Miners</p>\r\n                        <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n                            <div className=\"relative flex-1\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Price\"\r\n                                    className=\"w-full px-3 text-xl py-2 bg-[#15120D] border-2 border-yellow-500 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:border-yellow-400 pr-12\"\r\n                                    onChange={(e) => {\r\n                                        const value = e.target.value;\r\n                                        if (!isNaN(value) && value >= 0) {\r\n                                            setPrice(value);\r\n                                        } else {\r\n                                            toast.error(\"Please enter a valid price.\");\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <span className=\"absolute right-3 text-xl top-1/2 transform -translate-y-1/2 text-yellow-400 font-medium\">ETH</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-2 gap-3 mt-6\">\r\n                            <button\r\n                                onClick={() => setShowSellModal(false)}\r\n                                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n                            >\r\n                                CANCEL\r\n                            </button>\r\n                            <button\r\n                                onClick={() => handleSellMiner()}\r\n                                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n                            >\r\n                                {isListingMiner ? 'Listing...' : 'List Miner'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { useChainId, useAccount, useReadContract, useWriteContract } from \"wagmi\";\r\nimport { zeroAddress } from \"viem\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport {\r\n    TEST_NET,\r\n    MINER_ADDRESS_TEST,\r\n    MINER_ADDRESS_MAIN,\r\n} from \"../config\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\n\r\nimport ImgLeaf from '../assets/images/miners/leaf.png'\r\nimport ImgSteel from '../assets/images/miners/steel.png'\r\nimport ImgDiamond from '../assets/images/miners/diamond.png'\r\nimport '../index.css'\r\n\r\nconst ary = Array.from({ length: 10000 }, (_, i) => ({\r\n    isCancelling: false,\r\n    isBuying: false\r\n}));\r\n\r\nexport default function Marketplace() {\r\n    const chainId = useChainId();\r\n    const { isConnected, address } = useAccount();\r\n    const { writeContractAsync } = useWriteContract();\r\n\r\n    const { data: playerMinersOwned, refetch: refetchPlayerMinersOwned } = useReadContract({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"getMinersOnMarketplace\",\r\n        args: [],\r\n        chainId: chainId,\r\n    });\r\n\r\n    const [selfMiners, setSelfMiners] = useState([]);\r\n    const [otherMiners, setOtherMiners] = useState([]);\r\n\r\n    const [btnStatus, setBtnStatus] = useState(ary);\r\n\r\n    useEffect(() => {\r\n        if (address === undefined || address === zeroAddress || !isConnected || playerMinersOwned === undefined || chainId === undefined)\r\n            return;\r\n\r\n        let selfMinersTemp = [];\r\n        let otherMinersTemp = [];\r\n        playerMinersOwned.forEach((item) => {\r\n            if (item.owner.toLowerCase() === address.toLowerCase()) {\r\n                selfMinersTemp.push(item);\r\n            } else {\r\n                otherMinersTemp.push(item);\r\n            }\r\n        });\r\n\r\n        setSelfMiners(selfMinersTemp);\r\n        setOtherMiners(otherMinersTemp);\r\n\r\n    }, [address, playerMinersOwned, isConnected, chainId]);\r\n\r\n    const handleCancelListing = (id, index) => async () => {\r\n        if (address === undefined || address === zeroAddress || !isConnected || chainId === undefined) {\r\n            return;\r\n        }\r\n\r\n        let temp = btnStatus;\r\n        temp[index].isCancelling = true;\r\n        setBtnStatus(temp);\r\n\r\n        await writeContractAsync({\r\n            address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n            abi: MinerAbi,\r\n            functionName: \"cancelListForSale\",\r\n            args: [id],\r\n        })\r\n            .then(() => {\r\n                temp[index].isCancelling = false;\r\n                setBtnStatus(temp);\r\n            })\r\n            .finally(() => {\r\n                temp[index].isCancelling = false;\r\n                setBtnStatus(temp);\r\n            })\r\n            .catch((err) => {\r\n                temp[index].isCancelling = false;\r\n                setBtnStatus(temp);\r\n            });\r\n    }\r\n\r\n    const handleBuying = (id, price, index) => async () => {\r\n        if (address === undefined || address === zeroAddress || !isConnected || chainId === undefined) {\r\n            return;\r\n        }\r\n\r\n        let temp = btnStatus;\r\n        temp[index].isBuying = true;\r\n        setBtnStatus(temp);\r\n\r\n        await writeContractAsync({\r\n            address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n            abi: MinerAbi,\r\n            functionName: \"buyMinerFromMarket\",\r\n            args: [id],\r\n            value: price,\r\n        })\r\n            .then(() => {\r\n                temp[index].isBuying = false;\r\n                setBtnStatus(temp);\r\n            })\r\n            .finally(() => {\r\n                temp[index].isBuying = false;\r\n                setBtnStatus(temp);\r\n            })\r\n            .catch((err) => {\r\n                temp[index].isBuying = false;\r\n                setBtnStatus(temp);\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div div className=\"p-2\">\r\n            <div className=\"pt-4 pb-2 px-2 text-white\">🏪 Your miners that listed for sale.</div>\r\n            <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200 border rounded-lg shadow-sm\">\r\n                    <thead className=\"bg-black-100\">\r\n                        <tr>\r\n                            <th className=\"px-1 y-2 text-left\">Miner</th>\r\n                            <th className=\"px-1 py-2 text-right\">Type</th>\r\n                            <th className=\"px-1 py-2 text-right\">Level</th>\r\n                            <th className=\"px-1 py-2 text-right\">Cost</th>\r\n                            <th className=\"px-1 py-2 text-center\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"divide-y divide-gray-200\">\r\n                        {\r\n                            selfMiners !== undefined && selfMiners.length !== 0 ?\r\n                                selfMiners.map((item, index) => {\r\n                                    const image = Number(item.minerIndex) === 1 ? ImgLeaf : (Number(item.minerIndex) === 2 ? ImgSteel : ImgDiamond);\r\n                                    const minerType = Number(item.minerIndex) === 1 ? \"Leaf\" : (Number(item.minerIndex) === 2 ? \"Steel\" : \"Diamond\");\r\n                                    return (\r\n                                        <tr key={item.id} className=\"hover:bg-blue-500\">\r\n                                            <td className=\"px-1 py-2\">\r\n                                                <img src={image} alt=\"Item\" className=\"h-10 rounded-full\" />\r\n                                            </td>\r\n                                            <td className=\"px-1 py-2 text-right\">{minerType}</td>\r\n                                            <td className=\"px-1 py-2 text-right\">{Number(item.level)}</td>\r\n                                            <td className=\"px-1 py-2 text-right\">{ethers.formatEther(item.sellPrice)}</td>\r\n                                            <td className=\"px-1 py-2 text-center\">\r\n                                                <button className=\"px-1 py-1 text-sm font-medium text-white bg-blue-600 rounded hover:bg-blue-700\" onClick={handleCancelListing(item.id, index)}>\r\n                                                    {btnStatus[index].isCancelling ? \"Cancelling...\" : \"Cancel\"}\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                                :\r\n                                <div className=\"px-1 py-2 text-red-500\">There is no any miner you listed!</div>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div className=\"pt-4 pb-2 px-2 text-white\">🏪 Miners that you can buy.</div>\r\n            <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200 border rounded-lg shadow-sm\">\r\n                    <thead className=\"bg-black-100\">\r\n                        <tr>\r\n                            <th className=\"px-1 py-2 text-left\">Miner</th>\r\n                            <th className=\"px-1 py-2 text-right\">Type</th>\r\n                            <th className=\"px-1 py-2 text-right\">Level</th>\r\n                            <th className=\"px-1 py-2 text-right\">Cost</th>\r\n                            <th className=\"px-1 py-2 text-center\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"divide-y divide-gray-200\">\r\n                        {\r\n                            otherMiners !== undefined && otherMiners.length !== 0 ?\r\n                                otherMiners?.map((item, index) => {\r\n                                    const image = Number(item.minerIndex) === 1 ? ImgLeaf : (Number(item.minerIndex) === 2 ? ImgSteel : ImgDiamond);\r\n                                    const minerType = Number(item.minerIndex) === 1 ? \"Leaf\" : (Number(item.minerIndex) === 2 ? \"Steel\" : \"Diamond\");\r\n                                    return (\r\n                                        <tr key={item.id} className=\"hover:bg-blue-500\">\r\n                                            <td className=\"px-1 py-2\">\r\n                                                <img src={image} alt=\"Item\" className=\"h-10 rounded-full\" />\r\n                                            </td>\r\n                                            <td className=\"px-1 py-2 text-right\">{minerType}</td>\r\n                                            <td className=\"px-1 py-2 text-right\">{Number(item.level)}</td>\r\n                                            <td className=\"px-1 py-2 text-right\">{ethers.formatEther(item.sellPrice)}</td>\r\n                                            <td className=\"px-1 py-2 text-center\">\r\n                                                <button className=\"px-1 py-1 text-sm font-medium text-white bg-blue-600 rounded hover:bg-blue-700\" onClick={handleBuying(item.id, item.sellPrice, index)}>\r\n                                                    {btnStatus[index].isBuying ? \"Buying...\" : \"Buy\"}\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                                :\r\n                                <div className=\"px-1 py-2 text-red-500\">There is no any miner you can buy!</div>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport '../index.css'\r\nimport Referral from \"./Referal\"\r\nimport Space from \"./Space\"\r\nimport Store from \"./Store\"\r\nimport Marketplace from \"./MarketPlace\"\r\n\r\nexport default function SpacePanel() {\r\n    const [activeTab, setActiveTab] = useState(\"Space\")\r\n\r\n    const tabs = [\"Space\", \"Store\", \"Marketplace\", \"Referral\"]\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-center\">\r\n            <div className=\"w-full max-w-5xl bg-slate-900/95 backdrop-blur-sm rounded-xl border-2 border-yellow-500 shadow-2xl shadow-yellow-500/20\">\r\n                {/* Tabs Header */}\r\n                <div className=\"flex bg-[#1B2531] items-center rounded-l-xl rounded-r-xl justify-between lg:px-8 lg:py-10 py-4 pl-4 pr-2\">\r\n                    <div className=\"flex lg:space-x-12 space-x-6 overflow-x-auto hide-scrollbar\">\r\n                        {tabs.map((tab) => (\r\n                            <button\r\n                                key={tab}\r\n                                onClick={() => setActiveTab(tab)}\r\n                                className={`py-2 text-xl font-medium transition-all duration-200 relative ${activeTab === tab ? \"text-yellow-400\" : \"text-slate-300 hover:text-slate-100\"\r\n                                    }`}\r\n                            >\r\n                                {tab}\r\n                                {activeTab === tab && (\r\n                                    <div className=\"absolute -bottom-3 left-0 right-0 h-0.5 bg-yellow-400 rounded-full\"></div>\r\n                                )}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Tab Content */}\r\n                <div className=\"gap-8\">\r\n                    {activeTab === \"Space\" && (\r\n                        <Space />\r\n                    )}\r\n\r\n                    {activeTab === \"Store\" && (\r\n                        <Store />\r\n                    )}\r\n\r\n                    {activeTab === \"Marketplace\" && (\r\n                        <Marketplace />\r\n                    )}\r\n\r\n                    {activeTab === \"Referral\" && (\r\n                        <Referral />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport './RightPanel.scss'\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\n// import { useMediaQuery } from '@uidotdev/usehooks'\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract } from \"wagmi\";\r\nimport { zeroAddress } from \"viem\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport 'react-tabs/style/react-tabs.scss'\r\nimport {\r\n    TEST_NET,\r\n    MINER_ADDRESS_TEST,\r\n    MINER_ADDRESS_MAIN,\r\n    MAIN_NET,\r\n} from \"../config\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { RefreshContext } from '../context/RefreshContext'\r\n\r\nimport Imag1 from \"../assets/images/imag1.png\"\r\n\r\n// Add animation keyframes style\r\nconst nftAnimationStyle = document.createElement('style');\r\nnftAnimationStyle.innerHTML = `\r\n  @keyframes pulse {\r\n    0% { transform: scale(1); opacity: 1; }\r\n    100% { transform: scale(1.05); opacity: 0.9; }\r\n  }\r\n  \r\n  @keyframes float {\r\n    0% { transform: translateY(0px); }\r\n    50% { transform: translateY(-10px); }\r\n    100% { transform: translateY(0px); }\r\n  }\r\n  \r\n  @keyframes glow {\r\n    0% { opacity: 0.5; }\r\n    100% { opacity: 0.8; }\r\n  }\r\n`;\r\ndocument.head.appendChild(nftAnimationStyle);\r\n\r\nconst useRefresh = () => {\r\n    const { fast, slow } = useContext(RefreshContext)\r\n    return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default function BuySpace() {\r\n    // const navigate = useNavigate(); // 👈 call useNavigate inside the component\r\n    const [searchParams,] = useSearchParams();\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    // const isMobile = useMediaQuery(\"only screen and (max-width: 768px)\");\r\n    const { fastRefresh } = useRefresh();\r\n\r\n    const { writeContractAsync } = useWriteContract();\r\n\r\n    const chainId = useChainId();\r\n    const { isConnected, address } = useAccount();\r\n    const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n    /////// Miner //////////////////////////////////\r\n    const { data: initialFacilityPrice, refetch: refetchInitialFacilityPrice } = useReadContract({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"initialFacilityPrice\",\r\n        args: [],\r\n        chainId: chainId,\r\n    });\r\n\r\n    /////////////////////////////////////////\r\n    const [isPurchasingInitialFacility, setIsPurchasingInitialFacility] = useState(false);\r\n    const [referrer, setReferrer] = useState(zeroAddress);\r\n\r\n    useEffect(() => {\r\n        refetchBalance();\r\n        refetchInitialFacilityPrice();\r\n    }, [fastRefresh]);\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get(\"ref\")) {\r\n            const referrerTemp = searchParams.get(\"ref\");\r\n            if (referrerTemp && referrerTemp.toLowerCase() !== address?.toLowerCase())\r\n                setReferrer(referrerTemp);\r\n            else\r\n                setReferrer(zeroAddress);\r\n        }\r\n    }, [searchParams, address])\r\n\r\n    const handlePurchaseInitialFacility = async () => {\r\n        setIsPurchasingInitialFacility(true);\r\n        if (!isConnected || !address) {\r\n            toast.error(\"Please connect your wallet first.\");\r\n            setIsPurchasingInitialFacility(false);\r\n            return;\r\n        }\r\n        if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n            toast.error(\"Please switch to the correct network.\");\r\n            setIsPurchasingInitialFacility(false);\r\n            return;\r\n        }\r\n        if (!balance || parseFloat(ethers.formatEther(balance.value)) < parseFloat(ethers.formatEther(initialFacilityPrice))) {\r\n            toast.error(\"Insufficient balance to purchase the initial facility.\");\r\n            setIsPurchasingInitialFacility(false);\r\n            return;\r\n        }\r\n        await writeContractAsync({\r\n            address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n            abi: MinerAbi,\r\n            functionName: \"purchaseInitialFacility\",\r\n            args: [referrer],\r\n            value: initialFacilityPrice\r\n        })\r\n            .then(() => {\r\n                setTimeout(async () => {\r\n                    setIsPurchasingInitialFacility(false);\r\n                    setShowModal(false);\r\n                }, 3000); // Keep animation running for a bit after Claim completes\r\n            })\r\n            .catch((err) => {\r\n                setIsPurchasingInitialFacility(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-[#0000009e] rounded-lg p-6 flex flex-col items-center justify-center space-y-6 text-center\">\r\n            <h2 className=\"text-white font-semibold text-3xl\">\r\n                PLEASE ACQUIRE A <br /> MINING SPACE\r\n            </h2>\r\n            <div className=\" w-[282px] h-[252px]\">\r\n                <img src={Imag1} alt=\"Penguins mining\" />\r\n            </div>\r\n            <button\r\n                onClick={() => setShowModal(true)}\r\n                className=\"bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 font-bold w-[75%] py-2 text-[#78350F] text-[20px] px-6 rounded-md\"\r\n            >\r\n                BUY SPACE\r\n            </button>\r\n\r\n            {/* Modal */}\r\n            {showModal && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n                        <h2 className=\"text-[25px] font-bold mb-2 text-white\">GET YOUR FIRST MINING SPACE</h2>\r\n                        <p className=\"text-sm text-gray-300 mb-2\">Start mining HASH by purchasing your first space!</p>\r\n                        <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n                        <p className=\"text-left text-[#F9A82C] font-medium mb-2\">SET UP YOUR IGLOO</p>\r\n                        <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n                            <div className=\"flex justify-between mb-1 font-medium\">\r\n                                <span>- Space Capacity:</span>\r\n                                <span className=\"text-yellow-400 font-medium\">3 Miners</span>\r\n                            </div>\r\n                            <div className=\"flex justify-between mb-1 font-medium\">\r\n                                <span>- Price</span>\r\n                                <span className=\"text-yellow-400 font-medium\">{initialFacilityPrice ? ethers.formatEther(initialFacilityPrice) : 0} ETH</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex justify-between mt-6 gap-4\">\r\n                            <button\r\n                                onClick={() => setShowModal(false)}\r\n                                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n                            >\r\n                                CANCEL\r\n                            </button>\r\n                            <button\r\n                                onClick={handlePurchaseInitialFacility}\r\n                                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n                            >\r\n                                {isPurchasingInitialFacility ? 'Buying...' : 'Buy Space'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useContext } from \"react\";\r\nimport './RightPanel.scss'\r\n\r\nimport { useMediaQuery } from '@uidotdev/usehooks'\r\nimport { useChainId, useAccount, useReadContract } from \"wagmi\";\r\nimport { zeroAddress } from \"viem\";\r\n\r\nimport 'react-tabs/style/react-tabs.scss'\r\nimport {\r\n    TEST_NET,\r\n    MINER_ADDRESS_TEST,\r\n    MINER_ADDRESS_MAIN,\r\n} from \"../config\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { RefreshContext } from '../context/RefreshContext'\r\n\r\nimport SpacePanel from \"./SpacePanel\";\r\nimport BuySpace from \"./BuySpace\";\r\n\r\n// Add animation keyframes style\r\nconst nftAnimationStyle = document.createElement('style');\r\nnftAnimationStyle.innerHTML = `\r\n  @keyframes pulse {\r\n    0% { transform: scale(1); opacity: 1; }\r\n    100% { transform: scale(1.05); opacity: 0.9; }\r\n  }\r\n  \r\n  @keyframes float {\r\n    0% { transform: translateY(0px); }\r\n    50% { transform: translateY(-10px); }\r\n    100% { transform: translateY(0px); }\r\n  }\r\n  \r\n  @keyframes glow {\r\n    0% { opacity: 0.5; }\r\n    100% { opacity: 0.8; }\r\n  }\r\n`;\r\ndocument.head.appendChild(nftAnimationStyle);\r\n\r\nconst useRefresh = () => {\r\n    const { fast, slow } = useContext(RefreshContext)\r\n    return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default function RightPanel() {\r\n    const isMobile = useMediaQuery(\"only screen and (max-width: 768px)\");\r\n    const { fastRefresh } = useRefresh();\r\n\r\n    const chainId = useChainId();\r\n    const { isConnected, address } = useAccount();\r\n\r\n    /////// Miner //////////////////////////////////\r\n    const { data: initializedStarterFacility, refetch: refetchInitializedStarterFacility } = useReadContract({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"initializedStarterFacility\",\r\n        args: [isConnected ? address : zeroAddress],\r\n        chainId: chainId,\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetchInitializedStarterFacility();\r\n    }, [fastRefresh]);\r\n\r\n    return (\r\n        <>\r\n            {!initializedStarterFacility ? (\r\n                <BuySpace />\r\n            ) : (\r\n                <div className=\"\">\r\n                    <SpacePanel />\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useContext, useState } from \"react\";\r\nimport Layout from 'layouts'\r\nimport './Dashboard.scss'\r\nimport toast from \"react-hot-toast\";\r\n\r\n// import { useMediaQuery } from '@uidotdev/usehooks'\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract } from \"wagmi\";\r\nimport { useConnectModal } from \"@rainbow-me/rainbowkit\";\r\nimport { zeroAddress } from \"viem\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport 'react-tabs/style/react-tabs.scss'\r\nimport {\r\n  TEST_NET,\r\n  HASH_ADDRESS_TEST,\r\n  HASH_ADDRESS_MAIN,\r\n  MINER_ADDRESS_TEST,\r\n  MINER_ADDRESS_MAIN,\r\n} from \"../config\";\r\nimport HashAbi from \"../config/abis/HASH_ABI.json\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { RefreshContext } from '../context/RefreshContext'\r\n\r\nimport RightPanel from \"components/RigthPanel\";\r\n\r\n// Add animation keyframes style\r\nconst nftAnimationStyle = document.createElement('style');\r\nnftAnimationStyle.innerHTML = `\r\n  @keyframes pulse {\r\n    0% { transform: scale(1); opacity: 1; }\r\n    100% { transform: scale(1.05); opacity: 0.9; }\r\n  }\r\n  \r\n  @keyframes float {\r\n    0% { transform: translateY(0px); }\r\n    50% { transform: translateY(-10px); }\r\n    100% { transform: translateY(0px); }\r\n  }\r\n  \r\n  @keyframes glow {\r\n    0% { opacity: 0.5; }\r\n    100% { opacity: 0.8; }\r\n  }\r\n`;\r\ndocument.head.appendChild(nftAnimationStyle);\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nfunction formatNumber(num) {\r\n  if (num >= 1e9) return (num / 1e9).toFixed(1) + 'B';\r\n  if (num >= 1e6) return (num / 1e6).toFixed(1) + 'M';\r\n  if (num >= 1e3) return (num / 1e3).toFixed(1) + 'K';\r\n  return num.toString();\r\n}\r\n\r\nconst dailyBlocks = 86400 / 1.1\r\n\r\nexport default function BettingPage() {\r\n  // const navigate = useNavigate(); // 👈 call useNavigate inside the component\r\n\r\n  // const isMobile = useMediaQuery(\"only screen and (max-width: 768px)\");\r\n  const { fastRefresh } = useRefresh();\r\n\r\n  const { openConnectModal } = useConnectModal();\r\n  const { writeContractAsync } = useWriteContract();\r\n\r\n  const chainId = useChainId();\r\n  const { isConnected, address } = useAccount();\r\n  const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n  ////////HASH//////////////////////////////////////\r\n  const { data: tokenBalance, refetch: refetchTokenBalance } = useReadContract({\r\n    address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"balanceOf\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  /////// Miner //////////////////////////////////\r\n  const { data: hashRate, refetch: refetchPlayerHashrate } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"playerHashrate\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: ownerToFacility, refetch: refetchOwnerToFacility } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"ownerToFacility\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: blocksUntilNextHalving, refetch: refetchBlocksUntilNextHalving } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"blocksUntilNextHalving\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: pendingRewards, refetch: refetchPendingRewards } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"pendingRewards\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: playerHashcoinPerBlock, refetch: refetchPlayerHashcoinPerBlock } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"playerHashcoinPerBlock\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const [isClaiming, setIsClaiming] = useState(false);\r\n\r\n  useEffect(() => {\r\n    refetchBalance();\r\n    refetchTokenBalance();\r\n    refetchPlayerHashrate();\r\n    refetchOwnerToFacility();\r\n    refetchBlocksUntilNextHalving();\r\n    refetchPendingRewards();\r\n    refetchPlayerHashcoinPerBlock();\r\n  }, [fastRefresh, isConnected, address, chainId]);\r\n\r\n  const handleClaim = async () => {\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      return;\r\n    }\r\n    if (!pendingRewards || parseFloat(ethers.formatEther(pendingRewards)) <= 0) {\r\n      toast.error(\"No rewards to claim.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsClaiming(true);\r\n\r\n      await writeContractAsync({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"claimRewards\",\r\n        args: [],\r\n      })\r\n        .then(() => {\r\n          setIsClaiming(false);\r\n          toast.success(\"Rewards claimed successfully!\");\r\n        })\r\n        .finally(() => {\r\n          setIsClaiming(false);\r\n        })\r\n        .catch((err) => {\r\n          setIsClaiming(false);\r\n        });\r\n    } catch (error) {\r\n      console.error(\"Error claiming rewards:\", error);\r\n      toast.error(\"Failed to claim rewards. Please try again.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {\r\n        isConnected ?\r\n          <>\r\n            <div className=\"lg:grid px-3 lg:px-0 grid-cols-1 mx-auto relative lg:top-[50px] justify-center md:grid-cols-2 gap-6 max-w-7xl w-full\">\r\n              {/* Left Panel */}\r\n              <div className=\"bg-[#0000009e] w-[100%] flex items-center justify-center  rounded-lg p-6 space-y-6\">\r\n                <div className=\"w-[100%]\">\r\n                  {/* Resources */}\r\n                  <div>\r\n                    <h2 className=\"text-[#F9A82C] font-semibold text-[18px]  lg:text-[22px] mb-3\">Resources</h2>\r\n                    <div className=\"grid grid-cols-2 gap-3 text-black font-semibold\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={`${balance !== undefined ? parseFloat(ethers.formatEther(balance.value)).toFixed(3) : 0} ETH`}\r\n                        readOnly\r\n                        className=\"bg-[#282A2A] text-center border-2 border-[#F8A82C] rounded px-3 py-1 text-white\"\r\n                      />\r\n\r\n                      <input\r\n                        type=\"text\"\r\n                        value={`${ownerToFacility ? Number(ownerToFacility[1] - ownerToFacility[2]) : 0} SPACES LEFT`}\r\n                        readOnly\r\n                        className=\"bg-[#282A2A] text-center border-2 border-[#F8A82C] rounded px-3 py-1 text-white\"\r\n                      />\r\n                      <input\r\n                        type=\"text\"\r\n                        value={`${tokenBalance ? parseFloat(ethers.formatEther(tokenBalance)).toFixed(2) : 0} HASH`}\r\n                        readOnly\r\n                        className=\"bg-[#282A2A] text-center  border-2 border-[#F8A82C] rounded px-3 py-1 text-white\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Statistics */}\r\n                  <div>\r\n                    <h2 className=\"text-[#F9A82C] font-semibold text-[20px]  lg:text-[22px] mb-3\">Statistics</h2>\r\n                    <ul className=\"space-y-1 pl-0\">\r\n                      <li className=\"flex text-[18px]  font-semibold border-b border-[#f8a62cc7] pb-2 justify-between\">\r\n                        <span>You are mining</span>\r\n                        <span className=\"text-[#FFD100]\">{`${playerHashcoinPerBlock ? formatNumber(parseFloat(ethers.formatEther(playerHashcoinPerBlock)) * dailyBlocks) : `--`} HASH / DAY`}</span>\r\n                      </li>\r\n                      <li className=\"flex text-[18px]  font-semibold border-b border-[#f8a62cc7] pb-2 justify-between\">\r\n                        <span>Your hash rate is</span>\r\n                        <span lassName=\"text-[#FFD100]\">{hashRate ? Number(hashRate) : `--`} GH / S</span>\r\n                      </li>\r\n                      <li className=\"flex text-[18px]  font-semibold border-b border-[#f8a62cc7] pb-2 justify-between\">\r\n                        <span>Blocks until next halvening</span>\r\n                        <span lassName=\"text-[#FFD100]\">{`${blocksUntilNextHalving ? blocksUntilNextHalving : `--`} BLOCKS`}</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n\r\n                  {/* Claim Button */}\r\n                  <div className=\"bg-gray-800 rounded-lg p-4 text-center\">\r\n                    <p className=\"text-white font-semibold lg:text-2xl text-lg mb-3\">\r\n                      You Have Mined : <span className=\"text-[#F8A82C]\">{`${pendingRewards ? parseFloat(ethers.formatEther(pendingRewards)).toFixed(2) : `0`} $HASH`}</span>\r\n                    </p>\r\n                    <button className=\"bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 font-bold w-full py-1 text-[#78350F] text-[16px] px-6 rounded-md\" onClick={handleClaim}>\r\n                      { isClaiming ? \"Claiming...\" : \"Claim Now\" }\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <RightPanel />\r\n            </div>\r\n            <div className=\"relative mt-[92px] mb-[40px]\">\r\n              <div className=\"flex justify-center flex-wrap gap-3\">\r\n                {/* Twitter */}\r\n                <a\r\n                  href=\"https://twitter.com/hashlordz\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"flex  items-center gap-3 no-underline bg-[#0000009e] w-[200px] hover:bg-[#2a2c2f] rounded-lg px-4 py-2 transition duration-200\"\r\n                >\r\n                  <svg width=\"33\" height=\"33\" className='block' viewBox=\"0 0 33 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M32.492 16.2449C32.492 7.27199 25.218 -0.00201416 16.245 -0.00201416C7.27208 -0.00201416 -0.00195312 7.27199 -0.00195312 16.2449C-0.00195312 25.2179 7.27208 32.4919 16.245 32.4919C25.218 32.4919 32.492 25.2179 32.492 16.2449Z\" fill=\"#0EA5E9\" fill-opacity=\"0.3\" />\r\n                    <path d=\"M23.059 11.777C22.572 12.021 22.084 12.102 21.516 12.183C22.084 11.858 22.49 11.371 22.653 10.721C22.166 11.046 21.597 11.208 20.947 11.371C20.46 10.884 19.728 10.559 18.997 10.559C17.291 10.559 15.992 12.183 16.398 13.808C14.205 13.727 12.255 12.671 10.874 11.046C10.143 12.265 10.549 13.808 11.686 14.62C11.28 14.62 10.874 14.458 10.468 14.295C10.468 15.514 11.361 16.651 12.58 16.976C12.174 17.057 11.767 17.139 11.361 17.057C11.686 18.113 12.661 18.926 13.88 18.926C12.905 19.657 11.443 20.063 10.062 19.901C11.28 20.632 12.661 21.119 14.123 21.119C19.079 21.119 21.841 16.976 21.678 13.158C22.247 12.833 22.734 12.346 23.059 11.777Z\" fill=\"#73D5FF\" />\r\n                  </svg>\r\n                  <div className=\"text-white\">\r\n                    <p className=\"text-sm mb-0 font-semibold\">Twitter</p>\r\n                    <p className=\"text-xs mb-0 text-gray-400\">@hashlordz</p>\r\n                  </div>\r\n                </a>\r\n\r\n                {/* Discord */}\r\n                <a\r\n                  href=\"https://discord.gg/hashlordz\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"flex  items-center gap-3 no-underline bg-[#0000009e] w-[200px] hover:bg-[#2a2c2f] rounded-lg px-4 py-3 transition duration-200\"\r\n                >\r\n                  <svg width=\"33\" height=\"33\" viewBox=\"0 0 33 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M32.492 16.2449C32.492 7.27199 25.218 -0.00201416 16.245 -0.00201416C7.27208 -0.00201416 -0.00195312 7.27199 -0.00195312 16.2449C-0.00195312 25.2179 7.27208 32.4919 16.245 32.4919C25.218 32.4919 32.492 25.2179 32.492 16.2449Z\" fill=\"#0EA5E9\" fill-opacity=\"0.3\" />\r\n                    <path d=\"M23.059 11.777C22.572 12.021 22.084 12.102 21.516 12.183C22.084 11.858 22.49 11.371 22.653 10.721C22.166 11.046 21.597 11.208 20.947 11.371C20.46 10.884 19.728 10.559 18.997 10.559C17.291 10.559 15.992 12.183 16.398 13.808C14.205 13.727 12.255 12.671 10.874 11.046C10.143 12.265 10.549 13.808 11.686 14.62C11.28 14.62 10.874 14.458 10.468 14.295C10.468 15.514 11.361 16.651 12.58 16.976C12.174 17.057 11.767 17.139 11.361 17.057C11.686 18.113 12.661 18.926 13.88 18.926C12.905 19.657 11.443 20.063 10.062 19.901C11.28 20.632 12.661 21.119 14.123 21.119C19.079 21.119 21.841 16.976 21.678 13.158C22.247 12.833 22.734 12.346 23.059 11.777Z\" fill=\"#73D5FF\" />\r\n                  </svg>\r\n                  <div className=\"text-white\">\r\n                    <p className=\"text-sm mb-0 font-semibold\">Discord</p>\r\n                    <p className=\"text-xs mb-0 text-gray-400\">discord.gg/hashlordz</p>\r\n                  </div>\r\n                </a>\r\n\r\n                {/* Telegram */}\r\n                <a\r\n                  href=\"https://t.me/hashlordz\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"flex  items-center gap-3 no-underline bg-[#0000009e] w-[200px] hover:bg-[#2a2c2f] rounded-lg px-4 py-2 transition duration-200\"\r\n                >\r\n                  <svg width=\"34\" height=\"33\" viewBox=\"0 0 34 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M33.1689 16.2449C33.1689 7.27199 25.8949 -0.00201416 16.9219 -0.00201416C7.94899 -0.00201416 0.674988 7.27199 0.674988 16.2449C0.674988 25.2179 7.94899 32.4919 16.9219 32.4919C25.8949 32.4919 33.1689 25.2179 33.1689 16.2449Z\" fill=\"#3B82F6\" fill-opacity=\"0.3\" />\r\n                    <path d=\"M22.187 15.839V19.901C22.186 20.439 21.972 20.955 21.591 21.335C21.211 21.716 20.695 21.93 20.157 21.932H17.237C17.129 21.932 17.026 21.889 16.95 21.813C16.874 21.736 16.831 21.633 16.831 21.525C16.831 21.418 16.874 21.314 16.95 21.238C17.026 21.162 17.129 21.119 17.237 21.119H20.157C20.479 21.118 20.789 20.989 21.017 20.761C21.245 20.533 21.374 20.223 21.375 19.901V19.83C21.245 19.877 21.107 19.901 20.969 19.901H20.157C19.833 19.901 19.523 19.772 19.295 19.544C19.066 19.315 18.938 19.005 18.938 18.682V16.651C18.938 16.328 19.066 16.018 19.295 15.79C19.523 15.561 19.833 15.433 20.157 15.433H21.355C21.253 14.317 20.736 13.28 19.905 12.528C19.075 11.775 17.992 11.363 16.872 11.371H16.867C15.745 11.36 14.661 11.772 13.831 12.525C13 13.278 12.483 14.316 12.383 15.433H13.582C13.904 15.434 14.214 15.563 14.442 15.791C14.67 16.019 14.799 16.329 14.8 16.651V18.682C14.799 19.005 14.67 19.314 14.442 19.542C14.214 19.771 13.904 19.899 13.582 19.901H12.769C12.447 19.899 12.137 19.771 11.909 19.542C11.681 19.314 11.552 19.005 11.551 18.682V15.839C11.551 15.143 11.689 14.453 11.956 13.81C12.224 13.167 12.616 12.583 13.11 12.093C13.604 11.602 14.19 11.214 14.835 10.95C15.48 10.687 16.17 10.554 16.867 10.559H16.907C18.307 10.56 19.649 11.117 20.639 12.107C21.629 13.097 22.186 14.439 22.187 15.839Z\" fill=\"#3B82F6\" />\r\n                  </svg>\r\n                  <div className=\"text-white\">\r\n                    <p className=\"text-sm mb-0 font-semibold\">Telegram</p>\r\n                    <p className=\"text-xs mb-0 text-gray-400\">t.me/hashlordz</p>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </>\r\n          :\r\n          <>\r\n            <div className=\"flex items-center justify-center h-screen\">\r\n              <div className=\"bg-[#0000009e] rounded-lg p-6 text-center\">\r\n                <h2 className=\"text-white font-semibold text-3xl mb-4\">Please Connect Your Wallet</h2>\r\n                <p className=\"text-gray-400 mb-6 text-[20px]\">You need to connect your wallet to start mining.</p>\r\n                <button\r\n                  onClick={openConnectModal}\r\n                  className=\"bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 font-bold w-full py-2 text-[#78350F] text-[20px] px-6 rounded-md\"\r\n                >\r\n                  Connect Wallet\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n      }\r\n\r\n    </Layout>\r\n  )\r\n}\r\n"],"names":["MAIN_NET","TEST_NET","HASH_ADDRESS_TEST","HASH_ADDRESS_MAIN","MINER_ADDRESS_TEST","MINER_ADDRESS_MAIN","UNIT256_MAX","Referral","chainId","useChainId","isConnected","address","useAccount","referralLink","setReferralLink","useState","data","referredUsers","refetch","refetchReferredUsers","useReadContract","abi","MinerAbi","functionName","args","zeroAddress","referralBonusPaid","refetchReferralBonusPaid","console","log","useEffect","window","location","origin","_jsx","className","children","_jsxs","length","parseFloat","ethers","toFixed","onClick","handleCopy","navigator","clipboard","writeText","toast","success","Space","_activeItem$id$toStri","_activeItem$level$toS","_activeItem$hashrate$","_activeItem$id$toStri2","_activeItem$level$toS2","activeItem","setActiveItem","selectedItem","setSelectedItem","selectedAvailableItem","setSelectedAvailableItem","isUpgradingSpace","setIsUpgradingSpace","isUpgradingMiner","setIsUpgradingMiner","isStopingMiner","setIsStopingMiner","isStartingMiner","setIsStartingMiner","showModal","setShowModal","showStartMiningModal","setShowStartMiningModal","txResult","writeContractAsync","useWriteContract","openConnectModal","useConnectModal","disconnect","useDisconnect","balance","refetchBalance","useBalance","tokenBalance","refetchTokenBalance","HashAbi","approvedTokenAmount","refetchApprovedTokenAmount","playerMinersPaginated","refetchPlayerMinersPaginated","ownerToFacility","refetchOwnerToFacility","getAmountFor2","refetchGetAmountFor2","getAmountFor3","refetchGetAmountFor3","leafCost","refetchLeafCost","steelCost","refetchSteelCost","diamondCost","refetchDiamondCost","timeUntilNextFacilityUpgrade","refetchTimeUntilNextFacilityUpgrade","playerMiners","filter","item","Number","x","availableMiners","id","toString","level","hashrate","src","minerIndex","ImgHumar1","ImgHumar2","ImgHumar3","alt","_Fragment","map","index","event","find","i","parseInt","error","stopPropagation","async","value","minerId","then","setTimeout","catch","err","handleStopMining","tokenAmount","handleUpgradeLevel","_availableMiners$sele","_availableMiners$sele2","price","setPrice","isPurchasingMiner","setIsPurchasingMiner","isListingMiner","setIsListingMiner","showSellModal","setShowSellModal","handleBuyMiner","type","placeholder","onChange","e","target","isNaN","handleSellMiner","ary","Array","from","_","isCancelling","isBuying","Marketplace","playerMinersOwned","refetchPlayerMinersOwned","selfMiners","setSelfMiners","otherMiners","setOtherMiners","btnStatus","setBtnStatus","undefined","selfMinersTemp","otherMinersTemp","forEach","owner","toLowerCase","push","handleCancelListing","temp","finally","handleBuying","div","image","ImgLeaf","ImgSteel","ImgDiamond","minerType","sellPrice","SpacePanel","activeTab","setActiveTab","tab","Store","nftAnimationStyle","document","createElement","innerHTML","head","appendChild","useRefresh","fast","slow","useContext","RefreshContext","fastRefresh","slowRefresh","BuySpace","searchParams","useSearchParams","initialFacilityPrice","refetchInitialFacilityPrice","isPurchasingInitialFacility","setIsPurchasingInitialFacility","referrer","setReferrer","get","referrerTemp","Imag1","RightPanel","useMediaQuery","initializedStarterFacility","refetchInitializedStarterFacility","dailyBlocks","BettingPage","hashRate","refetchPlayerHashrate","blocksUntilNextHalving","refetchBlocksUntilNextHalving","pendingRewards","refetchPendingRewards","playerHashcoinPerBlock","refetchPlayerHashcoinPerBlock","isClaiming","setIsClaiming","Layout","readOnly","num","lassName","href","rel","width","height","viewBox","fill","xmlns","d"],"sourceRoot":""}