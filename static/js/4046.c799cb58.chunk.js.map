{"version":3,"file":"static/js/4046.c799cb58.chunk.js","mappings":"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","sources":["config/index.js","pages/Dashboard.jsx"],"sourcesContent":["export const MAIN_NET = 2741;\r\nexport const TEST_NET = 11124;\r\n\r\nexport const GG_ADDRESS_TEST = \"0x766DC248E729818cccdd9984D95146b251f527be\";\r\nexport const GG_ADDRESS_MAIN = \"0x558Fc396aa4d39A647DE44F9850890aA2A86a2c8\";\r\n\r\nexport const OWNER_HASHLORDZ_ADDRESS_TEST = \"0xA8D45A282f5234fDCAC87cAfcdF580D5B245eaEB\";\r\nexport const OWNER_HASHLORDZ_ADDRESS_MAIN = \"0x23084fC81f1d2906D629d917FA30776E0a382d26\";\r\n\r\nexport const PRESALE_ADDRESS_TEST = \"0xBf0079991B5D2dca44618326A74Cc7E5Ecd60e32\";\r\nexport const PRESALE_ADDRESS_MAIN = \"0x7CdE5dC1BdD3462912D4B2c4c91E06b44Abd29ED\";\r\n\r\nexport const HASH_ADDRESS_TEST = \"0x7DF0d1623b3Ac433Ee5121ccb6753D9E61818D3a\";\r\nexport const HASH_ADDRESS_MAIN = \"\";\r\n\r\nexport const MINER_ADDRESS_TEST = \"0x7c3996Ba713dE39Cf581F0f9Bd9C27Fa3dceBD74\";\r\nexport const MINER_ADDRESS_MAIN = \"\";","import { useState, useEffect, useRef, useContext } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport Layout from 'layouts'\r\nimport './Dashboard.scss'\r\nimport { Container } from 'react-bootstrap'\r\nimport { Navigate } from \"react-router-dom\";\r\n// Mouse image import removed\r\nimport coinImage from '../assets/burnimages/Icon_256_Coin_05.png'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { useMediaQuery } from '@uidotdev/usehooks'\r\nimport { useConnectModal } from \"@rainbow-me/rainbowkit\";\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract, useDisconnect } from \"wagmi\";\r\nimport { zeroAddress } from \"viem\";\r\nimport { BaseWallet, ethers } from \"ethers\";\r\nimport keccak256 from \"keccak256\";\r\nimport { MerkleTree } from \"merkletreejs\";\r\nimport BettingTimer from \"components/BettingTimer\";\r\n\r\nimport 'react-tabs/style/react-tabs.scss'\r\nimport {\r\n  TEST_NET,\r\n  HASH_ADDRESS_TEST,\r\n  HASH_ADDRESS_MAIN,\r\n  MINER_ADDRESS_TEST,\r\n  MINER_ADDRESS_MAIN,\r\n  PRESALE_ADDRESS_TEST,\r\n  PRESALE_ADDRESS_MAIN,\r\n} from \"../config\";\r\nimport HashAbi from \"../config/abis/HASH_ABI.json\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport PresaleAbi from \"../config/abis/PRESALE_ABI.json\";\r\nimport { RefreshContext } from '../context/RefreshContext'\r\n\r\nimport Imag1 from \"../../src/assets/images/imag1.png\"\r\nimport Inventory from \"./Inventory\";\r\n\r\n// Add animation keyframes style\r\nconst nftAnimationStyle = document.createElement('style');\r\nnftAnimationStyle.innerHTML = `\r\n  @keyframes pulse {\r\n    0% { transform: scale(1); opacity: 1; }\r\n    100% { transform: scale(1.05); opacity: 0.9; }\r\n  }\r\n  \r\n  @keyframes float {\r\n    0% { transform: translateY(0px); }\r\n    50% { transform: translateY(-10px); }\r\n    100% { transform: translateY(0px); }\r\n  }\r\n  \r\n  @keyframes glow {\r\n    0% { opacity: 0.5; }\r\n    100% { opacity: 0.8; }\r\n  }\r\n`;\r\ndocument.head.appendChild(nftAnimationStyle);\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nfunction formatNumber(num) {\r\n  if (num >= 1e9) return (num / 1e9).toFixed(1) + 'B';\r\n  if (num >= 1e6) return (num / 1e6).toFixed(1) + 'M';\r\n  if (num >= 1e3) return (num / 1e3).toFixed(1) + 'K';\r\n  return num.toString();\r\n}\r\n\r\nexport default function BettingPage() {\r\n  const navigate = useNavigate(); // 👈 call useNavigate inside the component\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const isMobile = useMediaQuery(\"only screen and (max-width: 768px)\");\r\n  const { fastRefresh } = useRefresh();\r\n\r\n  const { data: txResult, writeContractAsync } = useWriteContract();\r\n\r\n  const { openConnectModal } = useConnectModal();\r\n  const { disconnect } = useDisconnect();\r\n\r\n  const chainId = useChainId();\r\n  const { isConnected, address } = useAccount();\r\n  const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n  // Animation reference\r\n  const animationRef = useRef(null);\r\n\r\n  // Button animation state\r\n  const [isButtonPressed, setIsButtonPressed] = useState(false);\r\n\r\n  ////////HASH//////////////////////////////////////\r\n  const { data: tokenBalance, refetch: refetchTokenBalance } = useReadContract({\r\n    address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"balanceOf\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: poolBalance, refetch: refetchPoolBalance } = useReadContract({\r\n    address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"balanceOf\",\r\n    args: [isConnected ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN],\r\n    chainId: chainId,\r\n  });\r\n\r\n  /////// Miner //////////////////////////////////\r\n  const { data: initializedStarterFacility, refetch: refetchInitializedStarterFacility } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"initializedStarterFacility\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: initialFacilityPrice, refetch: refetchInitialFacilityPrice } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"initialFacilityPrice\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  console.log(\"eagle initializedStarterFacility = \", initialFacilityPrice)\r\n\r\n  const { data: hashRate, refetch: refetchPlayerHashrate } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"playerHashrate\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: tokenPrice, refetch: refetchTokenPrice } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"getTokenPrice\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: nextPrice, refetch: refetchNextPrice } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"getNextPrice\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: minContribution, refetch: refetchMinContribution } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"minContribution\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: maxContribution, refetch: refetchMaxContribution } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"maxContribution\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: contributedSonicAmount, refetch: refetchContributedSonicAmount } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"contributedSonicAmounts\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: contributionPhase, refetch: refetchContributionPhase } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"getContributionPhase\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: purchasedTokenAmounts, refetch: refetchPurchasedTokenAmounts } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"purchasedTokenAmounts\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: timePhase1, refetch: refetchTimePhase1 } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"timePhase1\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: timePhase2, refetch: refetchTimePhase2 } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"timePhase2\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: timeEnd, refetch: refetchTimeEnd } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"timeEnd\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: totalPurchasedTokenAmount, refetch: refetchTotalPurchasedTokenAmount } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"totalPurchasedTokenAmount\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: totalRaisedSonicAmount, refetch: refetchTotalRaisedSonicAmount } = useReadContract({\r\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\r\n    abi: PresaleAbi,\r\n    functionName: \"totalRaisedSonicAmount\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  /////////////////////////////////////////\r\n  const [isPurchasingInitialFacility, setIsPurchasingInitialFacility] = useState(false);\r\n  const [openModalDeposit, setOpenModalDeposit] = useState(false);\r\n  const [openModalClaim, setOpenModalClaim] = useState(false);\r\n\r\n  const [depositAmount, setDepositAmount] = useState(0);\r\n\r\n  const [minEthAmount, setMinEthAmount] = useState(0);\r\n  const [maxEthAmount, setMaxEthAmount] = useState(0);\r\n  const [currentContribution, setCurrentContribution] = useState(0);\r\n  const [userPercent, setUserPercent] = useState(0);\r\n\r\n  const [isWhitelistedAirdrop, setIsWhitelistedAirdrop] = useState(false);\r\n\r\n  const [isAvailalbeDeposit, setIsAvailableDeposit] = useState(true);\r\n  const [isDepositing, setIsDepositing] = useState(false);\r\n\r\n  const [isAvailalbeClaim, setIsAvailableClaim] = useState(false);\r\n  const [isClaiming, setIsClaiming] = useState(false);\r\n\r\n  const [timeToEnd, setTimeToEnd] = useState(0);\r\n\r\n  const [currentPercent, setCurrentPercent] = useState(0);\r\n  const [remainedAmount, setRemainedAmount] = useState();\r\n\r\n  useEffect(() => {\r\n\r\n  }, [fastRefresh]);\r\n\r\n  useEffect(() => {\r\n    if (totalPurchasedTokenAmount === undefined) return;\r\n\r\n    const temp = Number(ethers.formatEther(totalPurchasedTokenAmount));\r\n    setCurrentPercent((temp / 1500000000 * 100).toFixed(2));\r\n\r\n    setRemainedAmount(formatNumber(1500000000 - Number(ethers.formatEther(totalPurchasedTokenAmount))))\r\n  }, [totalPurchasedTokenAmount])\r\n\r\n  useEffect(() => {\r\n    if (currentContribution === undefined || minEthAmount === undefined || maxEthAmount === undefined) return;\r\n\r\n    if (currentContribution < minEthAmount)\r\n      setUserPercent(0)\r\n    else\r\n      setUserPercent(Math.min(100, ((currentContribution - minEthAmount) / (maxEthAmount - minEthAmount)) * 100))\r\n  }, [currentContribution, minEthAmount, maxEthAmount])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (animationRef.current) {\r\n        clearTimeout(animationRef.current);\r\n      }\r\n    };\r\n  }, [isClaiming]);\r\n\r\n  const handlePurchaseInitialFacility = async () => {\r\n    setIsPurchasingInitialFacility(true);\r\n    await writeContractAsync({\r\n      address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"purchaseInitialFacility\",\r\n      args: [zeroAddress],\r\n      value: initialFacilityPrice\r\n    })\r\n      .then(() => {\r\n        setTimeout(() => {\r\n          setIsPurchasingInitialFacility(false);\r\n          setShowModal(false);\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsPurchasingInitialFacility(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"lg:grid px-3 lg:px-0 grid-cols-1 mx-auto relative lg:top-[50px] justify-center md:grid-cols-2 gap-6 max-w-7xl w-full\">\r\n        {/* Left Panel */}\r\n        <div className=\"bg-[#0000009e] w-[100%] flex items-center justify-center  rounded-lg p-6 space-y-6\">\r\n          <div className=\"w-[100%]\">\r\n            {/* Resources */}\r\n            <div>\r\n              <h2 className=\"text-[#F9A82C] font-semibold text-[18px]  lg:text-[22px] mb-3\">Resources</h2>\r\n              <div className=\"grid grid-cols-2 gap-3 text-black font-semibold\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={`${balance !== undefined ? parseFloat(ethers.formatEther(balance.value)).toFixed(3) : 0} ETH`}\r\n                  readOnly\r\n                  className=\"bg-[#282A2A] text-center border-2 border-[#F8A82C] rounded px-3 py-1 text-white\"\r\n                />\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  value={`${0} SPACES LEFT`}\r\n                  readOnly\r\n                  className=\"bg-[#282A2A] text-center border-2 border-[#F8A82C] rounded px-3 py-1 text-white\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  value={`${tokenBalance ? parseFloat(ethers.formatEther(tokenBalance)).toFixed(2) : 0} HASH`}\r\n                  readOnly\r\n                  className=\"bg-[#282A2A] text-center  border-2 border-[#F8A82C] rounded px-3 py-1 text-white\"\r\n                />\r\n                {/* <input\r\n                  type=\"text\"\r\n                  value=\"0 GIGAWATTS AVAILABLE\"\r\n                  readOnly\r\n                  className=\"bg-[#282A2A] text-center border-2 border-[#F8A82C] rounded px-3 py-1 text-white\"\r\n                /> */}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Statistics */}\r\n            <div>\r\n              <h2 className=\"text-[#F9A82C] font-semibold text-[20px]  lg:text-[22px] mb-3\">Statistics</h2>\r\n              <ul className=\"space-y-1 pl-0\">\r\n                <li className=\"flex text-[18px]  font-semibold border-b border-[#f8a62cc7] pb-2 justify-between\">\r\n                  <span>You are mining</span>\r\n                  <span className=\"text-[#FFD100]\">0 HASH / DAY</span>\r\n                </li>\r\n                <li className=\"flex text-[18px]  font-semibold border-b border-[#f8a62cc7] pb-2 justify-between\">\r\n                  <span>Your hash rate is</span>\r\n                  <span lassName=\"text-[#FFD100]\">{hashRate ? Number(hashRate) : 0} GH / S</span>\r\n                </li>\r\n                <li className=\"flex text-[18px]  font-semibold border-b border-[#f8a62cc7] pb-2 justify-between\">\r\n                  <span>Blocks until next halvening</span>\r\n                  <span lassName=\"text-[#FFD100]\">0 BLOCKS</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            {/* Claim Button */}\r\n            <div className=\"bg-gray-800 rounded-lg p-4 text-center\">\r\n              <p className=\"text-white font-semibold lg:text-2xl text-lg mb-3\">\r\n                You Have Mined : <span className=\"text-[#F8A82C]\">100,000 $HASH</span>\r\n              </p>\r\n              <button className=\"bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 font-bold w-full py-1 text-[#78350F] text-[16px] px-6 rounded-md\">\r\n                CLAIM NOW\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <>\r\n          {!initializedStarterFacility ? (\r\n            // Right Panel\r\n            <div className=\"bg-[#0000009e] rounded-lg p-6 flex flex-col items-center justify-center space-y-6 text-center\">\r\n              <h2 className=\"text-white font-semibold text-3xl\">\r\n                PLEASE ACQUIRE A <br /> MINING SPACE\r\n              </h2>\r\n              <div className=\" w-[282px] h-[252px]\">\r\n                <img src={Imag1} alt=\"Penguins mining\" />\r\n\r\n              </div>\r\n              <button\r\n                onClick={() => setShowModal(true)}\r\n                className=\"bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 font-bold w-[75%] py-2 text-[#78350F] text-[20px] px-6 rounded-md\"\r\n              >\r\n                BUY SPACE\r\n              </button>\r\n\r\n              {/* Modal */}\r\n              {showModal && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n                  <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n                    <h2 className=\"text-[25px] font-bold mb-2 text-white\">GET YOUR FIRST MINING SPACE</h2>\r\n                    <p className=\"text-sm text-gray-300 mb-2\">Start mining HASH by purchasing your first space!</p>\r\n                    <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n                    <p className=\"text-left text-[#F9A82C] font-medium mb-2\">SET UP YOUR IGLOO</p>\r\n                    <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n                      <div className=\"flex justify-between mb-1 font-medium\">\r\n                        <span>- Space Capacity:</span>\r\n                        <span className=\"text-yellow-400 font-medium\">3 Miners</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between mb-1 font-medium\">\r\n                        <span>- Price</span>\r\n                        <span className=\"text-yellow-400 font-medium\">{initialFacilityPrice ? ethers.formatEther(initialFacilityPrice) : 0} ETH</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex justify-between mt-6 gap-4\">\r\n                      <button\r\n                        onClick={() => setShowModal(false)}\r\n                        className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n                      >\r\n                        CANCEL\r\n                      </button>\r\n                      <button\r\n                        onClick={handlePurchaseInitialFacility}\r\n                        className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n                      >\r\n                        {isPurchasingInitialFacility ? 'Buying...' : 'Buy Space'}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            // New section shown after modal BUY SPACE\r\n            <div className=\"\">\r\n              <Inventory />\r\n            </div>\r\n          )}\r\n        </>\r\n      </div>\r\n      <div className=\"relative mt-[92px] mb-[40px]\">\r\n        <div className=\"flex justify-center flex-wrap gap-3\">\r\n          {/* Twitter */}\r\n          <a\r\n            href=\"https://twitter.com/hashlordz\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"flex  items-center gap-3 no-underline bg-[#0000009e] w-[200px] hover:bg-[#2a2c2f] rounded-lg px-4 py-2 transition duration-200\"\r\n          >\r\n            <svg width=\"33\" height=\"33\" className='block' viewBox=\"0 0 33 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M32.492 16.2449C32.492 7.27199 25.218 -0.00201416 16.245 -0.00201416C7.27208 -0.00201416 -0.00195312 7.27199 -0.00195312 16.2449C-0.00195312 25.2179 7.27208 32.4919 16.245 32.4919C25.218 32.4919 32.492 25.2179 32.492 16.2449Z\" fill=\"#0EA5E9\" fill-opacity=\"0.3\" />\r\n              <path d=\"M23.059 11.777C22.572 12.021 22.084 12.102 21.516 12.183C22.084 11.858 22.49 11.371 22.653 10.721C22.166 11.046 21.597 11.208 20.947 11.371C20.46 10.884 19.728 10.559 18.997 10.559C17.291 10.559 15.992 12.183 16.398 13.808C14.205 13.727 12.255 12.671 10.874 11.046C10.143 12.265 10.549 13.808 11.686 14.62C11.28 14.62 10.874 14.458 10.468 14.295C10.468 15.514 11.361 16.651 12.58 16.976C12.174 17.057 11.767 17.139 11.361 17.057C11.686 18.113 12.661 18.926 13.88 18.926C12.905 19.657 11.443 20.063 10.062 19.901C11.28 20.632 12.661 21.119 14.123 21.119C19.079 21.119 21.841 16.976 21.678 13.158C22.247 12.833 22.734 12.346 23.059 11.777Z\" fill=\"#73D5FF\" />\r\n            </svg>\r\n            <div className=\"text-white\">\r\n              <p className=\"text-sm mb-0 font-semibold\">Twitter</p>\r\n              <p className=\"text-xs mb-0 text-gray-400\">@hashlordz</p>\r\n            </div>\r\n          </a>\r\n\r\n          {/* Discord */}\r\n          <a\r\n            href=\"https://discord.gg/hashlordz\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"flex  items-center gap-3 no-underline bg-[#0000009e] w-[200px] hover:bg-[#2a2c2f] rounded-lg px-4 py-3 transition duration-200\"\r\n          >\r\n            <svg width=\"33\" height=\"33\" viewBox=\"0 0 33 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M32.492 16.2449C32.492 7.27199 25.218 -0.00201416 16.245 -0.00201416C7.27208 -0.00201416 -0.00195312 7.27199 -0.00195312 16.2449C-0.00195312 25.2179 7.27208 32.4919 16.245 32.4919C25.218 32.4919 32.492 25.2179 32.492 16.2449Z\" fill=\"#0EA5E9\" fill-opacity=\"0.3\" />\r\n              <path d=\"M23.059 11.777C22.572 12.021 22.084 12.102 21.516 12.183C22.084 11.858 22.49 11.371 22.653 10.721C22.166 11.046 21.597 11.208 20.947 11.371C20.46 10.884 19.728 10.559 18.997 10.559C17.291 10.559 15.992 12.183 16.398 13.808C14.205 13.727 12.255 12.671 10.874 11.046C10.143 12.265 10.549 13.808 11.686 14.62C11.28 14.62 10.874 14.458 10.468 14.295C10.468 15.514 11.361 16.651 12.58 16.976C12.174 17.057 11.767 17.139 11.361 17.057C11.686 18.113 12.661 18.926 13.88 18.926C12.905 19.657 11.443 20.063 10.062 19.901C11.28 20.632 12.661 21.119 14.123 21.119C19.079 21.119 21.841 16.976 21.678 13.158C22.247 12.833 22.734 12.346 23.059 11.777Z\" fill=\"#73D5FF\" />\r\n            </svg>\r\n            <div className=\"text-white\">\r\n              <p className=\"text-sm mb-0 font-semibold\">Discord</p>\r\n              <p className=\"text-xs mb-0 text-gray-400\">discord.gg/hashlordz</p>\r\n            </div>\r\n          </a>\r\n\r\n          {/* Telegram */}\r\n          <a\r\n            href=\"https://t.me/hashlordz\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"flex  items-center gap-3 no-underline bg-[#0000009e] w-[200px] hover:bg-[#2a2c2f] rounded-lg px-4 py-2 transition duration-200\"\r\n          >\r\n            <svg width=\"34\" height=\"33\" viewBox=\"0 0 34 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M33.1689 16.2449C33.1689 7.27199 25.8949 -0.00201416 16.9219 -0.00201416C7.94899 -0.00201416 0.674988 7.27199 0.674988 16.2449C0.674988 25.2179 7.94899 32.4919 16.9219 32.4919C25.8949 32.4919 33.1689 25.2179 33.1689 16.2449Z\" fill=\"#3B82F6\" fill-opacity=\"0.3\" />\r\n              <path d=\"M22.187 15.839V19.901C22.186 20.439 21.972 20.955 21.591 21.335C21.211 21.716 20.695 21.93 20.157 21.932H17.237C17.129 21.932 17.026 21.889 16.95 21.813C16.874 21.736 16.831 21.633 16.831 21.525C16.831 21.418 16.874 21.314 16.95 21.238C17.026 21.162 17.129 21.119 17.237 21.119H20.157C20.479 21.118 20.789 20.989 21.017 20.761C21.245 20.533 21.374 20.223 21.375 19.901V19.83C21.245 19.877 21.107 19.901 20.969 19.901H20.157C19.833 19.901 19.523 19.772 19.295 19.544C19.066 19.315 18.938 19.005 18.938 18.682V16.651C18.938 16.328 19.066 16.018 19.295 15.79C19.523 15.561 19.833 15.433 20.157 15.433H21.355C21.253 14.317 20.736 13.28 19.905 12.528C19.075 11.775 17.992 11.363 16.872 11.371H16.867C15.745 11.36 14.661 11.772 13.831 12.525C13 13.278 12.483 14.316 12.383 15.433H13.582C13.904 15.434 14.214 15.563 14.442 15.791C14.67 16.019 14.799 16.329 14.8 16.651V18.682C14.799 19.005 14.67 19.314 14.442 19.542C14.214 19.771 13.904 19.899 13.582 19.901H12.769C12.447 19.899 12.137 19.771 11.909 19.542C11.681 19.314 11.552 19.005 11.551 18.682V15.839C11.551 15.143 11.689 14.453 11.956 13.81C12.224 13.167 12.616 12.583 13.11 12.093C13.604 11.602 14.19 11.214 14.835 10.95C15.48 10.687 16.17 10.554 16.867 10.559H16.907C18.307 10.56 19.649 11.117 20.639 12.107C21.629 13.097 22.186 14.439 22.187 15.839Z\" fill=\"#3B82F6\" />\r\n            </svg>\r\n            <div className=\"text-white\">\r\n              <p className=\"text-sm mb-0 font-semibold\">Telegram</p>\r\n              <p className=\"text-xs mb-0 text-gray-400\">t.me/hashlordz</p>\r\n            </div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n"],"names":["TEST_NET","PRESALE_ADDRESS_TEST","PRESALE_ADDRESS_MAIN","HASH_ADDRESS_TEST","HASH_ADDRESS_MAIN","MINER_ADDRESS_TEST","MINER_ADDRESS_MAIN","nftAnimationStyle","document","createElement","innerHTML","head","appendChild","useRefresh","fast","slow","useContext","RefreshContext","fastRefresh","slowRefresh","BettingPage","useNavigate","showModal","setShowModal","useState","useMediaQuery","data","txResult","writeContractAsync","useWriteContract","openConnectModal","useConnectModal","disconnect","useDisconnect","chainId","useChainId","isConnected","address","useAccount","balance","refetch","refetchBalance","useBalance","animationRef","useRef","isButtonPressed","setIsButtonPressed","tokenBalance","refetchTokenBalance","useReadContract","abi","HashAbi","functionName","args","zeroAddress","poolBalance","refetchPoolBalance","initializedStarterFacility","refetchInitializedStarterFacility","MinerAbi","initialFacilityPrice","refetchInitialFacilityPrice","console","log","hashRate","refetchPlayerHashrate","tokenPrice","refetchTokenPrice","PresaleAbi","nextPrice","refetchNextPrice","minContribution","refetchMinContribution","maxContribution","refetchMaxContribution","contributedSonicAmount","refetchContributedSonicAmount","contributionPhase","refetchContributionPhase","purchasedTokenAmounts","refetchPurchasedTokenAmounts","timePhase1","refetchTimePhase1","timePhase2","refetchTimePhase2","timeEnd","refetchTimeEnd","totalPurchasedTokenAmount","refetchTotalPurchasedTokenAmount","totalRaisedSonicAmount","refetchTotalRaisedSonicAmount","isPurchasingInitialFacility","setIsPurchasingInitialFacility","openModalDeposit","setOpenModalDeposit","openModalClaim","setOpenModalClaim","depositAmount","setDepositAmount","minEthAmount","setMinEthAmount","maxEthAmount","setMaxEthAmount","currentContribution","setCurrentContribution","userPercent","setUserPercent","isWhitelistedAirdrop","setIsWhitelistedAirdrop","isAvailalbeDeposit","setIsAvailableDeposit","isDepositing","setIsDepositing","isAvailalbeClaim","setIsAvailableClaim","isClaiming","setIsClaiming","timeToEnd","setTimeToEnd","currentPercent","setCurrentPercent","remainedAmount","setRemainedAmount","useEffect","undefined","temp","Number","ethers","num","toFixed","toString","Math","min","current","clearTimeout","_jsxs","Layout","children","className","_jsx","type","value","parseFloat","readOnly","lassName","_Fragment","Inventory","src","Imag1","alt","onClick","async","then","setTimeout","catch","err","href","target","rel","width","height","viewBox","fill","xmlns","d"],"sourceRoot":""}