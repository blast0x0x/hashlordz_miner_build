{"version":3,"file":"static/js/9005.c95ea139.chunk.js","mappings":"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","sources":["config/index.js","components/Referal.jsx","components/Space.jsx","components/Store.jsx","components/MarketPlace.jsx","components/SpacePanel.jsx","components/BuySpace.jsx","components/RigthPanel.jsx","pages/Dashboard.jsx"],"sourcesContent":["export const MAIN_NET = 2741;\r\nexport const TEST_NET = 11124;\r\n\r\nexport const HASH_ADDRESS_TEST = \"0x7DF0d1623b3Ac433Ee5121ccb6753D9E61818D3a\";\r\nexport const HASH_ADDRESS_MAIN = \"\";\r\n\r\nexport const MINER_ADDRESS_TEST = \"0xd3fCdE8E683dba31BB0A9D82C8160c74B75e7351\";\r\nexport const MINER_ADDRESS_MAIN = \"\";\r\n\r\nexport const UNIT256_MAX = \"115792089237316195423570985008687907853269984665640564039457584007913129639935\";","import React, { useEffect, useState } from \"react\";\r\nimport { useChainId, useAccount, useReadContract, useWriteContract } from \"wagmi\";\r\nimport { zeroAddress } from \"viem\";\r\nimport toast from \"react-hot-toast\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport {\r\n  TEST_NET,\r\n  MINER_ADDRESS_TEST,\r\n  MINER_ADDRESS_MAIN,\r\n} from \"../config\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\n\r\nexport default function Referral() {\r\n  const chainId = useChainId();\r\n  const { isConnected, address } = useAccount();\r\n\r\n  const [referralLink, setReferralLink] = useState(\"\");\r\n\r\n  const { data: referredUsers, refetch: refetchReferredUsers } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getReferrals\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: referralBonusPaid, refetch: refetchReferralBonusPaid } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"referralBonusPaid\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  console.log(\"eagle referredUsers = \", referralBonusPaid);\r\n\r\n  useEffect(() => {\r\n    if (!isConnected || !address) return;\r\n\r\n    setReferralLink(`${window.location.origin}?ref=${address}`);\r\n  }, [address])\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(referralLink);\r\n    toast.success(\"Referral link copied!\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8 text-white\">\r\n      <div className=\"max-w-md mx-auto  font-mono\">\r\n        <h2 className=\"text-center text-lg font-bold border-b border-white pb-2 mb-4\">\r\n          REFER A FRIEND\r\n        </h2>\r\n\r\n        <p className=\"text-center text-sm mb-4\">\r\n          SHARE YOUR REFERRAL LINK WITH FRIENDS AND <br />\r\n          EARN A <span className=\"text-yellow-400\">2.5%</span> BONUS OF WHATEVER HASHCOIN THEY MINE!\r\n        </p>\r\n\r\n        <div className=\"flex justify-between items-center bg-[#122533] p-4 rounded mb-4\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-sm text-gray-400\">TOTAL REFERRALS</p>\r\n            <p className=\"text-xl font-bold text-yellow-400\">{referredUsers ? referredUsers.length : 0}</p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-sm text-gray-400\">TOTAL BIG EARNED</p>\r\n            <p className=\"text-xl font-bold text-yellow-400\">{referralBonusPaid ? parseFloat(ethers.formatEther(referralBonusPaid)).toFixed(2) : 0} $BIG</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-[#122533] p-3 rounded flex items-center justify-between mb-4\">\r\n          <span className=\"text-xs break-all\">{referralLink}</span>\r\n          <button\r\n            onClick={handleCopy}\r\n            className=\"bg-yellow-400 text-black text-xs px-3 py-1 ml-2 rounded hover:bg-yellow-300 font-bold\"\r\n          >\r\n            COPY\r\n          </button>\r\n        </div>\r\n\r\n        <button className=\"bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 font-bold w-full py-1 text-[#78350F] text-[18px] px-6 rounded-md\">\r\n          CLOSE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport ImgHumar1 from '../assets/images/miners/leaf.png'\r\nimport ImgHumar2 from '../assets/images/miners/steel.png'\r\nimport ImgHumar3 from '../assets/images/miners/diamond.png'\r\nimport '../index.css'\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract, useDisconnect } from \"wagmi\";\r\nimport { useConnectModal } from \"@rainbow-me/rainbowkit\";\r\nimport {\r\n  MINER_ADDRESS_MAIN,\r\n  MINER_ADDRESS_TEST,\r\n  HASH_ADDRESS_TEST,\r\n  HASH_ADDRESS_MAIN,\r\n  TEST_NET,\r\n  MAIN_NET,\r\n  UNIT256_MAX\r\n} from \"../config\"\r\nimport HashAbi from \"../config/abis/HASH_ABI.json\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { zeroAddress } from \"viem\";\r\nimport toast from \"react-hot-toast\";\r\nimport { BaseWallet, ethers } from \"ethers\";\r\n\r\nexport default function Space() {\r\n  const [activeItem, setActiveItem] = useState()\r\n  const [selectedItem, setSelectedItem] = useState(-1)\r\n  const [selectedAvailableItem, setSelectedAvailableItem] = useState(-1)\r\n\r\n  const [isUpgradingSpace, setIsUpgradingSpace] = useState(false);\r\n  const [isUpgradingMiner, setIsUpgradingMiner] = useState(false);\r\n  const [isStopingMiner, setIsStopingMiner] = useState(false);\r\n  const [isStartingMiner, setIsStartingMiner] = useState(false);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showStartMiningModal, setShowStartMiningModal] = useState(false);\r\n\r\n  const { data: txResult, writeContractAsync } = useWriteContract();\r\n\r\n  const { openConnectModal } = useConnectModal();\r\n  const { disconnect } = useDisconnect();\r\n\r\n  const chainId = useChainId();\r\n  const { isConnected, address } = useAccount();\r\n  const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n  ////////HASH//////////////////////////////////////\r\n  const { data: tokenBalance, refetch: refetchTokenBalance } = useReadContract({\r\n    address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"balanceOf\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: approvedTokenAmount, refetch: refetchApprovedTokenAmount } = useReadContract({\r\n    address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"allowance\",\r\n    args: [isConnected ? address : zeroAddress, chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN],\r\n    chainId: chainId,\r\n  });\r\n\r\n  /////// Miner //////////////////////////////////\r\n  const { data: playerMinersPaginated, refetch: refetchPlayerMinersPaginated } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getPlayerMinersPaginated\",\r\n    args: [isConnected ? address : zeroAddress, 0, isConnected ? 100 : 0],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: ownerToFacility, refetch: refetchOwnerToFacility } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"ownerToFacility\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: getAmountFor2, refetch: refetchGetAmountFor2 } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['25000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: getAmountFor3, refetch: refetchGetAmountFor3 } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['100000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: leafCost, refetch: refetchLeafCost } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['2500000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: steelCost, refetch: refetchSteelCost } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['2500000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: diamondCost, refetch: refetchDiamondCost } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['250000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: timeUntilNextFacilityUpgrade, refetch: refetchTimeUntilNextFacilityUpgrade } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"timeUntilNextFacilityUpgrade\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const playerMiners = !(playerMinersPaginated && playerMinersPaginated?.length > 0) ? [] : playerMinersPaginated.filter(item => Number(item.x) !== 100);\r\n  const availableMiners = !(playerMinersPaginated && playerMinersPaginated?.length > 0) ? [] : playerMinersPaginated.filter(item => Number(item.x) === 100);\r\n\r\n  const handleUpgradeSpace = async () => {\r\n    setIsUpgradingSpace(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsUpgradingSpace(false);\r\n      return;\r\n    }\r\n    if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n      toast.error(\"Please switch to the correct network.\");\r\n      setIsUpgradingSpace(false);\r\n      return;\r\n    }\r\n    if (Number(timeUntilNextFacilityUpgrade) > 0) {\r\n      toast.error(`Please wait cooldown ${timeUntilNextFacilityUpgrade} seconds`);\r\n      setIsUpgradingSpace(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsUpgradingSpace(false);\r\n      return;\r\n    }\r\n    const tokenAmount = Number(ownerToFacility[1]) === 3 ? ethers.formatEther(getAmountFor2) : ethers.formatEther(getAmountFor3);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(tokenBalance)) < parseFloat(tokenAmount)) {\r\n      toast.error(\"Insufficient token amount.\");\r\n      setIsUpgradingSpace(false);\r\n      return;\r\n    }\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(approvedTokenAmount)) < parseFloat(tokenAmount)) {\r\n      await writeContractAsync({\r\n        address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"approve\",\r\n        args: [chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN, UNIT256_MAX],\r\n        value: '0'\r\n      })\r\n        .then(() => {\r\n          // setTimeout(async () => {\r\n          //   setIsUpgradingSpace(false);\r\n          //   setShowModal(false);\r\n          //   await refetchPlayerMinersPaginated();\r\n          //   await refetchOwnerToFacility();\r\n          // }, 3000); // Keep animation running for a bit after Claim completes\r\n        })\r\n        .catch((err) => {\r\n          setIsUpgradingSpace(false);\r\n        });\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"buyNewFacility\",\r\n      args: [],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsUpgradingSpace(false);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsUpgradingSpace(false);\r\n      });\r\n  }\r\n\r\n  const handleUpgradeLevel = async (minerId) => {\r\n    setIsUpgradingMiner(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n      toast.error(\"Please switch to the correct network.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    const miner = playerMiners.find(i => i.id.toString() === minerId.toString());\r\n    if (miner.level.toString() === \"5\") {\r\n      toast.error(\"Miner is already at max level.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    if (Number(timeUntilNextFacilityUpgrade) > 0) {\r\n      toast.error(`Please wait cooldown ${timeUntilNextFacilityUpgrade} seconds`);\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    const tokenAmount = minerId === \"3\" ? ethers.formatEther(diamondCost) : minerId === \"2\" ? ethers.formatEther(steelCost) : ethers.formatEther(leafCost);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(tokenBalance)) < parseFloat(tokenAmount)) {\r\n      toast.error(\"Insufficient token amount.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(approvedTokenAmount)) < parseFloat(tokenAmount)) {\r\n      await writeContractAsync({\r\n        address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"approve\",\r\n        args: [chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN, UNIT256_MAX],\r\n        value: '0'\r\n      })\r\n        .then(() => {\r\n          // setTimeout(async () => {\r\n          //   setIsUpgradingMiner(false);\r\n          //   setShowModal(false);\r\n          //   await refetchPlayerMinersPaginated();\r\n          //   await refetchOwnerToFacility();\r\n          // }, 3000); // Keep animation running for a bit after Claim completes\r\n        })\r\n        .catch((err) => {\r\n          setIsUpgradingMiner(false);\r\n        });\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"updateMiner\",\r\n      args: [minerId],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsUpgradingMiner(false);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsUpgradingMiner(false);\r\n      });\r\n  }\r\n\r\n  const handleStopMining = async (minerId) => {\r\n    setIsStopingMiner(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsStopingMiner(false);\r\n      return;\r\n    }\r\n    if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n      toast.error(\"Please switch to the correct network.\");\r\n      setIsStopingMiner(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsStopingMiner(false);\r\n      return;\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"stopMining\",\r\n      args: [minerId],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsStopingMiner(false);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsStopingMiner(false);\r\n      });\r\n  }\r\n\r\n  const handleStartMining = async () => {\r\n    setIsStartingMiner(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsStartingMiner(false);\r\n      return;\r\n    }\r\n    if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n      toast.error(\"Please switch to the correct network.\");\r\n      setIsStartingMiner(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsStartingMiner(false);\r\n      return;\r\n    }\r\n    if(!availableMiners[selectedAvailableItem]?.id.toString()) {\r\n      toast.error(\"Please select or buy a miner to start mining.\");\r\n      setIsStartingMiner(false);\r\n      return;\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"startMining\",\r\n      args: [availableMiners[selectedAvailableItem]?.id.toString(), selectedItem],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsStartingMiner(false);\r\n          setShowStartMiningModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsStartingMiner(false);\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-span-2 rounded-b-lg space-y-6 p-4 bg-[#1B2531]\">\r\n      <div className=\"flex justify-between\">\r\n        <div className=\"space-y-2 w-1/2 text-xl\">\r\n          <div className=\"text-yellow-400 font-medium\">ID: #{activeItem?.id.toString() ?? \"-\"}</div>\r\n          <div className=\"text-yellow-400 font-medium\">Level: {activeItem?.level.toString() ?? \"-\"}</div>\r\n          <div className=\"text-yellow-400 font-medium\" onClick={() => console.log(activeItem)}>Power: {activeItem?.hashrate.toString() ?? \"-\"}</div>\r\n        </div>\r\n        {activeItem?.id.toString() ? <div className=\"bg-black w-1/2 rounded-lg border border-slate-600 p-2 aspect-square max-w-28 max-h-28\">\r\n          <div className=\"relative w-full h-full\">\r\n            <div className=\"absolute top-1 left-1 text-xs text-yellow-400 font-bold\">#{activeItem?.id.toString() ?? \"—\"}</div>\r\n            <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {activeItem?.level.toString() ?? \"—\"}</div>\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                <img src={activeItem?.minerIndex.toString() === \"1\" ? ImgHumar1 : activeItem?.minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> : <></>}\r\n      </div>\r\n\r\n      {/* <div className=\"border-t border-slate-700/50\"></div> */}\r\n\r\n      {/* \r\n      <div className=\"space-y-3\">\r\n        <h3 className=\"text-white font-medium text-xl\">Move Miner</h3>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <span className=\"text-white text-xl mr-3\">A</span>\r\n          <div className=\"flex items-center justify-center\">\r\n            <img src={LeftArrow} alt=\"\" className=\"w-[25px]\" />\r\n            <img src={RightArrow} alt=\"\" className=\"w-[25px]\" />\r\n          </div>\r\n          <span className=\"text-white text-xl ml-3\">B</span>\r\n          <button className=\"px-3 py-1 text-xl text-white font-medium\">SWAP</button>\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"border-t border-slate-700/50\"></div>\r\n\r\n      {/* <div className=\"space-y-3\">\r\n        <h3 className=\"text-yellow-400 font-medium text-xl\">Sell Miner</h3>\r\n        <div className=\"flex space-x-2\">\r\n          <div className=\"relative flex-1\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Price\"\r\n              className=\"w-full px-3 text-xl py-2 bg-[#15120D] border-2 border-yellow-500 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:border-yellow-400 pr-12\"\r\n            />\r\n            <span className=\"absolute right-3 text-xl top-1/2 transform -translate-y-1/2 text-yellow-400 font-medium\">ETH</span>\r\n          </div>\r\n          <button className=\"px-4 py-2 text-yellow-500 border-2 border-yellow-500 rounded-lg text-sm font-medium\">LIST</button>\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"grid grid-cols-3 gap-3 mt-6 h-[400px] overflow-y-auto p-3\">\r\n        {[null, null, null, null, null, null, null].map((item, index) => (\r\n          <div\r\n            key={index}\r\n            onClick={(event) => {\r\n              setSelectedItem(index);\r\n              // console.log('selectedItem', Number(ownerToFacility[1]));\r\n              if (!(ownerToFacility && index < Number(ownerToFacility[1]))) {\r\n                toast.error(\"Please upgrade space to extand!\")\r\n              } else if (!(playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())))) {\r\n                setShowStartMiningModal(true);\r\n              } else {\r\n                setActiveItem(playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())))\r\n              }\r\n            }}\r\n            className={`relative aspect-square flex items-center justify-center bg-black rounded-lg  cursor-pointer transition-all ${playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())) ? \"border-slate-600 border-1\" : \"border-slate-700/50 border-1\"\r\n              } ${index === selectedItem ? \"border-yellow-400 shadow-lg shadow-yellow-400/20 border-4\" : \"border-white border-2\"} ${ownerToFacility && index < Number(ownerToFacility[1]) ? '' : 'opacity-25'}`}\r\n          >\r\n            {playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())) ? (\r\n              <>\r\n                <div className=\"absolute top-1 left-1 text-xs text-white font-bold\">#{playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).id.toString()}</div>\r\n                <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).level.toString()}</div>\r\n                <div className=\"p-2 h-full\">\r\n                  <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                    <img src={playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).minerIndex.toString() === \"1\" ? ImgHumar1 : playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  className=\"absolute bottom-1 mx-auto text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded h-6 w-32\"\r\n                  onClick={(event) => {\r\n                    event.stopPropagation();\r\n                    setSelectedItem(index)\r\n                    // console.log(\"okay\", item, index, selectedItem, index === selectedItem, playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())))\r\n                    handleStopMining(playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).id.toString())\r\n                  }}\r\n                >{`${isStopingMiner ? `Stoping...` : `Stop Mining`}`}</button>\r\n                <button\r\n                  className=\"absolute bottom-8 mx-auto text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded h-6 w-32\"\r\n                  onClick={async (event) => {\r\n                    event.stopPropagation();\r\n                    setSelectedItem(index);\r\n                    handleUpgradeLevel(playerMiners.find(i => parseInt(i.x.toString()) === parseInt(index.toString())).id.toString())\r\n                  }}\r\n                >{`${isUpgradingMiner ? `Updating...` : `Update Level`}`}</button>\r\n              </>\r\n            ) : (\r\n              <h2 className=\"text-slate-600 pb-[7px] lg:pb-0 h-fit lg:text-6xl mb-0 text-[26px] font-black\">+</h2>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        className=\"text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded h-12 w-32\"\r\n        onClick={() => setShowModal(true)}\r\n      >Upgrade Space</button>\r\n      {/* Modal */}\r\n      {showModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n            <h2 className=\"text-[25px] font-bold mb-2 text-white\">UPGRADE SPACE</h2>\r\n            <p className=\"text-sm text-gray-300 mb-2\">Upgrade Space to setup more minor!</p>\r\n            <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n            <p className=\"text-left text-[#F9A82C] font-medium mb-2\">Upgrade Your Space</p>\r\n            <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Space Capacity:</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${Number(ownerToFacility[1])} Miners -> ${Number(ownerToFacility[1]) + 2} Miners`}</span>\r\n              </div>\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Available Miners</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`Leaf ${Number(ownerToFacility[1]) >= 3 ? `, Steel` : ``} ${Number(ownerToFacility[1]) >= 5 ? `, Diamond` : ``} Miners`}</span>\r\n              </div>\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Price</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${Number(ownerToFacility[1]) === 3 ? `${getAmountFor2 ? ethers.formatEther(getAmountFor2) : '--'} $Hash` : `${getAmountFor3 ? ethers.formatEther(getAmountFor3) : '--'} $Hash`}`}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex justify-between mt-6 gap-4\">\r\n              <button\r\n                onClick={() => setShowModal(false)}\r\n                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n              >\r\n                CANCEL\r\n              </button>\r\n              <button\r\n                onClick={handleUpgradeSpace}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isUpgradingSpace ? 'Upgrading...' : 'Upgrade Space'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showStartMiningModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n            <h2 className=\"text-[25px] font-bold mb-2 text-white\">Start Mining</h2>\r\n            <p className=\"text-sm text-gray-300 mb-2\">Select miner to start mining!</p>\r\n            {/* <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" /> */}\r\n            <p className=\"text-left text-[#F9A82C] font-medium mb-2\">Available miners</p>\r\n            <div className=\"grid grid-cols-3 gap-3 mt-6 h-[300px] overflow-y-auto p-3\">\r\n              {availableMiners.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  onClick={(event) => {\r\n                    setSelectedAvailableItem(index);\r\n                  }}\r\n                  className={`relative aspect-square flex items-center justify-center bg-black rounded-lg  cursor-pointer transition-all ${index === selectedAvailableItem ? \"border-yellow-400 shadow-lg shadow-yellow-400/20 border-4\" : \"border-white border-2\"}`}\r\n                >\r\n                  <div className=\"absolute top-1 left-1 text-xs text-white font-bold\">#{item.id.toString()}</div>\r\n                  <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {item.level.toString()}</div>\r\n                  <div className=\"p-2 h-full\">\r\n                    <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                      <img src={item.minerIndex.toString() === \"1\" ? ImgHumar1 : item.minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex justify-between mt-6 gap-4\">\r\n              <button\r\n                onClick={() => {\r\n                  setShowStartMiningModal(false)\r\n                }}\r\n                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n              >\r\n                CANCEL\r\n              </button>\r\n              <button\r\n                onClick={handleStartMining}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isStartingMiner ? 'Starting...' : 'Start Mining'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport ImgHumar1 from '../assets/images/miners/leaf.png'\r\nimport ImgHumar2 from '../assets/images/miners/steel.png'\r\nimport ImgHumar3 from '../assets/images/miners/diamond.png'\r\nimport '../index.css'\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract, useDisconnect } from \"wagmi\";\r\nimport { useConnectModal } from \"@rainbow-me/rainbowkit\";\r\nimport { zeroAddress } from \"viem\";\r\nimport toast from \"react-hot-toast\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport {\r\n  MINER_ADDRESS_MAIN,\r\n  MINER_ADDRESS_TEST,\r\n  HASH_ADDRESS_TEST,\r\n  HASH_ADDRESS_MAIN,\r\n  TEST_NET,\r\n  MAIN_NET,\r\n  UNIT256_MAX\r\n} from \"../config\"\r\nimport HashAbi from \"../config/abis/HASH_ABI.json\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\n\r\nimport ImgLeaf from \"../assets/images/miners/leaf.png\"\r\nimport ImgSteel from \"../assets/images/miners/steel.png\"\r\nimport ImgDiamond from \"../assets/images/miners/diamond.png\"\r\n\r\nexport default function Space() {\r\n  const [activeItem, setActiveItem] = useState()\r\n  const [selectedItem, setSelectedItem] = useState(-1)\r\n\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const [isPurchasingMiner, setIsPurchasingMiner] = useState(false);\r\n  const [isUpgradingMiner, setIsUpgradingMiner] = useState(false);\r\n  const [isListingMiner, setIsListingMiner] = useState(false);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showSellModal, setShowSellModal] = useState(false);\r\n\r\n  const { data: txResult, writeContractAsync } = useWriteContract();\r\n\r\n  const { openConnectModal } = useConnectModal();\r\n  const { disconnect } = useDisconnect();\r\n\r\n  const chainId = useChainId();\r\n  const { isConnected, address } = useAccount();\r\n  const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n  ////////HASH//////////////////////////////////////\r\n  const { data: tokenBalance, refetch: refetchTokenBalance } = useReadContract({\r\n    address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"balanceOf\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: approvedTokenAmount, refetch: refetchApprovedTokenAmount } = useReadContract({\r\n    address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"allowance\",\r\n    args: [isConnected ? address : zeroAddress, chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN],\r\n    chainId: chainId,\r\n  });\r\n\r\n  /////// Miner //////////////////////////////////\r\n  const { data: playerMinersPaginated, refetch: refetchPlayerMinersPaginated } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getPlayerMinersPaginated\",\r\n    args: [isConnected ? address : zeroAddress, 0, isConnected ? 100 : 0],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: ownerToFacility, refetch: refetchOwnerToFacility } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"ownerToFacility\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: leafCost, refetch: refetchLeafCost } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['2500000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: steelCost, refetch: refetchSteelCost } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['2500000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: diamondCost, refetch: refetchDiamondCost } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getTokenAmountFromEthAmount\",\r\n    args: ['250000000000'],\r\n    chainId: chainId,\r\n  });\r\n  const { data: timeUntilNextFacilityUpgrade, refetch: refetchTimeUntilNextFacilityUpgrade } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"timeUntilNextFacilityUpgrade\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const availableMiners = !(playerMinersPaginated && playerMinersPaginated?.length > 0) ? [] : playerMinersPaginated.filter(item => Number(item.x) === 100);\r\n\r\n  const handleBuyMiner = async (minerIndex) => {\r\n    setIsPurchasingMiner(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsPurchasingMiner(false);\r\n      return;\r\n    }\r\n    if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n      toast.error(\"Please switch to the correct network.\");\r\n      setIsPurchasingMiner(false);\r\n      return;\r\n    }\r\n    if (Number(timeUntilNextFacilityUpgrade) > 0) {\r\n      toast.error(`Please wait cooldown ${timeUntilNextFacilityUpgrade} seconds`);\r\n      setIsPurchasingMiner(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsPurchasingMiner(false);\r\n      return;\r\n    }\r\n    const tokenAmount = minerIndex === 1 ? ethers.formatEther(leafCost) : minerIndex === 2 ? ethers.formatEther(steelCost) : ethers.formatEther(diamondCost);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(tokenBalance)) < parseFloat(tokenAmount)) {\r\n      toast.error(\"Insufficient token amount.\");\r\n      setIsPurchasingMiner(false);\r\n      return;\r\n    }\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(approvedTokenAmount)) < parseFloat(tokenAmount)) {\r\n      await writeContractAsync({\r\n        address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"approve\",\r\n        args: [chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN, UNIT256_MAX],\r\n        value: '0'\r\n      })\r\n        .then(() => {\r\n          // setTimeout(async () => {\r\n          //   setIsPurchasingMiner(false);\r\n          //   setShowModal(false);\r\n          //   await refetchPlayerMinersPaginated();\r\n          //   await refetchOwnerToFacility();\r\n          // }, 3000); // Keep animation running for a bit after Claim completes\r\n        })\r\n        .catch((err) => {\r\n          setIsPurchasingMiner(false);\r\n        });\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"buyMiner\",\r\n      args: [minerIndex],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsPurchasingMiner(false);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsPurchasingMiner(false);\r\n      });\r\n  }\r\n\r\n  const handleSellMiner = async () => {\r\n    setIsListingMiner(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsListingMiner(false);\r\n      return;\r\n    }\r\n    if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n      toast.error(\"Please switch to the correct network.\");\r\n      setIsListingMiner(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsListingMiner(false);\r\n      return;\r\n    }\r\n    if (price <= 0) {\r\n      toast.error(\"Please input valid price.\");\r\n      setIsListingMiner(false);\r\n      return;\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"listForSale\",\r\n      args: [activeItem?.id, ethers.parseEther(price)],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsListingMiner(false);\r\n          setShowSellModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsListingMiner(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const handleUpgradeLevel = async (minerId) => {\r\n    setIsUpgradingMiner(true);\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n      toast.error(\"Please switch to the correct network.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    const miner = availableMiners.find(i => i.id.toString() === minerId.toString());\r\n    if (miner.level.toString() === \"5\") {\r\n      toast.error(\"Miner is already at max level.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    if (Number(timeUntilNextFacilityUpgrade) > 0) {\r\n      toast.error(`Please wait cooldown ${timeUntilNextFacilityUpgrade} seconds`);\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    if (!balance || parseFloat(ethers.formatEther(balance.value)) < 0.0001) {\r\n      toast.error(\"Insufficient gas fee.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    const tokenAmount = minerId === \"3\" ? ethers.formatEther(diamondCost) : minerId === \"2\" ? ethers.formatEther(steelCost) : ethers.formatEther(leafCost);\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(tokenBalance)) < parseFloat(tokenAmount)) {\r\n      toast.error(\"Insufficient token amount.\");\r\n      setIsUpgradingMiner(false);\r\n      return;\r\n    }\r\n    if (!tokenAmount || parseFloat(ethers.formatEther(approvedTokenAmount)) < parseFloat(tokenAmount)) {\r\n      await writeContractAsync({\r\n        address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"approve\",\r\n        args: [chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN, UNIT256_MAX],\r\n        value: '0'\r\n      })\r\n        .then(() => {\r\n          // setTimeout(async () => {\r\n          //   setIsUpgradingMiner(false);\r\n          //   setShowModal(false);\r\n          //   await refetchPlayerMinersPaginated();\r\n          //   await refetchOwnerToFacility();\r\n          // }, 3000); // Keep animation running for a bit after Claim completes\r\n        })\r\n        .catch((err) => {\r\n          setIsUpgradingMiner(false);\r\n        });\r\n    }\r\n    await writeContractAsync({\r\n      address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n      abi: MinerAbi,\r\n      functionName: \"updateMiner\",\r\n      args: [minerId],\r\n      value: '0'\r\n    })\r\n      .then(() => {\r\n        setTimeout(async () => {\r\n          setIsUpgradingMiner(false);\r\n          setShowModal(false);\r\n          await refetchPlayerMinersPaginated();\r\n          await refetchOwnerToFacility();\r\n        }, 3000); // Keep animation running for a bit after Claim completes\r\n      })\r\n      .catch((err) => {\r\n        setIsUpgradingMiner(false);\r\n      });\r\n  }\r\n\r\n  const getMinerTypeColor = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return \"text-green-400\"\r\n      case 2:\r\n        return \"text-gray-400\"\r\n      case 3:\r\n        return \"text-blue-400\"\r\n      default:\r\n        return \"text-gray-400\"\r\n    }\r\n  }\r\n\r\n  const getMinerTypeName = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return \"Leaf\"\r\n      case 2:\r\n        return \"Steel\"\r\n      case 3:\r\n        return \"Diamond\"\r\n      default:\r\n        return \"Unknown\"\r\n    }\r\n  }\r\n\r\n  const getMinerImage = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return ImgLeaf\r\n      case 2:\r\n        return ImgSteel\r\n      case 3:\r\n        return ImgDiamond\r\n      default:\r\n        return ImgLeaf\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-span-2 rounded-b-lg space-y-6 p-4 bg-[#1B2531]\">\r\n      <div className=\"flex justify-between\">\r\n        <div className=\"space-y-2 w-1/2 text-xl\">\r\n          <div className=\"text-yellow-400 font-medium\">ID: #{activeItem?.id.toString() ?? \"-\"}</div>\r\n          <div className=\"text-yellow-400 font-medium\">Level: {activeItem?.level.toString() ?? \"-\"}</div>\r\n          <div className=\"text-yellow-400 font-medium\" onClick={() => console.log(activeItem)}>Power: {activeItem?.hashrate.toString() ?? \"-\"}</div>\r\n        </div>\r\n        {activeItem?.id.toString() ? <div className=\"bg-black w-1/2 rounded-lg border border-slate-600 p-2 aspect-square max-w-28 max-h-28\">\r\n          <div className=\"relative w-full h-full\">\r\n            <div className=\"absolute top-1 left-1 text-xs text-yellow-400 font-bold\">#{activeItem?.id.toString() ?? \"—\"}</div>\r\n            <div className=\"absolute top-1 right-1 text-xs text-white bg-slate-700/80 px-1.5 py-0.5 rounded\">Lv {activeItem?.level.toString() ?? \"—\"}</div>\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                <img src={activeItem?.minerIndex.toString() === \"1\" ? ImgHumar1 : activeItem?.minerIndex.toString() === \"2\" ? ImgHumar2 : ImgHumar3} alt=\"miner\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> : <></>}\r\n      </div>\r\n\r\n      {/* <div className=\"border-t border-slate-700/50\"></div> */}\r\n\r\n      {/* \r\n      <div className=\"space-y-3\">\r\n        <h3 className=\"text-white font-medium text-xl\">Move Miner</h3>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <span className=\"text-white text-xl mr-3\">A</span>\r\n          <div className=\"flex items-center justify-center\">\r\n            <img src={LeftArrow} alt=\"\" className=\"w-[25px]\" />\r\n            <img src={RightArrow} alt=\"\" className=\"w-[25px]\" />\r\n          </div>\r\n          <span className=\"text-white text-xl ml-3\">B</span>\r\n          <button className=\"px-3 py-1 text-xl text-white font-medium\">SWAP</button>\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"border-t border-slate-700/50\"></div>\r\n\r\n      {/* <div className=\"space-y-3\">\r\n        <h3 className=\"text-yellow-400 font-medium text-xl\">Sell Miner</h3>\r\n        <div className=\"flex space-x-2\">\r\n          <div className=\"relative flex-1\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Price\"\r\n              className=\"w-full px-3 text-xl py-2 bg-[#15120D] border-2 border-yellow-500 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:border-yellow-400 pr-12\"\r\n            />\r\n            <span className=\"absolute right-3 text-xl top-1/2 transform -translate-y-1/2 text-yellow-400 font-medium\">ETH</span>\r\n          </div>\r\n          <button className=\"px-4 py-2 text-yellow-500 border-2 border-yellow-500 rounded-lg text-sm font-medium\">LIST</button>\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className=\"grid grid-cols-3 gap-4 mt-6 h-[400px] overflow-y-auto p-3 scrollbar-thin scrollbar-thumb-[#F8A82C]/30 scrollbar-track-transparent\">\r\n        {[null, ...availableMiners].map((item, index) => (\r\n          <div\r\n            key={index}\r\n            onClick={(event) => {\r\n              setSelectedItem(index)\r\n              if (!item) {\r\n                setShowModal(true)\r\n              } else {\r\n                setActiveItem(availableMiners[index - 1])\r\n              }\r\n            }}\r\n            className={`group relative aspect-square flex items-center justify-center bg-[#0000009e] backdrop-blur-sm rounded-xl cursor-pointer transition-all duration-300 hover:scale-105 ${index === selectedItem\r\n              ? \"border-[#F8A82C] shadow-lg shadow-[#F8A82C]/30 border-4\"\r\n              : \"border-gray-600/50 border-2 hover:border-[#F8A82C]/50\"\r\n              }`}\r\n          >\r\n            {item ? (\r\n              <>\r\n                {/* Gradient overlay for miner type */}\r\n                <div\r\n                  className={`absolute inset-0 bg-gradient-to-br ${getMinerTypeColor(\r\n                    item.minerIndex,\r\n                  )} rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300`}\r\n                ></div>\r\n\r\n                {/* Miner ID */}\r\n                <div className=\"absolute top-2 left-2 bg-[#F8A82C]/90 text-black text-xs font-bold px-2 py-1 rounded-full z-10\">\r\n                  #{item?.id.toString()}\r\n                </div>\r\n\r\n                {/* Level Badge */}\r\n                <div className=\"absolute top-2 right-2 bg-gradient-to-r from-[#F9A82C] to-[#FFD100] text-black text-xs font-bold px-2 py-1 rounded-full z-10\">\r\n                  Lv {item?.level.toString()}\r\n                </div>\r\n\r\n                {/* Miner Type Badge */}\r\n                <div className=\"absolute top-10 right-2 bg-black/80 text-[#F8A82C] text-xs font-semibold px-2 py-1 rounded-full z-10\">\r\n                  {getMinerTypeName(item.minerIndex)}\r\n                </div>\r\n\r\n                {/* Miner Image */}\r\n                <div className=\"relative p-4 h-full w-full flex items-center justify-center\">\r\n                  <div className=\"relative w-full h-full flex items-center justify-center\">\r\n                    <img\r\n                      src={getMinerImage(item.minerIndex) || \"/placeholder.svg\"}\r\n                      alt={`${getMinerTypeName(item.minerIndex)} miner`}\r\n                      className=\"max-w-full max-h-full object-contain filter group-hover:brightness-110 transition-all duration-300\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* List Miner Button */}\r\n                <button\r\n                  className=\"absolute bottom-10 left-1/2 transform -translate-x-1/2 bg-gradient-to-r from-[#F9A82C] to-[#FFD100] hover:from-[#FFD100] hover:to-[#F9A82C] disabled:from-gray-600 disabled:to-gray-700 text-black disabled:text-gray-400 text-xs font-bold px-3 py-2 rounded-lg transition-all duration-300 hover:scale-105 active:scale-95 disabled:hover:scale-100 disabled:cursor-not-allowed w-28 z-10\"\r\n                  onClick={(event) => {\r\n                    event.stopPropagation()\r\n                    setSelectedItem(index)\r\n                    setActiveItem(availableMiners[index - 1])\r\n                    setShowSellModal(true)\r\n                  }}\r\n                  disabled={isListingMiner}\r\n                >\r\n                  {isListingMiner ? (\r\n                    <div className=\"flex items-center justify-center space-x-1\">\r\n                      <svg className=\"animate-spin h-3 w-3\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle\r\n                          className=\"opacity-25\"\r\n                          cx=\"12\"\r\n                          cy=\"12\"\r\n                          r=\"10\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"4\"\r\n                        ></circle>\r\n                        <path\r\n                          className=\"opacity-75\"\r\n                          fill=\"currentColor\"\r\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                        ></path>\r\n                      </svg>\r\n                      <span>Listing...</span>\r\n                    </div>\r\n                  ) : (\r\n                    \"List Miner\"\r\n                  )}\r\n                </button>\r\n\r\n                {/* Update Level Button */}\r\n                <button\r\n                  className=\"absolute bottom-2 left-1/2 transform -translate-x-1/2 bg-gray-700/90 hover:bg-gray-600/90 disabled:bg-gray-800/90 text-white disabled:text-gray-500 text-xs font-semibold px-3 py-2 rounded-lg transition-all duration-300 hover:scale-105 active:scale-95 disabled:hover:scale-100 disabled:cursor-not-allowed w-28 z-10\"\r\n                  onClick={(event) => {\r\n                    event.stopPropagation()\r\n                    setActiveItem(availableMiners[index - 1])\r\n                    setSelectedItem(index)\r\n                    handleUpgradeLevel(item?.id.toString())\r\n                  }}\r\n                  disabled={isUpgradingMiner}\r\n                >\r\n                  {isUpgradingMiner ? (\r\n                    <div className=\"flex items-center justify-center space-x-1\">\r\n                      <svg className=\"animate-spin h-3 w-3\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle\r\n                          className=\"opacity-25\"\r\n                          cx=\"12\"\r\n                          cy=\"12\"\r\n                          r=\"10\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"4\"\r\n                        ></circle>\r\n                        <path\r\n                          className=\"opacity-75\"\r\n                          fill=\"currentColor\"\r\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                        ></path>\r\n                      </svg>\r\n                      <span>Updating...</span>\r\n                    </div>\r\n                  ) : (\r\n                    \"Update Level\"\r\n                  )}\r\n                </button>\r\n              </>\r\n            ) : (\r\n              // Buy Miner Card\r\n              <div className=\"flex flex-col items-center justify-center space-y-3 p-4\">\r\n                <div className=\"text-4xl mb-2\">⛏️</div>\r\n                <h2 className=\"text-[#F8A82C] font-bold text-lg lg:text-xl text-center leading-tight\">Buy Miner</h2>\r\n                <div className=\"w-8 h-1 bg-gradient-to-r from-[#F9A82C] to-[#FFD100] rounded-full\"></div>\r\n                <p className=\"text-gray-400 text-xs text-center\">Click to purchase</p>\r\n              </div>\r\n            )}\r\n\r\n            {/* Selection Glow Effect */}\r\n            {index === selectedItem && (\r\n              <div className=\"absolute inset-0 bg-gradient-to-r from-[#F8A82C]/10 to-[#FFD100]/10 rounded-xl pointer-events-none\"></div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* Modal */}\r\n      {showModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n            <h2 className=\"text-[25px] font-bold mb-2 text-white\">BUY MINER</h2>\r\n            <p className=\"text-sm text-gray-300 mb-2\">Buy more miners!</p>\r\n            <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n            <p className=\"text-left text-[#F9A82C] font-medium mb-2\">Miners</p>\r\n            <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Available</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${ownerToFacility ? Number(ownerToFacility[1]) - Number(ownerToFacility[2]) : `-`} Miners`}</span>\r\n              </div>\r\n              <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Leaf Miner</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${leafCost ? ethers.formatEther(leafCost) : `-`} $Hash`}</span>\r\n              </div>\r\n              {Number(ownerToFacility[1]) > 3 ? <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Steel Miner</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${steelCost ? ethers.formatEther(steelCost) : `-`} $Hash`}</span>\r\n              </div> : <></>}\r\n              {Number(ownerToFacility[1]) > 5 ? <div className=\"flex justify-between mb-1 font-medium\">\r\n                <span>- Diamond Miner</span>\r\n                <span className=\"text-yellow-400 font-medium\">{`${diamondCost ? ethers.formatEther(diamondCost) : `-`} $Hash`}</span>\r\n              </div> : <></>}\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-3 mt-6\">\r\n              <button\r\n                onClick={() => setShowModal(false)}\r\n                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n              >\r\n                CANCEL\r\n              </button>\r\n              <button\r\n                onClick={() => handleBuyMiner(1)}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isPurchasingMiner ? 'Purchasing...' : 'Buy Leaf Miner'}\r\n              </button>\r\n              {Number(ownerToFacility[1]) > 3 ? <button\r\n                onClick={() => handleBuyMiner(2)}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isPurchasingMiner ? 'Purchasing...' : 'Buy Steel Miner'}\r\n              </button> : <></>}\r\n              {Number(ownerToFacility[1]) > 5 ? <button\r\n                onClick={() => handleBuyMiner(3)}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isPurchasingMiner ? 'Purchasing...' : 'Buy Diamond Miner'}\r\n              </button> : <></>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal */}\r\n      {showSellModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n            <h2 className=\"text-[25px] font-bold mb-2 text-white\">Sell Miner</h2>\r\n            <p className=\"text-sm text-gray-300 mb-2\">List your miner to sell!</p>\r\n            <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n            <p className=\"text-left text-[#F9A82C] font-medium mb-2\">Miners</p>\r\n            <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n              <div className=\"relative flex-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Price\"\r\n                  className=\"w-full px-3 text-xl py-2 bg-[#15120D] border-2 border-yellow-500 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:border-yellow-400 pr-12\"\r\n                  onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    if (!isNaN(value) && value >= 0) {\r\n                      setPrice(value);\r\n                    } else {\r\n                      toast.error(\"Please enter a valid price.\");\r\n                    }\r\n                  }}\r\n                />\r\n                <span className=\"absolute right-3 text-xl top-1/2 transform -translate-y-1/2 text-yellow-400 font-medium\">ETH</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-3 mt-6\">\r\n              <button\r\n                onClick={() => setShowSellModal(false)}\r\n                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n              >\r\n                CANCEL\r\n              </button>\r\n              <button\r\n                onClick={() => handleSellMiner()}\r\n                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n              >\r\n                {isListingMiner ? 'Listing...' : 'List Miner'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { useChainId, useAccount, useReadContract, useWriteContract } from \"wagmi\"\r\nimport { zeroAddress } from \"viem\"\r\nimport { ethers } from \"ethers\"\r\n\r\nimport { TEST_NET, MINER_ADDRESS_TEST, MINER_ADDRESS_MAIN } from \"../config\"\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\"\r\n\r\nimport ImgLeaf from \"../assets/images/miners/leaf.png\"\r\nimport ImgSteel from \"../assets/images/miners/steel.png\"\r\nimport ImgDiamond from \"../assets/images/miners/diamond.png\"\r\n\r\nconst ary = Array.from({ length: 10000 }, (_, i) => ({\r\n  isCancelling: false,\r\n  isBuying: false,\r\n}))\r\n\r\nexport default function Marketplace() {\r\n  const chainId = useChainId()\r\n  const { isConnected, address } = useAccount()\r\n  const { writeContractAsync } = useWriteContract()\r\n\r\n  const { data: playerMinersOwned, refetch: refetchPlayerMinersOwned } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"getMinersOnMarketplace\",\r\n    args: [],\r\n    chainId: chainId,\r\n  })\r\n\r\n  const [selfMiners, setSelfMiners] = useState([])\r\n  const [otherMiners, setOtherMiners] = useState([])\r\n  const [btnStatus, setBtnStatus] = useState(ary)\r\n\r\n  useEffect(() => {\r\n    if (\r\n      address === undefined ||\r\n      address === zeroAddress ||\r\n      !isConnected ||\r\n      playerMinersOwned === undefined ||\r\n      chainId === undefined\r\n    )\r\n      return\r\n\r\n    const selfMinersTemp = []\r\n    const otherMinersTemp = []\r\n    playerMinersOwned.forEach((item) => {\r\n      if (item.owner.toLowerCase() === address.toLowerCase()) {\r\n        selfMinersTemp.push(item)\r\n      } else {\r\n        otherMinersTemp.push(item)\r\n      }\r\n    })\r\n\r\n    setSelfMiners(selfMinersTemp)\r\n    setOtherMiners(otherMinersTemp)\r\n  }, [address, playerMinersOwned, isConnected, chainId])\r\n\r\n  const handleCancelListing = (id, index) => async () => {\r\n    if (address === undefined || address === zeroAddress || !isConnected || chainId === undefined) {\r\n      return\r\n    }\r\n\r\n    const temp = [...btnStatus]\r\n    temp[index].isCancelling = true\r\n    setBtnStatus(temp)\r\n\r\n    try {\r\n      await writeContractAsync({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"cancelListForSale\",\r\n        args: [id],\r\n      })\r\n      await refetchPlayerMinersOwned()\r\n    } catch (err) {\r\n      console.error(\"Cancel listing error:\", err)\r\n    } finally {\r\n      temp[index].isCancelling = false\r\n      setBtnStatus(temp)\r\n    }\r\n  }\r\n\r\n  const handleBuying = (id, price, index) => async () => {\r\n    if (address === undefined || address === zeroAddress || !isConnected || chainId === undefined) {\r\n      return\r\n    }\r\n\r\n    const temp = [...btnStatus]\r\n    temp[index].isBuying = true\r\n    setBtnStatus(temp)\r\n\r\n    try {\r\n      await writeContractAsync({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"buyMinerFromMarket\",\r\n        args: [id],\r\n        value: price,\r\n      })\r\n      await refetchPlayerMinersOwned()\r\n    } catch (err) {\r\n      console.error(\"Buy miner error:\", err)\r\n    } finally {\r\n      temp[index].isBuying = false\r\n      setBtnStatus(temp)\r\n    }\r\n  }\r\n\r\n  const getMinerImage = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return ImgLeaf\r\n      case 2:\r\n        return ImgSteel\r\n      case 3:\r\n        return ImgDiamond\r\n      default:\r\n        return ImgLeaf\r\n    }\r\n  }\r\n\r\n  const getMinerType = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return \"Leaf\"\r\n      case 2:\r\n        return \"Steel\"\r\n      case 3:\r\n        return \"Diamond\"\r\n      default:\r\n        return \"Unknown\"\r\n    }\r\n  }\r\n\r\n  const getMinerTypeColor = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return \"text-green-400\"\r\n      case 2:\r\n        return \"text-gray-400\"\r\n      case 3:\r\n        return \"text-blue-400\"\r\n      default:\r\n        return \"text-gray-400\"\r\n    }\r\n  }\r\n\r\n  const getMinerTypeBg = (minerIndex) => {\r\n    switch (Number(minerIndex)) {\r\n      case 1:\r\n        return \"from-green-500/20 to-emerald-400/20\"\r\n      case 2:\r\n        return \"from-gray-500/20 to-slate-400/20\"\r\n      case 3:\r\n        return \"from-blue-500/20 to-cyan-400/20\"\r\n      default:\r\n        return \"from-gray-500/20 to-slate-400/20\"\r\n    }\r\n  }\r\n\r\n  const EmptyState = ({ message, icon }) => (\r\n    <div className=\"flex flex-col items-center justify-center py-16 px-4\">\r\n      <div className=\"text-6xl mb-4 opacity-50\">{icon}</div>\r\n      <p className=\"text-gray-400 text-lg font-medium text-center\">{message}</p>\r\n    </div>\r\n  )\r\n\r\n  const MinerCard = ({ miner, index, isOwned = false }) => {\r\n    const minerType = getMinerType(miner.minerIndex)\r\n    const minerImage = getMinerImage(miner.minerIndex)\r\n    const typeColor = getMinerTypeColor(miner.minerIndex)\r\n    const typeBg = getMinerTypeBg(miner.minerIndex)\r\n\r\n    return (\r\n      <div className=\"group relative bg-[#0000009e] backdrop-blur-sm rounded-xl p-6 border border-[#F8A82C]/30 hover:border-[#F8A82C] transition-all duration-300 hover:shadow-lg hover:shadow-[#F8A82C]/10\">\r\n        <div\r\n          className={`absolute inset-0 bg-gradient-to-r ${typeBg} rounded-xl blur-sm opacity-0 group-hover:opacity-100 transition-opacity duration-300`}\r\n        ></div>\r\n\r\n        <div className=\"relative flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-6\">\r\n            <div className=\"relative\">\r\n              <div className={`absolute inset-0 bg-gradient-to-r ${typeBg} rounded-full blur-md`}></div>\r\n              <img\r\n                src={minerImage || \"/placeholder.svg\"}\r\n                alt={`${minerType} Miner`}\r\n                className=\"relative h-16 w-16 rounded-full border-2 border-gray-600 group-hover:border-yellow-500/50 transition-colors duration-300 object-cover\"\r\n              />\r\n              <div className=\"absolute -top-1 -right-1 bg-gradient-to-r from-[#F9A82C] to-[#FFD100] text-black text-xs font-bold px-2 py-1 rounded-full\">\r\n                Lv.{Number(miner.level)}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <span className={`font-bold text-xl ${typeColor}`}>{minerType}</span>\r\n                <span className=\"text-gray-400 text-sm bg-gray-700/50 px-2 py-1 rounded-full\">Miner</span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-6 text-sm\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <svg className=\"w-4 h-4 text-yellow-400\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6Z\" />\r\n                  </svg>\r\n                  <span className=\"text-gray-300\">Level {Number(miner.level)}</span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <svg className=\"w-4 h-4 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M7,15H9C9,16.08 10.37,17 12,17C13.63,17 15,16.08 15,15C15,13.9 13.96,13.5 11.76,12.97C9.64,12.44 7,11.78 7,9C7,7.21 8.47,5.69 10.5,5.18V3H13.5V5.18C15.53,5.69 17,7.21 17,9H15C15,7.92 13.63,7 12,7C10.37,7 9,7.92 9,9C9,10.1 10.04,10.5 12.24,11.03C14.36,11.56 17,12.22 17,15C17,16.79 15.53,18.31 13.5,18.82V21H10.5V18.82C8.47,18.31 7,16.79 7,15Z\" />\r\n                  </svg>\r\n                  <span className=\"text-[#FFD100] font-semibold\">{ethers.formatEther(miner.sellPrice)} ETH</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center\">\r\n              {isOwned ? (\r\n                <button\r\n                  className=\"bg-gradient-to-r from-red-600 to-red-700 hover:from-red-500 hover:to-red-600 disabled:from-gray-600 disabled:to-gray-700 text-white font-semibold px-6 py-3 rounded-lg transition-all duration-300 transform hover:scale-105 active:scale-95 disabled:hover:scale-100 disabled:cursor-not-allowed min-w-[140px]\"\r\n                  onClick={handleCancelListing(miner.id, index)}\r\n                  disabled={btnStatus[index]?.isCancelling}\r\n                >\r\n                  {btnStatus[index]?.isCancelling ? (\r\n                    <div className=\"flex items-center justify-center space-x-2\">\r\n                      <svg className=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle\r\n                          className=\"opacity-25\"\r\n                          cx=\"12\"\r\n                          cy=\"12\"\r\n                          r=\"10\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"4\"\r\n                        ></circle>\r\n                        <path\r\n                          className=\"opacity-75\"\r\n                          fill=\"currentColor\"\r\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                        ></path>\r\n                      </svg>\r\n                      <span>Cancelling...</span>\r\n                    </div>\r\n                  ) : (\r\n                    \"Cancel Listing\"\r\n                  )}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"bg-gradient-to-r from-green-600 to-green-700 hover:from-green-500 hover:to-green-600 disabled:from-gray-600 disabled:to-gray-700 text-white font-semibold px-6 py-3 rounded-lg transition-all duration-300 transform hover:scale-105 active:scale-95 disabled:hover:scale-100 disabled:cursor-not-allowed min-w-[120px]\"\r\n                  onClick={handleBuying(miner.id, miner.sellPrice, index)}\r\n                  disabled={btnStatus[index]?.isBuying}\r\n                >\r\n                  {btnStatus[index]?.isBuying ? (\r\n                    <div className=\"flex items-center justify-center space-x-2\">\r\n                      <svg className=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle\r\n                          className=\"opacity-25\"\r\n                          cx=\"12\"\r\n                          cy=\"12\"\r\n                          r=\"10\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"4\"\r\n                        ></circle>\r\n                        <path\r\n                          className=\"opacity-75\"\r\n                          fill=\"currentColor\"\r\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                        ></path>\r\n                      </svg>\r\n                      <span>Buying...</span>\r\n                    </div>\r\n                  ) : (\r\n                    \"Buy Now\"\r\n                  )}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black p-6\">\r\n      <div className=\"max-w-7xl mx-auto space-y-8\">\r\n        {/* Header */}\r\n        <div className=\"text-center space-y-4\">\r\n          <h1 className=\"text-transparent bg-gradient-to-r from-[#F9A82C] to-[#FFD100] bg-clip-text font-bold text-4xl lg:text-5xl\">\r\n            Miner Marketplace\r\n          </h1>\r\n          <p className=\"text-gray-400 text-lg max-w-2xl mx-auto\">\r\n            Trade your miners with other players. List your miners for sale or browse available miners to purchase.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Your Listed Miners Section */}\r\n        <div className=\"space-y-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"text-4xl\">🏪</div>\r\n              <div>\r\n                <h2 className=\"text-[#F9A82C] font-bold text-2xl lg:text-3xl\">Your Listed Miners</h2>\r\n                <p className=\"text-gray-400 text-sm\">Miners you have listed for sale</p>\r\n              </div>\r\n            </div>\r\n            {selfMiners.length > 0 && (\r\n              <div className=\"bg-[#F8A82C]/20 text-[#F8A82C] px-4 py-2 rounded-full text-sm font-semibold border border-[#F8A82C]/30\">\r\n                {selfMiners.length} Listed\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"bg-[#0000009e] backdrop-blur-xl rounded-2xl border border-[#F8A82C]/20 overflow-hidden\">\r\n            {selfMiners.length > 0 ? (\r\n              <div className=\"divide-y divide-gray-700/50\">\r\n                {selfMiners.map((miner, index) => (\r\n                  <div key={miner.id} className=\"p-6\">\r\n                    <MinerCard miner={miner} index={index} isOwned={true} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <EmptyState\r\n                message=\"You haven't listed any miners for sale yet. Start mining and list your miners here!\"\r\n                icon=\"📦\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Available Miners Section */}\r\n        <div className=\"space-y-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"text-4xl\">🛒</div>\r\n              <div>\r\n                <h2 className=\"text-[#F9A82C] font-bold text-2xl lg:text-3xl\">Available Miners</h2>\r\n                <p className=\"text-gray-400 text-sm\">Miners available for purchase from other players</p>\r\n              </div>\r\n            </div>\r\n            {otherMiners.length > 0 && (\r\n              <div className=\"bg-[#F8A82C]/20 text-[#F8A82C] px-4 py-2 rounded-full text-sm font-semibold border border-[#F8A82C]/30\">\r\n                {otherMiners.length} Available\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"bg-[#0000009e] backdrop-blur-xl rounded-2xl border border-[#F8A82C]/20 overflow-hidden\">\r\n            {otherMiners.length > 0 ? (\r\n              <div className=\"divide-y divide-gray-700/50\">\r\n                {otherMiners.map((miner, index) => (\r\n                  <div key={miner.id} className=\"p-6\">\r\n                    <MinerCard miner={miner} index={index} isOwned={false} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <EmptyState\r\n                message=\"No miners available for purchase at the moment. Check back later for new listings!\"\r\n                icon=\"🔍\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport '../index.css'\r\nimport Referral from \"./Referal\"\r\nimport Space from \"./Space\"\r\nimport Store from \"./Store\"\r\nimport Marketplace from \"./MarketPlace\"\r\n\r\nexport default function SpacePanel() {\r\n    const [activeTab, setActiveTab] = useState(\"Space\")\r\n\r\n    const tabs = [\"Space\", \"Store\", \"Marketplace\", \"Referral\"]\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-center\">\r\n            <div className=\"w-full max-w-5xl bg-slate-900/95 backdrop-blur-sm rounded-xl border-2 border-yellow-500 shadow-2xl shadow-yellow-500/20\">\r\n                {/* Tabs Header */}\r\n                <div className=\"flex bg-[#1B2531] items-center rounded-l-xl rounded-r-xl justify-between lg:px-8 lg:py-10 py-4 pl-4 pr-2\">\r\n                    <div className=\"flex lg:space-x-12 space-x-6 overflow-x-auto hide-scrollbar\">\r\n                        {tabs.map((tab) => (\r\n                            <button\r\n                                key={tab}\r\n                                onClick={() => setActiveTab(tab)}\r\n                                className={`py-2 text-xl font-medium transition-all duration-200 relative ${activeTab === tab ? \"text-yellow-400\" : \"text-slate-300 hover:text-slate-100\"\r\n                                    }`}\r\n                            >\r\n                                {tab}\r\n                                {activeTab === tab && (\r\n                                    <div className=\"absolute -bottom-3 left-0 right-0 h-0.5 bg-yellow-400 rounded-full\"></div>\r\n                                )}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Tab Content */}\r\n                <div className=\"gap-8\">\r\n                    {activeTab === \"Space\" && (\r\n                        <Space />\r\n                    )}\r\n\r\n                    {activeTab === \"Store\" && (\r\n                        <Store />\r\n                    )}\r\n\r\n                    {activeTab === \"Marketplace\" && (\r\n                        <Marketplace />\r\n                    )}\r\n\r\n                    {activeTab === \"Referral\" && (\r\n                        <Referral />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport './RightPanel.scss'\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\n// import { useMediaQuery } from '@uidotdev/usehooks'\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract } from \"wagmi\";\r\nimport { zeroAddress } from \"viem\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport 'react-tabs/style/react-tabs.scss'\r\nimport {\r\n    TEST_NET,\r\n    MINER_ADDRESS_TEST,\r\n    MINER_ADDRESS_MAIN,\r\n    MAIN_NET,\r\n} from \"../config\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { RefreshContext } from '../context/RefreshContext'\r\n\r\nimport Imag1 from \"../assets/images/imag1.png\"\r\n\r\n// Add animation keyframes style\r\nconst nftAnimationStyle = document.createElement('style');\r\nnftAnimationStyle.innerHTML = `\r\n  @keyframes pulse {\r\n    0% { transform: scale(1); opacity: 1; }\r\n    100% { transform: scale(1.05); opacity: 0.9; }\r\n  }\r\n  \r\n  @keyframes float {\r\n    0% { transform: translateY(0px); }\r\n    50% { transform: translateY(-10px); }\r\n    100% { transform: translateY(0px); }\r\n  }\r\n  \r\n  @keyframes glow {\r\n    0% { opacity: 0.5; }\r\n    100% { opacity: 0.8; }\r\n  }\r\n`;\r\ndocument.head.appendChild(nftAnimationStyle);\r\n\r\nconst useRefresh = () => {\r\n    const { fast, slow } = useContext(RefreshContext)\r\n    return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default function BuySpace() {\r\n    // const navigate = useNavigate(); // 👈 call useNavigate inside the component\r\n    const [searchParams,] = useSearchParams();\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    // const isMobile = useMediaQuery(\"only screen and (max-width: 768px)\");\r\n    const { fastRefresh } = useRefresh();\r\n\r\n    const { writeContractAsync } = useWriteContract();\r\n\r\n    const chainId = useChainId();\r\n    const { isConnected, address } = useAccount();\r\n    const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n    /////// Miner //////////////////////////////////\r\n    const { data: initialFacilityPrice, refetch: refetchInitialFacilityPrice } = useReadContract({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"initialFacilityPrice\",\r\n        args: [],\r\n        chainId: chainId,\r\n    });\r\n\r\n    /////////////////////////////////////////\r\n    const [isPurchasingInitialFacility, setIsPurchasingInitialFacility] = useState(false);\r\n    const [referrer, setReferrer] = useState(zeroAddress);\r\n\r\n    useEffect(() => {\r\n        refetchBalance();\r\n        refetchInitialFacilityPrice();\r\n    }, [fastRefresh]);\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get(\"ref\")) {\r\n            const referrerTemp = searchParams.get(\"ref\");\r\n            if (referrerTemp && referrerTemp.toLowerCase() !== address?.toLowerCase())\r\n                setReferrer(referrerTemp);\r\n            else\r\n                setReferrer(zeroAddress);\r\n        }\r\n    }, [searchParams, address])\r\n\r\n    const handlePurchaseInitialFacility = async () => {\r\n        setIsPurchasingInitialFacility(true);\r\n        if (!isConnected || !address) {\r\n            toast.error(\"Please connect your wallet first.\");\r\n            setIsPurchasingInitialFacility(false);\r\n            return;\r\n        }\r\n        if (chainId !== TEST_NET && chainId !== MAIN_NET) {\r\n            toast.error(\"Please switch to the correct network.\");\r\n            setIsPurchasingInitialFacility(false);\r\n            return;\r\n        }\r\n        if (!balance || parseFloat(ethers.formatEther(balance.value)) < parseFloat(ethers.formatEther(initialFacilityPrice))) {\r\n            toast.error(\"Insufficient balance to purchase the initial facility.\");\r\n            setIsPurchasingInitialFacility(false);\r\n            return;\r\n        }\r\n        await writeContractAsync({\r\n            address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n            abi: MinerAbi,\r\n            functionName: \"purchaseInitialFacility\",\r\n            args: [referrer],\r\n            value: initialFacilityPrice\r\n        })\r\n            .then(() => {\r\n                setTimeout(async () => {\r\n                    setIsPurchasingInitialFacility(false);\r\n                    setShowModal(false);\r\n                }, 3000); // Keep animation running for a bit after Claim completes\r\n            })\r\n            .catch((err) => {\r\n                setIsPurchasingInitialFacility(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-[#0000009e] rounded-lg p-6 flex flex-col items-center justify-center space-y-6 text-center\">\r\n            <h2 className=\"text-white font-semibold text-3xl\">\r\n                PLEASE ACQUIRE A <br /> MINING SPACE\r\n            </h2>\r\n            <div className=\" w-[282px] h-[252px]\">\r\n                <img src={Imag1} alt=\"Penguins mining\" />\r\n            </div>\r\n            <button\r\n                onClick={() => setShowModal(true)}\r\n                className=\"bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 font-bold w-[75%] py-2 text-[#78350F] text-[20px] px-6 rounded-md\"\r\n            >\r\n                BUY SPACE\r\n            </button>\r\n\r\n            {/* Modal */}\r\n            {showModal && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-[#1E1E1E] p-6 rounded-lg w-[90%] max-w-md text-center relative border-2 border-solid border-[#F9A82C]\">\r\n                        <h2 className=\"text-[25px] font-bold mb-2 text-white\">GET YOUR FIRST MINING SPACE</h2>\r\n                        <p className=\"text-sm text-gray-300 mb-2\">Start mining HASH by purchasing your first space!</p>\r\n                        <img src=\"/Vector.svg\" alt=\"Igloo\" className=\"mx-auto my-4 w-50 h-auto\" />\r\n                        <p className=\"text-left text-[#F9A82C] font-medium mb-2\">SET UP YOUR IGLOO</p>\r\n                        <div className=\"bg-[#2B2B2B] p-4 rounded-md text-left text-sm\">\r\n                            <div className=\"flex justify-between mb-1 font-medium\">\r\n                                <span>- Space Capacity:</span>\r\n                                <span className=\"text-yellow-400 font-medium\">3 Miners</span>\r\n                            </div>\r\n                            <div className=\"flex justify-between mb-1 font-medium\">\r\n                                <span>- Price</span>\r\n                                <span className=\"text-yellow-400 font-medium\">{initialFacilityPrice ? ethers.formatEther(initialFacilityPrice) : 0} ETH</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex justify-between mt-6 gap-4\">\r\n                            <button\r\n                                onClick={() => setShowModal(false)}\r\n                                className=\"w-full bg-gray-700 hover:bg-gray-600 text-white py-2 rounded-md\"\r\n                            >\r\n                                CANCEL\r\n                            </button>\r\n                            <button\r\n                                onClick={handlePurchaseInitialFacility}\r\n                                className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-400 hover:opacity-90 text-[#78350F] font-bold py-2 rounded-md\"\r\n                            >\r\n                                {isPurchasingInitialFacility ? 'Buying...' : 'Buy Space'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useContext } from \"react\";\r\nimport './RightPanel.scss'\r\n\r\nimport { useMediaQuery } from '@uidotdev/usehooks'\r\nimport { useChainId, useAccount, useReadContract } from \"wagmi\";\r\nimport { zeroAddress } from \"viem\";\r\n\r\nimport 'react-tabs/style/react-tabs.scss'\r\nimport {\r\n    TEST_NET,\r\n    MINER_ADDRESS_TEST,\r\n    MINER_ADDRESS_MAIN,\r\n} from \"../config\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { RefreshContext } from '../context/RefreshContext'\r\n\r\nimport SpacePanel from \"./SpacePanel\";\r\nimport BuySpace from \"./BuySpace\";\r\n\r\n// Add animation keyframes style\r\nconst nftAnimationStyle = document.createElement('style');\r\nnftAnimationStyle.innerHTML = `\r\n  @keyframes pulse {\r\n    0% { transform: scale(1); opacity: 1; }\r\n    100% { transform: scale(1.05); opacity: 0.9; }\r\n  }\r\n  \r\n  @keyframes float {\r\n    0% { transform: translateY(0px); }\r\n    50% { transform: translateY(-10px); }\r\n    100% { transform: translateY(0px); }\r\n  }\r\n  \r\n  @keyframes glow {\r\n    0% { opacity: 0.5; }\r\n    100% { opacity: 0.8; }\r\n  }\r\n`;\r\ndocument.head.appendChild(nftAnimationStyle);\r\n\r\nconst useRefresh = () => {\r\n    const { fast, slow } = useContext(RefreshContext)\r\n    return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default function RightPanel() {\r\n    const isMobile = useMediaQuery(\"only screen and (max-width: 768px)\");\r\n    const { fastRefresh } = useRefresh();\r\n\r\n    const chainId = useChainId();\r\n    const { isConnected, address } = useAccount();\r\n\r\n    /////// Miner //////////////////////////////////\r\n    const { data: initializedStarterFacility, refetch: refetchInitializedStarterFacility } = useReadContract({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"initializedStarterFacility\",\r\n        args: [isConnected ? address : zeroAddress],\r\n        chainId: chainId,\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetchInitializedStarterFacility();\r\n    }, [fastRefresh]);\r\n\r\n    return (\r\n        <>\r\n            {!initializedStarterFacility ? (\r\n                <BuySpace />\r\n            ) : (\r\n                <div className=\"\">\r\n                    <SpacePanel />\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useContext, useState } from \"react\";\r\nimport Layout from 'layouts'\r\nimport './Dashboard.scss'\r\nimport toast from \"react-hot-toast\";\r\n\r\n// import { useMediaQuery } from '@uidotdev/usehooks'\r\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract } from \"wagmi\";\r\nimport { useConnectModal } from \"@rainbow-me/rainbowkit\";\r\nimport { zeroAddress } from \"viem\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport 'react-tabs/style/react-tabs.scss'\r\nimport {\r\n  TEST_NET,\r\n  HASH_ADDRESS_TEST,\r\n  HASH_ADDRESS_MAIN,\r\n  MINER_ADDRESS_TEST,\r\n  MINER_ADDRESS_MAIN,\r\n} from \"../config\";\r\nimport HashAbi from \"../config/abis/HASH_ABI.json\";\r\nimport MinerAbi from \"../config/abis/MINER_ABI.json\";\r\nimport { RefreshContext } from '../context/RefreshContext'\r\n\r\nimport RightPanel from \"components/RigthPanel\";\r\n\r\n// Add animation keyframes style\r\nconst nftAnimationStyle = document.createElement('style');\r\nnftAnimationStyle.innerHTML = `\r\n  @keyframes pulse {\r\n    0% { transform: scale(1); opacity: 1; }\r\n    100% { transform: scale(1.05); opacity: 0.9; }\r\n  }\r\n  \r\n  @keyframes float {\r\n    0% { transform: translateY(0px); }\r\n    50% { transform: translateY(-10px); }\r\n    100% { transform: translateY(0px); }\r\n  }\r\n  \r\n  @keyframes glow {\r\n    0% { opacity: 0.5; }\r\n    100% { opacity: 0.8; }\r\n  }\r\n`;\r\ndocument.head.appendChild(nftAnimationStyle);\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nfunction formatNumber(num) {\r\n  if (num >= 1e9) return (num / 1e9).toFixed(1) + 'B';\r\n  if (num >= 1e6) return (num / 1e6).toFixed(1) + 'M';\r\n  if (num >= 1e3) return (num / 1e3).toFixed(1) + 'K';\r\n  return num.toString();\r\n}\r\n\r\nconst dailyBlocks = 86400 / 1.1\r\n\r\nexport default function BettingPage() {\r\n  // const navigate = useNavigate(); // 👈 call useNavigate inside the component\r\n\r\n  // const isMobile = useMediaQuery(\"only screen and (max-width: 768px)\");\r\n  const { fastRefresh } = useRefresh();\r\n\r\n  const { openConnectModal } = useConnectModal();\r\n  const { writeContractAsync } = useWriteContract();\r\n\r\n  const chainId = useChainId();\r\n  const { isConnected, address } = useAccount();\r\n  const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\r\n\r\n  ////////HASH//////////////////////////////////////\r\n  const { data: tokenBalance, refetch: refetchTokenBalance } = useReadContract({\r\n    address: chainId === TEST_NET ? HASH_ADDRESS_TEST : HASH_ADDRESS_MAIN,\r\n    abi: HashAbi,\r\n    functionName: \"balanceOf\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  /////// Miner //////////////////////////////////\r\n  const { data: hashRate, refetch: refetchPlayerHashrate } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"playerHashrate\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: ownerToFacility, refetch: refetchOwnerToFacility } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"ownerToFacility\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: blocksUntilNextHalving, refetch: refetchBlocksUntilNextHalving } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"blocksUntilNextHalving\",\r\n    args: [],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: pendingRewards, refetch: refetchPendingRewards } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"pendingRewards\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const { data: playerHashcoinPerBlock, refetch: refetchPlayerHashcoinPerBlock } = useReadContract({\r\n    address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n    abi: MinerAbi,\r\n    functionName: \"playerHashcoinPerBlock\",\r\n    args: [isConnected ? address : zeroAddress],\r\n    chainId: chainId,\r\n  });\r\n\r\n  const [isClaiming, setIsClaiming] = useState(false);\r\n\r\n  useEffect(() => {\r\n    refetchBalance();\r\n    refetchTokenBalance();\r\n    refetchPlayerHashrate();\r\n    refetchOwnerToFacility();\r\n    refetchBlocksUntilNextHalving();\r\n    refetchPendingRewards();\r\n    refetchPlayerHashcoinPerBlock();\r\n  }, [fastRefresh, isConnected, address, chainId]);\r\n\r\n  const handleClaim = async () => {\r\n    if (!isConnected || !address) {\r\n      toast.error(\"Please connect your wallet first.\");\r\n      return;\r\n    }\r\n    if (!pendingRewards || parseFloat(ethers.formatEther(pendingRewards)) <= 0) {\r\n      toast.error(\"No rewards to claim.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsClaiming(true);\r\n\r\n      await writeContractAsync({\r\n        address: chainId === TEST_NET ? MINER_ADDRESS_TEST : MINER_ADDRESS_MAIN,\r\n        abi: MinerAbi,\r\n        functionName: \"claimRewards\",\r\n        args: [],\r\n      })\r\n        .then(() => {\r\n          setIsClaiming(false);\r\n          toast.success(\"Rewards claimed successfully!\");\r\n        })\r\n        .finally(() => {\r\n          setIsClaiming(false);\r\n        })\r\n        .catch((err) => {\r\n          setIsClaiming(false);\r\n        });\r\n    } catch (error) {\r\n      console.error(\"Error claiming rewards:\", error);\r\n      toast.error(\"Failed to claim rewards. Please try again.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {\r\n        isConnected ?\r\n          <>\r\n            <div className=\"lg:grid px-3 lg:px-0 grid-cols-1 mx-auto relative lg:top-[50px] justify-center md:grid-cols-2 gap-6 max-w-7xl w-full\">\r\n              {/* Left Panel */}\r\n     <div className=\"bg-gradient-to-br from-black/90 to-gray-900/90 backdrop-blur-xl w-full rounded-2xl p-6 space-y-8 border border-yellow-500/20 shadow-2xl\">\r\n      <div className=\"w-full space-y-8\">\r\n        {/* Resources Section */}\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-2 mb-4\">\r\n            <div className=\"w-2 h-2 bg-gradient-to-r from-yellow-500 to-orange-400 rounded-full\"></div>\r\n            <h2 className=\"text-transparent bg-gradient-to-r from-yellow-400 to-orange-400 bg-clip-text font-bold text-xl lg:text-2xl\">\r\n              Resources\r\n            </h2>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {/* ETH Balance */}\r\n            <div className=\"relative group\">\r\n              <div className=\"absolute inset-0 bg-gradient-to-r from-yellow-500/20 to-orange-400/20 rounded-xl blur-sm group-hover:blur-md transition-all duration-300\"></div>\r\n              <div className=\"relative bg-gray-800/80 backdrop-blur-sm border-2 border-yellow-500/50 rounded-xl p-4 text-center hover:border-yellow-400 transition-all duration-300\">\r\n                <div className=\"flex items-center justify-center mb-2\">\r\n                  <svg className=\"w-5 h-5 text-yellow-400 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M12,1.75L5.75,6.25V11.5C5.75,16.25 8.5,20.5 12,21.75C15.5,20.5 18.25,16.25 18.25,11.5V6.25L12,1.75M12,7C13.04,7 13.88,7.84 13.88,8.88C13.88,9.92 13.04,10.75 12,10.75C10.96,10.75 10.13,9.92 10.13,8.88C10.13,7.84 10.96,7 12,7Z\" />\r\n                  </svg>\r\n                  <span className=\"text-gray-300 text-sm font-medium\">ETH Balance</span>\r\n                </div>\r\n                <div className=\"text-white font-bold text-lg\">\r\n                  {balance !== undefined ? Number.parseFloat(ethers.formatEther(balance.value)).toFixed(3) : \"0.000\"}\r\n                </div>\r\n                <div className=\"text-yellow-400 text-xs font-semibold\">ETH</div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Spaces Left */}\r\n            <div className=\"relative group\">\r\n              <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500/20 to-purple-400/20 rounded-xl blur-sm group-hover:blur-md transition-all duration-300\"></div>\r\n              <div className=\"relative bg-gray-800/80 backdrop-blur-sm border-2 border-blue-500/50 rounded-xl p-4 text-center hover:border-blue-400 transition-all duration-300\">\r\n                <div className=\"flex items-center justify-center mb-2\">\r\n                  <svg className=\"w-5 h-5 text-blue-400 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6Z\" />\r\n                  </svg>\r\n                  <span className=\"text-gray-300 text-sm font-medium\">Available</span>\r\n                </div>\r\n                <div className=\"text-white font-bold text-lg\">\r\n                  {ownerToFacility ? Number(ownerToFacility[1] - ownerToFacility[2]) : 0}\r\n                </div>\r\n                <div className=\"text-blue-400 text-xs font-semibold\">SPACES</div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* HASH Balance */}\r\n            <div className=\"relative group sm:col-span-2 lg:col-span-1\">\r\n              <div className=\"absolute inset-0 bg-gradient-to-r from-green-500/20 to-emerald-400/20 rounded-xl blur-sm group-hover:blur-md transition-all duration-300\"></div>\r\n              <div className=\"relative bg-gray-800/80 backdrop-blur-sm border-2 border-green-500/50 rounded-xl p-4 text-center hover:border-green-400 transition-all duration-300\">\r\n                <div className=\"flex items-center justify-center mb-2\">\r\n                  <svg className=\"w-5 h-5 text-green-400 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z\" />\r\n                  </svg>\r\n                  <span className=\"text-gray-300 text-sm font-medium\">HASH Tokens</span>\r\n                </div>\r\n                <div className=\"text-white font-bold text-lg\">\r\n                  {tokenBalance ? Number.parseFloat(ethers.formatEther(tokenBalance)).toFixed(2) : \"0.00\"}\r\n                </div>\r\n                <div className=\"text-green-400 text-xs font-semibold\">HASH</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Statistics Section */}\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-2 mb-4\">\r\n            <div className=\"w-2 h-2 bg-gradient-to-r from-purple-500 to-pink-400 rounded-full\"></div>\r\n            <h2 className=\"text-transparent bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text font-bold text-xl lg:text-2xl\">\r\n              Statistics\r\n            </h2>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700/50 space-y-4\">\r\n            <div className=\"flex justify-between items-center py-3 border-b border-yellow-500/30\">\r\n              <span className=\"text-gray-300 font-medium text-lg\">You are mining</span>\r\n              <span className=\"text-yellow-400 font-bold text-lg\">\r\n                {playerHashcoinPerBlock\r\n                  ? formatNumber(Number.parseFloat(ethers.formatEther(playerHashcoinPerBlock)) * dailyBlocks)\r\n                  : \"--\"}{\" \"}\r\n                HASH/DAY\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between items-center py-3 border-b border-yellow-500/30\">\r\n              <span className=\"text-gray-300 font-medium text-lg\">Your hash rate is</span>\r\n              <span className=\"text-yellow-400 font-bold text-lg\">{hashRate ? Number(hashRate) : \"--\"} GH/S</span>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between items-center py-3\">\r\n              <span className=\"text-gray-300 font-medium text-lg\">Blocks until halving</span>\r\n              <span className=\"text-yellow-400 font-bold text-lg\">\r\n                {blocksUntilNextHalving ? blocksUntilNextHalving : \"--\"} BLOCKS\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Claim Section */}\r\n        <div className=\"relative\">\r\n          <div className=\"absolute inset-0 bg-gradient-to-r from-yellow-500/10 to-orange-400/10 rounded-2xl blur-xl\"></div>\r\n          <div className=\"relative bg-gradient-to-br from-gray-800/90 to-gray-900/90 backdrop-blur-sm rounded-2xl p-6 border border-yellow-500/30 text-center space-y-4\">\r\n            <div className=\"flex items-center justify-center mb-4\">\r\n              <svg className=\"w-8 h-8 text-yellow-400 mr-3\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M7,15H9C9,16.08 10.37,17 12,17C13.63,17 15,16.08 15,15C15,13.9 13.96,13.5 11.76,12.97C9.64,12.44 7,11.78 7,9C7,7.21 8.47,5.69 10.5,5.18V3H13.5V5.18C15.53,5.69 17,7.21 17,9H15C15,7.92 13.63,7 12,7C10.37,7 9,7.92 9,9C9,10.1 10.04,10.5 12.24,11.03C14.36,11.56 17,12.22 17,15C17,16.79 15.53,18.31 13.5,18.82V21H10.5V18.82C8.47,18.31 7,16.79 7,15Z\" />\r\n              </svg>\r\n              <h3 className=\"text-white font-bold text-xl lg:text-2xl\">Pending Rewards</h3>\r\n            </div>\r\n\r\n            <div className=\"bg-black/30 rounded-xl p-4 mb-4\">\r\n              <p className=\"text-gray-300 text-sm mb-2\">You Have Mined</p>\r\n              <p className=\"text-transparent bg-gradient-to-r from-yellow-400 to-orange-400 bg-clip-text font-bold text-2xl lg:text-3xl\">\r\n                {pendingRewards ? Number.parseFloat(ethers.formatEther(pendingRewards)).toFixed(2) : \"0.00\"} $HASH\r\n              </p>\r\n            </div>\r\n\r\n            <button\r\n              className=\"relative bg-gradient-to-r from-yellow-500 to-orange-400 hover:from-yellow-400 hover:to-orange-300 disabled:from-gray-600 disabled:to-gray-700 font-bold w-full py-4 text-amber-900 disabled:text-gray-400 text-lg px-6 rounded-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg hover:shadow-yellow-500/25 active:scale-95 disabled:hover:scale-100 disabled:cursor-not-allowed\"\r\n              onClick={handleClaim}\r\n              disabled={isClaiming}\r\n            >\r\n              <span className=\"relative z-10 flex items-center justify-center\">\r\n                {isClaiming && (\r\n                  <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-amber-900\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle\r\n                      className=\"opacity-25\"\r\n                      cx=\"12\"\r\n                      cy=\"12\"\r\n                      r=\"10\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"4\"\r\n                    ></circle>\r\n                    <path\r\n                      className=\"opacity-75\"\r\n                      fill=\"currentColor\"\r\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                    ></path>\r\n                  </svg>\r\n                )}\r\n                {isClaiming ? \"Claiming...\" : \"Claim Now\"}\r\n              </span>\r\n              {!isClaiming && (\r\n                <div className=\"absolute inset-0 bg-white/20 rounded-xl opacity-0 hover:opacity-100 transition-opacity duration-300\"></div>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n              <RightPanel />\r\n            </div>\r\n            <div className=\"relative mt-[92px] mb-[40px]\">\r\n              <div className=\"flex justify-center flex-wrap gap-3\">\r\n                {/* Twitter */}\r\n                <a\r\n                  href=\"https://twitter.com/hashlordz\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"flex  items-center gap-3 no-underline bg-[#0000009e] w-[200px] hover:bg-[#2a2c2f] rounded-lg px-4 py-2 transition duration-200\"\r\n                >\r\n                  <svg width=\"33\" height=\"33\" className='block' viewBox=\"0 0 33 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M32.492 16.2449C32.492 7.27199 25.218 -0.00201416 16.245 -0.00201416C7.27208 -0.00201416 -0.00195312 7.27199 -0.00195312 16.2449C-0.00195312 25.2179 7.27208 32.4919 16.245 32.4919C25.218 32.4919 32.492 25.2179 32.492 16.2449Z\" fill=\"#0EA5E9\" fill-opacity=\"0.3\" />\r\n                    <path d=\"M23.059 11.777C22.572 12.021 22.084 12.102 21.516 12.183C22.084 11.858 22.49 11.371 22.653 10.721C22.166 11.046 21.597 11.208 20.947 11.371C20.46 10.884 19.728 10.559 18.997 10.559C17.291 10.559 15.992 12.183 16.398 13.808C14.205 13.727 12.255 12.671 10.874 11.046C10.143 12.265 10.549 13.808 11.686 14.62C11.28 14.62 10.874 14.458 10.468 14.295C10.468 15.514 11.361 16.651 12.58 16.976C12.174 17.057 11.767 17.139 11.361 17.057C11.686 18.113 12.661 18.926 13.88 18.926C12.905 19.657 11.443 20.063 10.062 19.901C11.28 20.632 12.661 21.119 14.123 21.119C19.079 21.119 21.841 16.976 21.678 13.158C22.247 12.833 22.734 12.346 23.059 11.777Z\" fill=\"#73D5FF\" />\r\n                  </svg>\r\n                  <div className=\"text-white\">\r\n                    <p className=\"text-sm mb-0 font-semibold\">Twitter</p>\r\n                    <p className=\"text-xs mb-0 text-gray-400\">@hashlordz</p>\r\n                  </div>\r\n                </a>\r\n\r\n                {/* Discord */}\r\n                <a\r\n                  href=\"https://discord.gg/hashlordz\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"flex  items-center gap-3 no-underline bg-[#0000009e] w-[200px] hover:bg-[#2a2c2f] rounded-lg px-4 py-3 transition duration-200\"\r\n                >\r\n                  <svg width=\"33\" height=\"33\" viewBox=\"0 0 33 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M32.492 16.2449C32.492 7.27199 25.218 -0.00201416 16.245 -0.00201416C7.27208 -0.00201416 -0.00195312 7.27199 -0.00195312 16.2449C-0.00195312 25.2179 7.27208 32.4919 16.245 32.4919C25.218 32.4919 32.492 25.2179 32.492 16.2449Z\" fill=\"#0EA5E9\" fill-opacity=\"0.3\" />\r\n                    <path d=\"M23.059 11.777C22.572 12.021 22.084 12.102 21.516 12.183C22.084 11.858 22.49 11.371 22.653 10.721C22.166 11.046 21.597 11.208 20.947 11.371C20.46 10.884 19.728 10.559 18.997 10.559C17.291 10.559 15.992 12.183 16.398 13.808C14.205 13.727 12.255 12.671 10.874 11.046C10.143 12.265 10.549 13.808 11.686 14.62C11.28 14.62 10.874 14.458 10.468 14.295C10.468 15.514 11.361 16.651 12.58 16.976C12.174 17.057 11.767 17.139 11.361 17.057C11.686 18.113 12.661 18.926 13.88 18.926C12.905 19.657 11.443 20.063 10.062 19.901C11.28 20.632 12.661 21.119 14.123 21.119C19.079 21.119 21.841 16.976 21.678 13.158C22.247 12.833 22.734 12.346 23.059 11.777Z\" fill=\"#73D5FF\" />\r\n                  </svg>\r\n                  <div className=\"text-white\">\r\n                    <p className=\"text-sm mb-0 font-semibold\">Discord</p>\r\n                    <p className=\"text-xs mb-0 text-gray-400\">discord.gg/hashlordz</p>\r\n                  </div>\r\n                </a>\r\n\r\n                {/* Telegram */}\r\n                <a\r\n                  href=\"https://t.me/hashlordz\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"flex  items-center gap-3 no-underline bg-[#0000009e] w-[200px] hover:bg-[#2a2c2f] rounded-lg px-4 py-2 transition duration-200\"\r\n                >\r\n                  <svg width=\"34\" height=\"33\" viewBox=\"0 0 34 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M33.1689 16.2449C33.1689 7.27199 25.8949 -0.00201416 16.9219 -0.00201416C7.94899 -0.00201416 0.674988 7.27199 0.674988 16.2449C0.674988 25.2179 7.94899 32.4919 16.9219 32.4919C25.8949 32.4919 33.1689 25.2179 33.1689 16.2449Z\" fill=\"#3B82F6\" fill-opacity=\"0.3\" />\r\n                    <path d=\"M22.187 15.839V19.901C22.186 20.439 21.972 20.955 21.591 21.335C21.211 21.716 20.695 21.93 20.157 21.932H17.237C17.129 21.932 17.026 21.889 16.95 21.813C16.874 21.736 16.831 21.633 16.831 21.525C16.831 21.418 16.874 21.314 16.95 21.238C17.026 21.162 17.129 21.119 17.237 21.119H20.157C20.479 21.118 20.789 20.989 21.017 20.761C21.245 20.533 21.374 20.223 21.375 19.901V19.83C21.245 19.877 21.107 19.901 20.969 19.901H20.157C19.833 19.901 19.523 19.772 19.295 19.544C19.066 19.315 18.938 19.005 18.938 18.682V16.651C18.938 16.328 19.066 16.018 19.295 15.79C19.523 15.561 19.833 15.433 20.157 15.433H21.355C21.253 14.317 20.736 13.28 19.905 12.528C19.075 11.775 17.992 11.363 16.872 11.371H16.867C15.745 11.36 14.661 11.772 13.831 12.525C13 13.278 12.483 14.316 12.383 15.433H13.582C13.904 15.434 14.214 15.563 14.442 15.791C14.67 16.019 14.799 16.329 14.8 16.651V18.682C14.799 19.005 14.67 19.314 14.442 19.542C14.214 19.771 13.904 19.899 13.582 19.901H12.769C12.447 19.899 12.137 19.771 11.909 19.542C11.681 19.314 11.552 19.005 11.551 18.682V15.839C11.551 15.143 11.689 14.453 11.956 13.81C12.224 13.167 12.616 12.583 13.11 12.093C13.604 11.602 14.19 11.214 14.835 10.95C15.48 10.687 16.17 10.554 16.867 10.559H16.907C18.307 10.56 19.649 11.117 20.639 12.107C21.629 13.097 22.186 14.439 22.187 15.839Z\" fill=\"#3B82F6\" />\r\n                  </svg>\r\n                  <div className=\"text-white\">\r\n                    <p className=\"text-sm mb-0 font-semibold\">Telegram</p>\r\n                    <p className=\"text-xs mb-0 text-gray-400\">t.me/hashlordz</p>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </>\r\n          :\r\n          <>\r\n             <div className=\"flex items-center justify-center mt-[100px] p-4\">\r\n      <div className=\"relative bg-black/80 backdrop-blur-xl rounded-2xl p-8 text-center max-w-md w-full border border-white/10 shadow-2xl\">\r\n        {/* Decorative gradient border */}\r\n        <div className=\"absolute inset-0 rounded-2xl bg-gradient-to-r from-yellow-500/20 via-orange-400/20 to-yellow-500/20 blur-sm -z-10\"></div>\r\n\r\n        {/* Wallet icon */}\r\n        <div className=\"mx-auto w-16 h-16 bg-gradient-to-r from-yellow-500 to-orange-400 rounded-full flex items-center justify-center mb-6\">\r\n          <svg className=\"w-8 h-8 text-amber-900\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <h2 className=\"text-white font-bold text-3xl mb-3 bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent\">\r\n          Connect Your Wallet\r\n        </h2>\r\n\r\n        <p className=\"text-gray-400 mb-8 text-lg leading-relaxed\">\r\n          Securely connect your wallet to start your mining journey and unlock exclusive features.\r\n        </p>\r\n\r\n        <button\r\n          onClick={openConnectModal}\r\n          className=\"relative bg-gradient-to-r from-yellow-500 to-orange-400 hover:from-yellow-400 hover:to-orange-300 font-bold w-full py-4 text-amber-900 text-lg px-6 rounded-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg hover:shadow-yellow-500/25 active:scale-95\"\r\n        >\r\n          <span className=\"relative z-10\">Connect Wallet</span>\r\n          <div className=\"absolute inset-0 bg-white/20 rounded-xl opacity-0 hover:opacity-100 transition-opacity duration-300\"></div>\r\n        </button>\r\n\r\n        {/* Security note */}\r\n        <div className=\"mt-6 flex items-center justify-center text-gray-500 text-sm\">\r\n          <svg className=\"w-4 h-4 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,7C13.4,7 14.8,8.6 14.8,10V11H16V18H8V11H9.2V10C9.2,8.6 10.6,7 12,7M12,8.2C11.2,8.2 10.4,8.7 10.4,10V11H13.6V10C13.6,8.7 12.8,8.2 12,8.2Z\" />\r\n          </svg>\r\n          Your connection is secure and encrypted\r\n        </div>\r\n      </div>\r\n    </div>\r\n          </>\r\n      }\r\n\r\n    </Layout>\r\n  )\r\n}\r\n"],"names":["MAIN_NET","TEST_NET","HASH_ADDRESS_TEST","HASH_ADDRESS_MAIN","MINER_ADDRESS_TEST","MINER_ADDRESS_MAIN","UNIT256_MAX","Referral","chainId","useChainId","isConnected","address","useAccount","referralLink","setReferralLink","useState","data","referredUsers","refetch","refetchReferredUsers","useReadContract","abi","MinerAbi","functionName","args","zeroAddress","referralBonusPaid","refetchReferralBonusPaid","console","log","useEffect","window","location","origin","_jsx","className","children","_jsxs","length","parseFloat","ethers","toFixed","onClick","handleCopy","navigator","clipboard","writeText","toast","success","Space","_activeItem$id$toStri","_activeItem$level$toS","_activeItem$hashrate$","_activeItem$id$toStri2","_activeItem$level$toS2","activeItem","setActiveItem","selectedItem","setSelectedItem","selectedAvailableItem","setSelectedAvailableItem","isUpgradingSpace","setIsUpgradingSpace","isUpgradingMiner","setIsUpgradingMiner","isStopingMiner","setIsStopingMiner","isStartingMiner","setIsStartingMiner","showModal","setShowModal","showStartMiningModal","setShowStartMiningModal","txResult","writeContractAsync","useWriteContract","openConnectModal","useConnectModal","disconnect","useDisconnect","balance","refetchBalance","useBalance","tokenBalance","refetchTokenBalance","HashAbi","approvedTokenAmount","refetchApprovedTokenAmount","playerMinersPaginated","refetchPlayerMinersPaginated","ownerToFacility","refetchOwnerToFacility","getAmountFor2","refetchGetAmountFor2","getAmountFor3","refetchGetAmountFor3","leafCost","refetchLeafCost","steelCost","refetchSteelCost","diamondCost","refetchDiamondCost","timeUntilNextFacilityUpgrade","refetchTimeUntilNextFacilityUpgrade","playerMiners","filter","item","Number","x","availableMiners","id","toString","level","hashrate","src","minerIndex","ImgHumar1","ImgHumar2","ImgHumar3","alt","_Fragment","map","index","event","find","i","parseInt","error","stopPropagation","async","value","minerId","then","setTimeout","catch","err","handleStopMining","tokenAmount","handleUpgradeLevel","_availableMiners$sele","_availableMiners$sele2","price","setPrice","isPurchasingMiner","setIsPurchasingMiner","isListingMiner","setIsListingMiner","showSellModal","setShowSellModal","handleBuyMiner","getMinerTypeColor","getMinerTypeName","getMinerImage","ImgLeaf","ImgSteel","ImgDiamond","disabled","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","type","placeholder","onChange","e","target","isNaN","handleSellMiner","ary","Array","from","_","isCancelling","isBuying","Marketplace","playerMinersOwned","refetchPlayerMinersOwned","selfMiners","setSelfMiners","otherMiners","setOtherMiners","btnStatus","setBtnStatus","undefined","selfMinersTemp","otherMinersTemp","forEach","owner","toLowerCase","push","handleCancelListing","temp","handleBuying","EmptyState","_ref","message","icon","MinerCard","_ref2","_btnStatus$index","_btnStatus$index2","_btnStatus$index3","_btnStatus$index4","miner","isOwned","minerType","getMinerType","minerImage","typeColor","typeBg","getMinerTypeBg","sellPrice","SpacePanel","activeTab","setActiveTab","tab","Store","nftAnimationStyle","document","createElement","innerHTML","head","appendChild","useRefresh","fast","slow","useContext","RefreshContext","fastRefresh","slowRefresh","BuySpace","searchParams","useSearchParams","initialFacilityPrice","refetchInitialFacilityPrice","isPurchasingInitialFacility","setIsPurchasingInitialFacility","referrer","setReferrer","get","referrerTemp","Imag1","RightPanel","useMediaQuery","initializedStarterFacility","refetchInitializedStarterFacility","dailyBlocks","BettingPage","hashRate","refetchPlayerHashrate","blocksUntilNextHalving","refetchBlocksUntilNextHalving","pendingRewards","refetchPendingRewards","playerHashcoinPerBlock","refetchPlayerHashcoinPerBlock","isClaiming","setIsClaiming","Layout","num","finally","href","rel","width","height","xmlns"],"sourceRoot":""}